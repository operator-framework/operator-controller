env:
- GOPROXY=https://proxy.golang.org|direct
- GO111MODULE=on
- CGO_ENABLED=0
before:
  hooks:
    - go mod tidy
    - go mod download
builds:
  - id: operator-controller
    main: ./
    binary: bin/manager
    tags: upstream
    goos:
    - linux
    goarch:
    - amd64
    - arm64
    - ppc64le
    - s390x
    ldflags:
    - -X main.Version={{ .Version }}
dockers:
- image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-amd64"
  dockerfile: Dockerfile
  goos: linux
  goarch: amd64
- image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-arm64"
  dockerfile: Dockerfile
  goos: linux
  goarch: arm64
- image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-ppc64le"
  dockerfile: Dockerfile
  goos: linux
  goarch: ppc64le
- image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-s390x"
  dockerfile: Dockerfile
  goos: linux
  goarch: s390x
docker_manifests:
- name_template: "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}"
  image_templates:
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-amd64"
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-arm64"
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-ppc64le"
    - "{{ .Env.IMAGE_REPO }}:{{ .Env.IMAGE_TAG }}-s390x"
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  use: github-native
  skip: '{{ ne .Env.ENABLE_RELEASE_PIPELINE "true" }}'
release:
  disable: '{{ ne .Env.ENABLE_RELEASE_PIPELINE "true" }}'
  extra_files:
  - glob: 'install.sh'
  - glob: 'operator-controller.yaml'
  - glob: 'install.sh'
  header: |
    ## Installation

    ```bash
    curl -sSL https://github.com/operator-framework/operator-controller/releases/download/{{ .Env.IMAGE_TAG }}/install.sh | bash -s
    ```

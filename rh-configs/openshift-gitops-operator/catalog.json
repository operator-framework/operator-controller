{
    "schema": "olm.package",
    "name": "openshift-gitops-operator",
    "defaultChannel": "latest",
    "icon": {
        "base64data": "",
        "mediatype": "image/png"
    }
}
{
    "schema": "olm.channel",
    "name": "gitops-1.10",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.10.0",
            "replaces": "openshift-gitops-operator.v1.9.2",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.1",
            "replaces": "openshift-gitops-operator.v1.10.0",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.2",
            "replaces": "openshift-gitops-operator.v1.10.1"
        },
        {
            "name": "openshift-gitops-operator.v1.10.3",
            "replaces": "openshift-gitops-operator.v1.10.2"
        },
        {
            "name": "openshift-gitops-operator.v1.10.4",
            "replaces": "openshift-gitops-operator.v1.10.3"
        },
        {
            "name": "openshift-gitops-operator.v1.10.5",
            "replaces": "openshift-gitops-operator.v1.10.4"
        },
        {
            "name": "openshift-gitops-operator.v1.10.6",
            "replaces": "openshift-gitops-operator.v1.10.5"
        },
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.11",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.10.0",
            "replaces": "openshift-gitops-operator.v1.9.2",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.1",
            "replaces": "openshift-gitops-operator.v1.10.0",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.0",
            "replaces": "openshift-gitops-operator.v1.10.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.1",
            "replaces": "openshift-gitops-operator.v1.11.0",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.2",
            "replaces": "openshift-gitops-operator.v1.11.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.3",
            "replaces": "openshift-gitops-operator.v1.11.2"
        },
        {
            "name": "openshift-gitops-operator.v1.11.4",
            "replaces": "openshift-gitops-operator.v1.11.3"
        },
        {
            "name": "openshift-gitops-operator.v1.11.5",
            "replaces": "openshift-gitops-operator.v1.11.4"
        },
        {
            "name": "openshift-gitops-operator.v1.11.6",
            "replaces": "openshift-gitops-operator.v1.11.5"
        },
        {
            "name": "openshift-gitops-operator.v1.11.7"
        },
        {
            "name": "openshift-gitops-operator.v1.11.7-0.1724840231.p",
            "replaces": "openshift-gitops-operator.v1.11.6",
            "skips": [
                "openshift-gitops-operator.v1.11.7"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.12",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.10.0",
            "replaces": "openshift-gitops-operator.v1.9.2",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.1",
            "replaces": "openshift-gitops-operator.v1.10.0",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.0",
            "replaces": "openshift-gitops-operator.v1.10.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.1",
            "replaces": "openshift-gitops-operator.v1.11.0",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.2",
            "replaces": "openshift-gitops-operator.v1.11.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.12.0",
            "replaces": "openshift-gitops-operator.v1.11.2",
            "skipRange": ">=1.0.0 <1.12.0"
        },
        {
            "name": "openshift-gitops-operator.v1.12.1",
            "replaces": "openshift-gitops-operator.v1.12.0"
        },
        {
            "name": "openshift-gitops-operator.v1.12.2",
            "replaces": "openshift-gitops-operator.v1.12.1"
        },
        {
            "name": "openshift-gitops-operator.v1.12.3",
            "replaces": "openshift-gitops-operator.v1.12.2"
        },
        {
            "name": "openshift-gitops-operator.v1.12.4",
            "replaces": "openshift-gitops-operator.v1.12.3"
        },
        {
            "name": "openshift-gitops-operator.v1.12.5"
        },
        {
            "name": "openshift-gitops-operator.v1.12.5-0.1727371523.p",
            "replaces": "openshift-gitops-operator.v1.12.4",
            "skips": [
                "openshift-gitops-operator.v1.12.5"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.12.6",
            "replaces": "openshift-gitops-operator.v1.12.5-0.1727371523.p"
        },
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.13",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.10.0",
            "replaces": "openshift-gitops-operator.v1.9.2",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.1",
            "replaces": "openshift-gitops-operator.v1.10.0",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.0",
            "replaces": "openshift-gitops-operator.v1.10.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.1",
            "replaces": "openshift-gitops-operator.v1.11.0",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.2",
            "replaces": "openshift-gitops-operator.v1.11.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.12.0",
            "replaces": "openshift-gitops-operator.v1.11.2",
            "skipRange": ">=1.0.0 <1.12.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.0",
            "replaces": "openshift-gitops-operator.v1.12.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.1",
            "replaces": "openshift-gitops-operator.v1.13.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.2",
            "replaces": "openshift-gitops-operator.v1.13.1"
        },
        {
            "name": "openshift-gitops-operator.v1.13.3",
            "replaces": "openshift-gitops-operator.v1.13.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.14",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.10.0",
            "replaces": "openshift-gitops-operator.v1.9.2",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.1",
            "replaces": "openshift-gitops-operator.v1.10.0",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.0",
            "replaces": "openshift-gitops-operator.v1.10.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.1",
            "replaces": "openshift-gitops-operator.v1.11.0",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.2",
            "replaces": "openshift-gitops-operator.v1.11.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.12.0",
            "replaces": "openshift-gitops-operator.v1.11.2",
            "skipRange": ">=1.0.0 <1.12.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.0",
            "replaces": "openshift-gitops-operator.v1.12.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.1",
            "replaces": "openshift-gitops-operator.v1.13.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.0",
            "replaces": "openshift-gitops-operator.v1.13.1",
            "skipRange": ">=1.0.0 <1.14.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.1",
            "replaces": "openshift-gitops-operator.v1.14.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.2",
            "replaces": "openshift-gitops-operator.v1.14.1"
        },
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.15",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.10.0",
            "replaces": "openshift-gitops-operator.v1.9.2",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.1",
            "replaces": "openshift-gitops-operator.v1.10.0",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.0",
            "replaces": "openshift-gitops-operator.v1.10.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.1",
            "replaces": "openshift-gitops-operator.v1.11.0",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.2",
            "replaces": "openshift-gitops-operator.v1.11.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.12.0",
            "replaces": "openshift-gitops-operator.v1.11.2",
            "skipRange": ">=1.0.0 <1.12.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.0",
            "replaces": "openshift-gitops-operator.v1.12.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.1",
            "replaces": "openshift-gitops-operator.v1.13.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.0",
            "replaces": "openshift-gitops-operator.v1.13.1",
            "skipRange": ">=1.0.0 <1.14.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.1",
            "replaces": "openshift-gitops-operator.v1.14.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.2",
            "replaces": "openshift-gitops-operator.v1.14.1"
        },
        {
            "name": "openshift-gitops-operator.v1.15.0",
            "replaces": "openshift-gitops-operator.v1.14.2",
            "skipRange": ">=1.0.0 <1.15.0"
        },
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.6",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.6.4",
            "replaces": "openshift-gitops-operator.v1.6.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.5",
            "replaces": "openshift-gitops-operator.v1.6.4"
        },
        {
            "name": "openshift-gitops-operator.v1.6.6",
            "replaces": "openshift-gitops-operator.v1.6.5"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.7",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.3",
            "replaces": "openshift-gitops-operator.v1.7.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.4"
        },
        {
            "name": "openshift-gitops-operator.v1.7.4-0.1690486082.p",
            "replaces": "openshift-gitops-operator.v1.7.3",
            "skips": [
                "openshift-gitops-operator.v1.7.4"
            ]
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.8",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.8.4"
        },
        {
            "name": "openshift-gitops-operator.v1.8.4-0.1693214052.p",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skips": [
                "openshift-gitops-operator.v1.8.4"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.8.5",
            "replaces": "openshift-gitops-operator.v1.8.4-0.1693214052.p"
        },
        {
            "name": "openshift-gitops-operator.v1.8.6",
            "replaces": "openshift-gitops-operator.v1.8.5"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "gitops-1.9",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        },
        {
            "name": "openshift-gitops-operator.v1.9.3",
            "replaces": "openshift-gitops-operator.v1.9.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.4",
            "replaces": "openshift-gitops-operator.v1.9.3"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "latest",
    "package": "openshift-gitops-operator",
    "entries": [
        {
            "name": "openshift-gitops-operator.v1.10.0",
            "replaces": "openshift-gitops-operator.v1.9.2",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.10.1",
            "replaces": "openshift-gitops-operator.v1.10.0",
            "skipRange": ">=1.0.0 <1.10.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.0",
            "replaces": "openshift-gitops-operator.v1.10.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.1",
            "replaces": "openshift-gitops-operator.v1.11.0",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.11.2",
            "replaces": "openshift-gitops-operator.v1.11.1",
            "skipRange": ">=1.0.0 <1.11.0"
        },
        {
            "name": "openshift-gitops-operator.v1.12.0",
            "replaces": "openshift-gitops-operator.v1.11.2",
            "skipRange": ">=1.0.0 <1.12.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.0",
            "replaces": "openshift-gitops-operator.v1.12.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.13.1",
            "replaces": "openshift-gitops-operator.v1.13.0",
            "skipRange": ">=1.0.0 <1.13.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.0",
            "replaces": "openshift-gitops-operator.v1.13.1",
            "skipRange": ">=1.0.0 <1.14.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.1",
            "replaces": "openshift-gitops-operator.v1.14.0"
        },
        {
            "name": "openshift-gitops-operator.v1.14.2",
            "replaces": "openshift-gitops-operator.v1.14.1"
        },
        {
            "name": "openshift-gitops-operator.v1.15.0",
            "replaces": "openshift-gitops-operator.v1.14.2",
            "skipRange": ">=1.0.0 <1.15.0"
        },
        {
            "name": "openshift-gitops-operator.v1.5.2",
            "skipRange": ">=1.0.0 <1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.3",
            "replaces": "openshift-gitops-operator.v1.5.2"
        },
        {
            "name": "openshift-gitops-operator.v1.5.4",
            "replaces": "openshift-gitops-operator.v1.5.3"
        },
        {
            "name": "openshift-gitops-operator.v1.6.0",
            "replaces": "openshift-gitops-operator.v1.5.4",
            "skipRange": ">=1.0.0 <1.6.0"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1"
        },
        {
            "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
            "replaces": "openshift-gitops-operator.v1.6.0",
            "skips": [
                "openshift-gitops-operator.v1.6.1"
            ]
        },
        {
            "name": "openshift-gitops-operator.v1.6.2",
            "replaces": "openshift-gitops-operator.v1.6.1-0.1666124167.p"
        },
        {
            "name": "openshift-gitops-operator.v1.6.3",
            "replaces": "openshift-gitops-operator.v1.6.2"
        },
        {
            "name": "openshift-gitops-operator.v1.7.0",
            "replaces": "openshift-gitops-operator.v1.6.3",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.1",
            "replaces": "openshift-gitops-operator.v1.7.0",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.7.2",
            "replaces": "openshift-gitops-operator.v1.7.1",
            "skipRange": ">=1.0.0 <1.7.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.0",
            "replaces": "openshift-gitops-operator.v1.7.2",
            "skipRange": ">=1.0.0 <1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.1",
            "replaces": "openshift-gitops-operator.v1.8.0"
        },
        {
            "name": "openshift-gitops-operator.v1.8.2",
            "replaces": "openshift-gitops-operator.v1.8.1"
        },
        {
            "name": "openshift-gitops-operator.v1.8.3",
            "replaces": "openshift-gitops-operator.v1.8.2"
        },
        {
            "name": "openshift-gitops-operator.v1.9.0",
            "replaces": "openshift-gitops-operator.v1.8.3",
            "skipRange": ">=1.0.0 <1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.1",
            "replaces": "openshift-gitops-operator.v1.9.0"
        },
        {
            "name": "openshift-gitops-operator.v1.9.2",
            "replaces": "openshift-gitops-operator.v1.9.1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.10.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3d6763adf8b705ccf29a36e14aa541793c08aecaa384e15d795bfac86fa9417e",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.10.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.10.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.8.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:94225b471f6befedf64a8e4e12f777059f0dc39ef7a9eb7030f168ced06e6dec"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:84d6d72c30f7eb877e6036ea1623766ac7cddc0e4639198f249dcadc3b605dc3"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:9aaffb8d856177454c59d05772b75c4f7f4416162bf63243b8c04146f9fb4309"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:62459d647b69c6fa0deebb9494cf7f874ec414742535b86109f680596077bd0f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3d6763adf8b705ccf29a36e14aa541793c08aecaa384e15d795bfac86fa9417e"
        },
        {
            "name": "gitops-rhel8-operator-7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7c4296aa0d1c8d3edc2a1f6f9f4243b2bab415c05b61468a9abc7f2497f1dd87"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:a28832792d8f10264fdc4035efd75853e8edee7a5f6688204166d42fe67c7c0f"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:8576c7e6e548c5b032432f387d1468a5ea9c48d189250aa00c710ed1a28cbbbf"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:05a71242731d34b45e19f987ad96de9d32b6f731762312629f7fe3333f2f6ce5"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.10.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:954733d0c9c77cd42e65fcaa6b4b6f9295b5d43d2d81cecd82758f88ef2eb07c",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.10.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.10.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.8.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:52fb71b858a52c10e83146075bfb9346823b5c88991e11e76fe5d05d23447c54"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f341b0cf5544e2367b5c75f3e69fd756ef46b752603b8efb05697780d47a6385"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:f4f549765e94a737e8fd6b45791f92f85d6b53a9caa72d4d8fd5c897da8eb5c9"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:51aaec5bc3f0d41567feb7a1d96bcde031f3425a074b1ac214fae985be984985"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:954733d0c9c77cd42e65fcaa6b4b6f9295b5d43d2d81cecd82758f88ef2eb07c"
        },
        {
            "name": "gitops-rhel8-operator-8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8c1851181845f5642ac45b726eac884c8590abd5811429830fb61b0c129e11e9"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:18a9c1b11d4a98229e2b4677bbc9e70ffa75d328c93fa9271e8f8ef271b65f07"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:185a220575c83072450d4727e23566ab7196303eb0ef0a103e09495103cc89d8"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:8b451b3245307f649798d85e2695f32d3e8909cb889a5f8fbc82971807d0550b"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:53d3620bb0490d83aaf6a356bb7d3b9e7147222d1a2017f8317f05fa90cd3de9"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.10.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:068284fc4f37d48851394b4f966065cec1abb8b8f291f147a02d932f151bd5bd",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.10.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.8.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:cbd0191606c0b6829e961ee150c402d958ace15eb227070be9b85a1baf43cd07"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:7228ca838842043c8d03d329515f32f17b6a0a7f54733e72d8256156ab9ccdbd"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:c00e4e56da8fcd4f10bbcf7c25fc083c2ce4a5760d01553dae2c25cf119eb740"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:582ad9d994aded118b3a9e3efa07114e9f0d905ba7cde3bd24bb70a117b02a49"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:068284fc4f37d48851394b4f966065cec1abb8b8f291f147a02d932f151bd5bd"
        },
        {
            "name": "gitops-rhel8-operator-3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3c214744dc34dbfc049cfc34f1cfb921c0dbff0f6ba8f8c5f21754bcc15cdbe2"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3e4220ed171adaa7eb7a0246b9e31d0618d7a7fe382f6bdae0f98eb163b97ce8"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e38482fa28d9eb0c6bdded7b7a45521d3f650e2f8af5525c9581646ffba06f6e"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:9d2a2f41f5de2a3f157c8a5411dd04fe598082ee83840198508468da3559983e"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4a3a76792d91621f3e030ba96504e4098ec71e80856660f15a91643bb73e9d66"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.10.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e2f3dd4c2fd8f4b96cc52a16bd5f8612ae50286f1f828e3046803132827a744e",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.10.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.8.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:3529974f7ff19643f4b4dfd83a148342fbb867577c36c876fc6c3a8b20552cfc"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:546afe8958ce4951ba408f892b81a876a9c6a03c27050069ae8157708a268bca"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:18ce53864b6409de81ef453c8c798c52552f9bf0270d190667d7893b8562dab7"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:0f05921d56f32f02992e6f6fd0704591821c2e004acf50bac88a5883d814e845"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e2f3dd4c2fd8f4b96cc52a16bd5f8612ae50286f1f828e3046803132827a744e"
        },
        {
            "name": "gitops-rhel8-operator-3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f6f7b22d405e638e0ffe661998416d40eeb1b9ba79ab606b7ca4a7cd756cf86"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:4243b76608f075e73a1ef2f6154d114942e08ccd8a4f6adb50f35c0ca7d44b53"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:9d0e7b689abc6232e369cb9834c1de85c1a93d6d9af1b484137fe5f55fd5e671"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:1ffb1c4df1108fbb35fb0a50fa2df76b9c4937afde88cba7fdaf71e66d851c62"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:48cf6065279581d33647ab384b9b22c444cab82d3da729f51b34af29cd8987ec"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.10.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:caae910cb099a74d24e3eab649231240bbb2064c8dcb059efeec5cd25b78602e",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.10.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.8.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:31bc37e53d133b22a29e56723f30d5047318e3b0e967d691432f6ef33a82347f"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:65ba3be6730c6726301cc44d148ae921129054251f350a985e4263619c4d0a7b"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:ffd6b3f3ff1589d0890f0d7d854792423a91d24dfb5b4980beee06223d9962bc"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:d2cec373b71e17082f4eccc6753a3c045b8851c3b5aa4a0a5c95d3cc6e7ba468"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:caae910cb099a74d24e3eab649231240bbb2064c8dcb059efeec5cd25b78602e"
        },
        {
            "name": "gitops-rhel8-operator-16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:16f7ee646136fc32cf67bfbe10688ee578e9fa3eecbb03b20e13eca2883ecec6"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f10dbb128551f99e47625c12791eae697c78b93db263d8f337d207d518ab16ba"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:769d1f1c6c2111b17b619a526b3c67718c3f2c32231673157b43b017d58aa0f4"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:7e1104c6a789d482cee84afa8f6dcec82404537cf41f28a0165210a05a6ace89"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.10.5",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed2a8efb4fc40d2d6a09ceecaa0f16d6bea139e2d7afae6ba85dbae356daf59b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.10.5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.8.18\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:1253e8d1275f86da833366c69419cac77ae15cdbab596391102762ce950d1957"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:6821ba7a3b8d83c612be44c4da08f9b81c37c1fd678c88ef4fe7bebad7eebac3"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:92592634e85e605d9109a5daafecd26f1e9aa1cd6b017f1061b1afcc3afa89ee"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:2f412b1ff49de79fb093ab0729b55f9fa30a94033b218bbec66924fcc93b173f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed2a8efb4fc40d2d6a09ceecaa0f16d6bea139e2d7afae6ba85dbae356daf59b"
        },
        {
            "name": "gitops-rhel8-operator-14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:14311513676d0e31726177bdb74298a7bacc25f94afdd11689ab5cf5c31145aa"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f958e855e3d1f5e453e8a1051f7ace2ab0d72e1dd9d6e818fbae0cb8ddc0c79a"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:67d034b21c0639843abe3379e061bc5f025c88965ad2b8b40b7017e98fe2eb43"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:dee7434207fbc9d6659e627dc65a0296cfecb325373408b7619550a318c7876a"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d3d498d1e716abe32ee8f561888966f5fa89a27d1426b6c0e0ec856e6a43d13c"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.10.6",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed530db9b4a29fb591ea208cd0c6b3b83b49537ff5a0a4f501b54ce667f9b303",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.10.6"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.8.19\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:b5c8a6c7438a45125fc7fd970946f715ab7193b7446d625fae80dde9d1f3f914"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:4c842f0ea8f0e9b53eb16d94488fc2f4298bd8e4be2f48713be9157da24549e6"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:c779ad87a7f71d851c2af818abf16e5151c43d3fd54e64eac2fc7117c00753f5"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:a74e0a1fe3589ebe9f226a2bad20e9a5d5601a0e62c5f3290902f466f55b7160"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ed530db9b4a29fb591ea208cd0c6b3b83b49537ff5a0a4f501b54ce667f9b303"
        },
        {
            "name": "gitops-rhel8-operator-b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b0dc693854319ada341e2e3872b34d7db9823b470ed369edfde88d3ae73a40e1"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:2bec31b0c5407ffcecfd8b860d8afb1629eaab31a250f60191f94a824e0a52f4"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:ece2fee4227ad1becadca47028b78ceaf8717a98ec84e3f1b5188a135c4b093c"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:0905ba3f5cf87780a1e95b6a00ea7cd340d4ed1b5054e4b2c82406270baeaefa"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d35dff5d59e748ef0404e7e76b0237ea96b2bb19b86fa04a3a34df7a379277b2"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ecc73c11bf2519f12239cca8b3eda47677e1dab70280b939585b94ccafa67166",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.11.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.2\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:026ccacb28b3467c1c4d87c16d599667ca6ef1d88e6f7be5d109c9e1beb7343d"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:bcd14086b093332f543516762227252069de535ef4590afc87f82785bc1b1791"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:dbbc313d051eaf2684f2c41bfe78a02a1fe5c587a40f3f3b5cde7dd5302616af"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:eda6b79cc8d138e83c21a2095b7c95662d4a6d748813889bad55ffb102605dc3"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ecc73c11bf2519f12239cca8b3eda47677e1dab70280b939585b94ccafa67166"
        },
        {
            "name": "gitops-rhel8-operator-84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84460b4a8d7b8c28f7729e3173c93fbfada30fd4390acbfb7fb21ae463707a34"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:95a6a988028479e7bb8b9998590decf932b063780fb4a01427f1872c651ee3f2"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:429179e1b981769c179d6b99108796c5b11d75c2dcd468831b853974dfd1ad01"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:82b3064dd6199763c5197ed176f2002e6a8b6044749ac9568cf0b6148a5a2003"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a8ad0e76ce4cae9f9b36aecf125c4ed56fc2d776fe3df113d41bfc1c2f8b3602"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:421fe7d0784d75becc79de029884306a0ec893e6dc73d437b206881e0905009b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.11.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:6b5928b6815b9fa65d30d50c4d217215a74066fbc8995f5fad33198f4eb03f2b"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:72cad8e848d595a9739d41491bc2a84686395e0628f5014c101f7aabdcf423f2"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:7e1846ea50255c4dc227cf282239cd9da9569f8ee78c0542fdfb2ec77cec53d0"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:1c09e217b4ea68959e381e233e56a586d18d673069acdc027a86d6ece4e17e77"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:421fe7d0784d75becc79de029884306a0ec893e6dc73d437b206881e0905009b"
        },
        {
            "name": "gitops-rhel8-operator-e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e81cd0c322bd50da28668848f56b6315700438c482251897eaeecc7c4d6cd7b1"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:ea8d078f9a1743fdffe53b8dd69c73f85e79da04ce596bc2d434be79795ff237"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:7bd0853dcd91f2a9feab6dc458cbdd2a24fc6407ca2d97310ba47c65fe6f514a"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:52245e51ae9eb08c3e163740c28137e6ab0221830b1342abf80b86fdcb0579a8"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4a3a76792d91621f3e030ba96504e4098ec71e80856660f15a91643bb73e9d66"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:32efac25ae3acebe9de6252c9ed46c3e8f3011bed3353b8ec6a88457a026d80a",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=1.0.0 <1.11.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.8\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:21327966aef0f4fa235273c0bb304dd563df0944e2e37d914d67d3eeb8f03d38"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:b71cd1a4bf1aed9ed9a95d2507880027b97de68dbfd1b7ee85c127d8d73b0d62"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:7823c91b9a3c5c6f3ae8c55997071a70afe6127badd50ebefc05cca6a35f437e"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:516302ae0c1c13adc786e1813565166bf6b3742b60842f6e4285713ccc645bd8"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:32efac25ae3acebe9de6252c9ed46c3e8f3011bed3353b8ec6a88457a026d80a"
        },
        {
            "name": "gitops-rhel8-operator-2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2d45b60bd9935ece507243d7e1fa5ba52dfed4efef350f65e7213e46eb887123"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:cd650997edf73e47f21547c531ed2c6ffd21d7bbff44757db82823c8cfec9d97"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:1059b73fcd6c7f69f31f85b5935cf0f397a8fa5dd1d2b6e471946390cf35b1a3"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:50831879220452248d2402712c6d14a5954521b3fe271078f10b0e97077ee041"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:48cf6065279581d33647ab384b9b22c444cab82d3da729f51b34af29cd8987ec"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:648d9e94bd34d93d425132a80b445cc2113f8068c803deb1c241fe73e1b21b56",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:57ed4e985ada9a24f97d47fb999501152302860f387c751b860e121f5b7d9533"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:97ef10c9991f23d9c36c03857c507972861147e1586fc036345387289dad0319"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:bb253ca58777758c7ec6718f0a229df40b66a9b32faa5c9a6344b581b6503175"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:d9be2a653a5193dfdfaf33b2de16ac76ddb19392cc261f13de9b44768998959a"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:648d9e94bd34d93d425132a80b445cc2113f8068c803deb1c241fe73e1b21b56"
        },
        {
            "name": "gitops-rhel8-operator-263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:263d1cac41e8eef23022f2196d52ef835c9fbb7dac0c39d7928d0fb48f26f5f8"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:079c21577967b8328eefd09763b375f72ccaf0a03c418f98553f14e809c1938f"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e53754f4808ca9576edb583ae3c18572085068133d052d2857666f8e935b28cf"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:1e7b2df6b7cae5116ea4769fff22225de1b943d6e1f938588b8aec9658fe2a88"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d8d9a224745f1952819cf831620d5b4ef08f905d80b33d66e4043e5b0163b06a",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:899b56e094a3089b527d09b75216c68ca1d3718ba6033efb94e3790370089f1d"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:bbba00b566fdedbd0fe92e879aa7d0b23b1103c52e23c309e7a20c7616b845ff"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:6a007e20bbdc4dc5ac065586dcadf4eda0e23804596d7116b8673a145ebac644"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:45779bafaab790b1ecbabe1806326669d05e3861574a03650e57df1ddd5895c0"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d8d9a224745f1952819cf831620d5b4ef08f905d80b33d66e4043e5b0163b06a"
        },
        {
            "name": "gitops-rhel8-operator-f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f8f03f2f92dca3896b6b30352d952f736178b604756d095b48e53228550ade2f"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:82961e62b846ae5d62e2fbf8c215a4a4d7217f2846f258d5054072bfe3ef84cc"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:108499d60ed3ded63866986a66c26ed6a435e0d61d7ac917bfe7a72224af8545"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:49d863d92f298f5fd17b64815d7e5bd4c9ee22090497e62e7129c1aec2757f71"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d3d498d1e716abe32ee8f561888966f5fa89a27d1426b6c0e0ec856e6a43d13c"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.5",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:88a72e0653b7393fc6857838932415a53c1e7592203eebb8ebde5a66ea5b8bb8",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.15\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:5cb593d8cd293e27d43d6a4c06a8ddb79b4988c6de9a8ebf3839135a15813551"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:25b5f3e1cacec7d92a713a2e5f63868a223e5422efa9d609d94229c50a94fd60"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:4c8baf9babb83b1269af0f93f392ad76df9abe22757183f125bd33f28ca49377"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:57eb61c6526caf5d71c5c3ff2dc189d2c39791e1cd50633cd8636f60bf068524"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:88a72e0653b7393fc6857838932415a53c1e7592203eebb8ebde5a66ea5b8bb8"
        },
        {
            "name": "gitops-rhel8-operator-b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b065691bb456763ddce85770c917ee6548137a9f687dd3c5e64ae31770383967"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f0defae99e528b6b42fff97ec3d51a04c1b3b59e2c7b0aefc7ababd4c86ab99e"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:e1066315858056bdf5eca641ba26a7ed38bfc420eb843ca1e0334d6769a85268"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:2298b6bd82d6e8df7c2325edcb53462b290979623195d78245b154c7153eaa07"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d35dff5d59e748ef0404e7e76b0237ea96b2bb19b86fa04a3a34df7a379277b2"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.6",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9357bd76c40ce6d7fdf72075b7a8c0fac132017390cdc3864768947b48347b94",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.6"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.17\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:25bb626bb410fc2f52515ea02142521d5bd450a55906c5ef3d7e6dbec7aec651"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f13b583c622add60e589bb4203449ba30c46cdf70ec317905b7390ea085c9067"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:1d26fb9c63de0cf8313f7c84ff10670cfa154e905eb6a8f84f2e01e520f6ae72"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4bdb2ba05bae0dec2fe27d5017955f13790632dadcd4a2fab00f6c87fc22cb29"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9357bd76c40ce6d7fdf72075b7a8c0fac132017390cdc3864768947b48347b94"
        },
        {
            "name": "gitops-rhel8-operator-8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8289186efcfef071197e0d11080dd218a8b458a969c592ccd0d98f3c27e43782"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:25f8e1d7e446e4e8a6a1d7a9005aaeef0d1e4f64200c1f3f82a8ee631949393f"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:4e62dc3e56e3e3451f3fb7d3d8b3ba9e80a5434a0c127791c314c7b9b868e8fb"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:d05fd5cf87e5af8e8104d3601456c0b66ffb3afeab42b84b97666e5bfdc0e2fe"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:3c56b368899480497fd5c55ffa9b91abeb2171f11e22533e1a80887a334e369e"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10eb0167c80df873a452190523d10a1013dc587d081d92e90d53b678ec7fa252"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c36a557c9dc2ae4479c432933a9a4dbef38f2be53360a68a5b6befb614d01dac"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:72d69c8661dd62bd4626e2d169b0632b42f1f0c1f7894a165d18bb8e88de7270"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.7",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:8d786bb519f9caa8c56b5a1de9bbfa92161f697644329114af3af5f324797787",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.7"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:9be24fbbeff481b6db5b6a1f14fa58f1ea6750e4cf933ffe5d11ab6ce6542dd6",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.21\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:f157d5b777e417dd685172acae4c5e65c4069bfb3486b8be45bbcf4ca031e35e"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:066846339c0da9ce0699dad40c8b22109809c622e8e1f63d58c67147142db953"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:5f9c45878306f66765cdccf6cbc7cd3496b84cae63a39fd4ef772810c85657b3"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:a9c8572443771dde98168077f9209796fad1b12263863e239388a0e33e738599"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:8d786bb519f9caa8c56b5a1de9bbfa92161f697644329114af3af5f324797787"
        },
        {
            "name": "gitops-rhel8-operator-9be24fbbeff481b6db5b6a1f14fa58f1ea6750e4cf933ffe5d11ab6ce6542dd6-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:9be24fbbeff481b6db5b6a1f14fa58f1ea6750e4cf933ffe5d11ab6ce6542dd6"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:9be24fbbeff481b6db5b6a1f14fa58f1ea6750e4cf933ffe5d11ab6ce6542dd6"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:7fe4cff48d301dc6b6ee03eaf42e8aca1cd73c720ed1dcd86d1ae9dc90c280a8"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:3de5f74701b31e1e6fd17bd40c5bd252042518d393fdcad4bfcc790c5a8d4836"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:4d22a7a6cc2f0442889512267ae3d9356f05ff0dfdbbe137c3d8ebebc24818c8"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:0b926fc9eae775425faa1ab9709a36fdac15afe4bfe523720e17ecf5df45bb28"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.11.7-0.1724840231.p",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:31bdff225bd825d02ce0f468b1edc77541ce85b7b9111f14a583c418c984232f",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.11.7+0.1724840231.p"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "olm.substitutesFor": "openshift-gitops-operator.v1.11.7",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.9.21\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:c94c2167dc957856682a104b9a6187d3d321dec71ae794acc0dc37794d2cc373"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:42f809f32f1d43186b849e3cc78063d3ebb2b54c55b2a1b77908af09a5ce044b"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:eade50b8321c1b2e0a8ac4dcb34596d43dea0a137b8b97b6eb68c6d469c8b200"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:959de6a95ef8978f66fdbe1033bcaa0ddeff9a376023e5d1d2698c5acb417305"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:31bdff225bd825d02ce0f468b1edc77541ce85b7b9111f14a583c418c984232f"
        },
        {
            "name": "gitops-rhel8-operator-d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ad2ee900bf99a3672049cc8ce9c94870d41176501ded1abbc1b229b9553401"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:0df37cf0a0e48efae02a0711c6da61c6165e7856db97097e98d56c8b6a137bb9"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:7ea96000768b3cf7711150531c4c1c7edff2c45a2f29fe10bd9811ab6b281909"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:4d22a7a6cc2f0442889512267ae3d9356f05ff0dfdbbe137c3d8ebebc24818c8"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:0b926fc9eae775425faa1ab9709a36fdac15afe4bfe523720e17ecf5df45bb28"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3fa644bec41139a112afab1213c66ca234b57ab2314066d1c758a36f091d9497",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=1.0.0 <1.12.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:d43d307dec082bf1b2166249e39acdb14f2f57f6bf343d92ee0697fcb0a26901"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:152d1c8f79d1b5d216650a8bdb4f74f440457312114854c03fd5d32ed8924900"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:3d01aaca7c1fc2923d75480f1d836473574120a308a9d1aba2a105443dc703e1"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:fd5bae5c028657d4f8069205061c29c374d410cab053b308ef2750358fb63124"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3fa644bec41139a112afab1213c66ca234b57ab2314066d1c758a36f091d9497"
        },
        {
            "name": "gitops-rhel8-operator-8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8be3556bf89a77731d19f95925903919269ba9591b1d12d6fb3c96def5ecd5c2"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:330fbaed959f495f18a794ddf5cda89cd4d9a25903589115dac9678814cba593"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c096777ef1262a2bcb59a8f517fa00c51ea9a76acd81131788d420c4b7a5b60f"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:4e1e7a837f998df619ce555bd4ea154c7b392f104203e03e6a82256c5941d307"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c5df7064de09d09b86003872ca032b6def36feaad63a303cc575a8feea704bf7",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:fb289e716a41857c316e8904cbf3540d3dfd4e62c6761c7c73111c6c0569f8d2"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:baec6d73a77b832df8131bac3c5a86dc405ef89f600e27a22f164ed3c72816db"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:92723fab7fdffa6c1bf5033fb895153143fda947911bc5b9834ac6350bc5f6fa"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:aaf2a33f40d7a27d33bc79262d8f72d07ae27479fccc654c6637de99a134fe6e"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c5df7064de09d09b86003872ca032b6def36feaad63a303cc575a8feea704bf7"
        },
        {
            "name": "gitops-rhel8-operator-b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b7815c485c196b6ebe05b418c56e72d45bc3bef6f720c84aaa126b85ce8ae93f"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:4ffd0b2e2ffc1d855f11938e58ba92a67cea9fd289a1521300ed9040c2b4f55c"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:3deed959bd7bc2250af55ac57b3d28d4b60bf74178d60ddd9d5ade1a4041b81a"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:ac39a30fd9fc69bbd9c3ad6ecc32e5e6c0a0fdba7ce19c98378fdc40d9fc791b"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12db245af3b8475c9b5680bb0035c566109819e05cfe62bd1dfdfb5d6ed25bea"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:979af763119468cc4a8923b7c990273dbff274f53f64ff3d27b1505326442425",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.9\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:82dde892c3ee658a5aa6bd1538428e80f572aa7e7c9a546785a495522d9cdfa0"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:bfb33958b28d7067b5bdb6da7e8e0ca9de9c7832df917e7611e6ca517004b654"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:6ea88874dcb954539be97c2d6ec65888995a5ea4047564c517181d09f80331a9"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:0c5d8e0c18f4e7922877ab8dfdb36be80a0bd8a04fc08ab25c36372d6cc45a47"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:979af763119468cc4a8923b7c990273dbff274f53f64ff3d27b1505326442425"
        },
        {
            "name": "gitops-rhel8-operator-c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:c633f071cf9c9eae3bb5df603ea1331c9aa5389a7b8be2c61f9759467ba014c4"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:7196a5906c5af920a9ae1099c8b18c070e8e50fe25a6fe0d29af048f4a984099"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:fc367a55f9ebce4b2fded7f1d8880d96285ccef05ec202cdf0ac028c3b38a43a"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:9bb198a939530d852b6307b1e03edf44f51177f3e15cf2e7e5d2ada4abe8b46c"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d3d498d1e716abe32ee8f561888966f5fa89a27d1426b6c0e0ec856e6a43d13c"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3da4a6840665ba50c699bf22a7258ee5f6912c589a3a1b278caa887c877bf9f2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.10\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:f5184b0db0271f38910e7a52a1703327e164ad8569d6c9ad43f2f840b5c7f70c"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:5bfc4686983f9c62107772d99d900efbcc38175afe621c40958035aa49bfa9ed"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:4e18c4569a1e9043f823582da4110d15fde2b6ca9bdef2cb68d6cea393db9ab4"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:1be358ae4610ca430efd2a4469d536e4243332f814ee5a909bad03c2889eaaa4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:3da4a6840665ba50c699bf22a7258ee5f6912c589a3a1b278caa887c877bf9f2"
        },
        {
            "name": "gitops-rhel8-operator-2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2bfdf47accad02c323b1751514094c442be6660b5a631346f8d270ec93db386b"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:770c4f854f2f92766b3cac1326671140253491d033c42c036dcd75a4762783a9"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c27bef6ba6ce0dd476be1f9d48789ee8fec535fd93f6472dfa8f4c5de4f632b8"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:cbe88ac35fb4539287859801a4843948b4d50496ff67cfd189a16c0b45bd0d65"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d35dff5d59e748ef0404e7e76b0237ea96b2bb19b86fa04a3a34df7a379277b2"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9bb74df8ca3491846b6df8313c96f99d58334c1bee8004f816777c39838ae54a",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:02dd8b426564e8f19bfc178af414f5663527e4ac0ec0dd848735fd839bf96ac2"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1f5efc7b39bb652f2b92eec117d212d4166ff56ab7628d1c041b37aa954c5728"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:767fd403910c9cbf8461b59856484e6e0012f8fbe940fa0290275e3f300bf806"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ae5bdd1138d20276826f37ad160a7ee1071e95b0f0e99d987dba09ae2cdd5f22"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:9bb74df8ca3491846b6df8313c96f99d58334c1bee8004f816777c39838ae54a"
        },
        {
            "name": "gitops-rhel8-operator-1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1ace3aae260235a0852140caf4cb1ebbd521acb41e8154ebebc63d97992a56e0"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:f49708f5e1d0b0b40c1ea61ed82fa4ea35fd1f8eef76b714c5484532e715996f"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:13dc04778f36eb778918279f9f233bdf0be7119189e2d8cca34fa8c40cb4920a"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:784f3fdaa90e35714f77df205391adfbc1662bb38eb437f3900ced35e5afeee1"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:d7f8ad8b52c82644cb48e4d16bdfa7f9536f077668e7504ad06ba359748df86a"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c36a557c9dc2ae4479c432933a9a4dbef38f2be53360a68a5b6befb614d01dac"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:07091ba15a3f17d7dfd6c5e2dd5b951a338cfd833106f057c24993d57595bd92"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.5",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:47798cd9f0498560eab4efede77f144b937b07ddb77e3831b654f51d1a5b04b6",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2247f744698e05ef116b07f4b210f83f3735e2c41ad1e448081dfa3009724dfd",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:0888a1dfa9f8b187537335aef674a16f3280a832df4f55ac1e3ac1bc267f2f7c"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:12d2240db438a943e6593b954369c460048856c73fb9d5225efb23c7064e3fa5"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:ab4d7513bc30a15b03c2cb696bd153f681dace5fdabea4d65834c817ba41ff14"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:2172e690181e086f86a034f33b22b87df43ee5cceb42f6a12ce149952d3a4951"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:47798cd9f0498560eab4efede77f144b937b07ddb77e3831b654f51d1a5b04b6"
        },
        {
            "name": "gitops-rhel8-operator-2247f744698e05ef116b07f4b210f83f3735e2c41ad1e448081dfa3009724dfd-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2247f744698e05ef116b07f4b210f83f3735e2c41ad1e448081dfa3009724dfd"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2247f744698e05ef116b07f4b210f83f3735e2c41ad1e448081dfa3009724dfd"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:1c5e0d16c7862a395e38c170219329323b07b27ac0adda910e91ddcfef3841db"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c9afb4591e82f0049b3a2fafedd636189053daf8e19805b506e8af8393cd40fb"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:e65cced9d391485ab8836c7e3f32dced228fe1e55a37eab37d17576075535612"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:0b926fc9eae775425faa1ab9709a36fdac15afe4bfe523720e17ecf5df45bb28"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.5-0.1727371523.p",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:7977eecb1dc05d639e94c84715ea2a5ced158508524ed0c8487dd3da3fa51fde",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.5+0.1727371523.p"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "olm.substitutesFor": "openshift-gitops-operator.v1.12.5",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:0b88e9a0f02fef6334f173e71588302fdd08e675f372d0f3fd445b61f6e7e7d9"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:217c92bca577ece7d2ea856e4d9fa1dcd9325e326733676519084a13e3241433"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:1a2b824ba334ec626a77502883f24e4e6568ed53924b244c724a39128ce4e979"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ae1469bf6338d773b25db8b2e5fa948787051dc248f8221b0714690407b0ecfc"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:7977eecb1dc05d639e94c84715ea2a5ced158508524ed0c8487dd3da3fa51fde"
        },
        {
            "name": "gitops-rhel8-operator-331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:331a51781c974793ac2658029eb39ee59d182cf23ee81d40c0882e657a643fd2"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:91c0eb12e0e2301d1478466a7fc20195376b4cf30f214e7a73316379ac5c489a"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:375d0194331d65b8b3ed65a9d7677d6c604b4e10ae23a0f500c9b61908a84aa8"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:e65cced9d391485ab8836c7e3f32dced228fe1e55a37eab37d17576075535612"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:0b926fc9eae775425faa1ab9709a36fdac15afe4bfe523720e17ecf5df45bb28"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.12.6",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:80198f65f7e3f9022a34e0342e9423807b855dcb7bda810172eebc9a27afb5c2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.12.6"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.10.18\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:33bbb88343285a0510670384b87d0226dd6de8aa12c78b68921362c4d6f5a6aa"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:dbf3038daf7c797123c511f9a609c3485cb1a5bcae53c614fad17e0a65fa7ee3"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:b5736d1106db29fcdf42328ca20b96382d4339f90b97a07120ea73ee174ea1ad"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:7d82c719b1cef64607d30e8aaa5ab293955771c5b1dbd430e0befc988a43356d"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:80198f65f7e3f9022a34e0342e9423807b855dcb7bda810172eebc9a27afb5c2"
        },
        {
            "name": "gitops-rhel8-operator-48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:48dd1254fd3a887aef2eae9239f68637eae18514a50f72ea504414d83dc727b8"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:73918f3b3c507fc64006b7a500ecfa9d58151d694852f696c41a4412edffc78e"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:1cf485a889c7586cb4944f000b53c0e97d08f97ba14e580bec57dad7cb13712e"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:a1d4e26ea755181818401697f18260b9e876aa441be14830f9142081ee22a24d"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9e0fee30842a16d7b8a39d336123c80c5271cb2ceb50759fc7ee51a4ed09ceb3"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.13.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c30f98829b6f0aaf49aea0fc05d4976726c7a4af38f01c3b74b34127b334203c",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.13.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=1.0.0 <1.13.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.2",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD stable\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:07e84df60ec4a313bda39abca4bd4a9ad6597df3ff3240d833491d6b29c4ee37"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1dcac4997b67968ede38731302cff073daa15b7e2b3239b145b7b8aa080cf0fe"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:4b94d8928b03569e271e064c42c535d231d3ecbe891dc7975353832c613da47e"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:84a656b82ce1b8ca952ff2d885875980cbf1a6c21dec465a678194f70d74d778"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c30f98829b6f0aaf49aea0fc05d4976726c7a4af38f01c3b74b34127b334203c"
        },
        {
            "name": "gitops-rhel8-operator-2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2fae609d07047519e62d9840644cc37152f76ae11624b525f76b5eb317a4590c"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3cb2ff9f42b219e8ad626976a15330cf835b88cc69b7f601b6af8a4d0d1ef3ea"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:5a8df38189bcb7335acc82bb936757e0fc09e4800cb5e8c27c153e69d50ddda4"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:ebedd17fa39941419370e0701ded91f60128aa98851266f5ccb50e0a53b39b39"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:d7f8ad8b52c82644cb48e4d16bdfa7f9536f077668e7504ad06ba359748df86a"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c36a557c9dc2ae4479c432933a9a4dbef38f2be53360a68a5b6befb614d01dac"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:da5d5061dbc2ec5082cf14b6c600fb5400b83cf91d7ccebfa80680a238d275db"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:07091ba15a3f17d7dfd6c5e2dd5b951a338cfd833106f057c24993d57595bd92"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.13.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b19fb714784fa74033214d26a368ec13b26452772c0c0384c569c266392234bd",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.13.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=1.0.0 <1.13.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.2",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.11.6\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:fb27ba9df1514651ab8e697e83bb4fa6be533d9d3ff38fae7de599013821aa01"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:9f279d1b24707edcce42e500f814c9f7d8dae5b438bd5be20937f507e696f41c"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:68fd3c32a6b689a7d77573dda018f28f3906460a08f48f35cb8560e95fb898f5"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:6e6642d331e18d85ca68e42d6d6199b6fc2e18fd31126babaedf5ee19b368d8d"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b19fb714784fa74033214d26a368ec13b26452772c0c0384c569c266392234bd"
        },
        {
            "name": "gitops-rhel8-operator-4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4e841112e1835f4a6814764dde0da9cc578b7d009d2c51a7a203e54350cb6844"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:2656929aeffdbbc18ae8aaccd355006e1ce607f4e7a532e5d37e5991e537de6c"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:32a1b69a5eb8da2ca69ba1a0e1d2164892fc1d739fb9ba17ad526bbdfdae5195"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:957b9de048504792b15e002e04d47f7b238d82b72fafc2ca8623b31094f7bf86"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:6e2a83ef46138cee4fe6dc2d498904350dbcfb91cc11ff0eadbbeb5ca031c296"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:20566173a8e907980e603d82fae4d96fcdfd5c43d9004c2e506cf0e09a47b91e"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:55a49d79b9d29757328762e8a4755013fba1ead5a2416cc737e8b06dd2a77eef"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:72d69c8661dd62bd4626e2d169b0632b42f1f0c1f7894a165d18bb8e88de7270"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:c4a98010f7dd5faec2047bb9803061704233a8efc930be2a02386ac16d062d86"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.13.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:0e41fde95f2b68ce8c359e4370accb1f5526382ce415a6b9eba8cdf18e188c94",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.13.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.2",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.11.11\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:a60f1cfc0f23f7bf3bb58d269d4331696040e11cc384abefb7e7d62af84d88c0"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:772000bbd1f29a97f30e260f69601405352ef4ad7cac8ae283072213314016c9"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:1ba28c7afc98166ffd35ab46f774019defc54178c72ed3f104e43f079fc9d625"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:51ab4e9adf371488686dbc36edb6c4746eb1bd9ee4eff3c5f8bee1971b64ee33"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:0e41fde95f2b68ce8c359e4370accb1f5526382ce415a6b9eba8cdf18e188c94"
        },
        {
            "name": "gitops-rhel8-operator-4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4776717e81841f83eb8d457b2f3354a173700de9845715ef7dc64673d97b6587"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:25a23ccac65704d70adcf7c639d32dd8812e9a01ac171bb18c22d24c2bdc4a92"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:679ebf25f149f25e979cfb113817342579e899ea6e6d92c9b7d43a66a3a143d2"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:40d0ac2a7c8e8d2ca3ef711608981ef11186c114b62b6befaa147d9fd4ea0865"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9e0fee30842a16d7b8a39d336123c80c5271cb2ceb50759fc7ee51a4ed09ceb3"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.13.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1fa8301afa977b08c548719f3f8a58a9efc0f3987b7722334ccbd9514727d88b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.13.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.2",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.11.12\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:c301c8cb4e9abe8ee4631c46eaf90d27a1174662a34f34c51776f0f4c22888f9"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:066eae4a541079fbba91dea0652bdb12d3e981d5a225d0827e61f49faff067d3"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:82c4833d40e13f9f8d7a85df3cfd2cfbdbc44728f3c6489da71b9409bfdb05d8"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:e87515d016565bb69cb2c2ac40432e0127dd2cb20a490ac82019836032ba15e5"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1fa8301afa977b08c548719f3f8a58a9efc0f3987b7722334ccbd9514727d88b"
        },
        {
            "name": "gitops-rhel8-operator-d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d41034bcf5c28bcb8afef08678793d0cc27a4032e2811a0c496c3bd0f10ecc17"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c02dc2c79ee24ce5450ea4e19493ac2a1997eeb5bfd359291642c529826d0cdd"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:ef72b042da843c46cefe4942a08906fc0afc24c04e064384c40656331c404741"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:bde11fa83b7e708677b08ea995041f480b88edfb93e4a62c10380d101c0a349c"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f2804bc2af437ff1f06c214b48a1a780dfcfab995650d901c03270057eb9f3c"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.14.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:610437902999bf406e6284a1f587e055e4ccc36cc4f83f3cf5aec2981843698b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.14.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea",
                    "createdAt": "2024-09-13 17:23:26",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=1.0.0 <1.14.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.35.0",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD stable\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:44475429eb08f0acfb08c35e65bd2870535634cf76156b870a3585b1cd4c8b30"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:383963899a0c606386475f56adee23fc9c43f02a3fa817845d683e68b2ec8360"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:b022c3859eb6bb5de60ce9760d0d9a23617bc9906a3487969c45604f9aeb5acc"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:bae83c4de42d55ca49cb443c0cbfb39a8318487d6d568a6aae03ca0b583eda64"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:610437902999bf406e6284a1f587e055e4ccc36cc4f83f3cf5aec2981843698b"
        },
        {
            "name": "gitops-rhel8-operator-91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:91588806c263e3cc10c5245c89785234b1d0fe44e04ee0c2645f30c34ccab3ea"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:7be504945c8b7ce6b7b6f232309f3fe15b8e78d8003ab6655523541c03309cab"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:56f22d670b05fee32e91f0fbd5925b55351b4f6df621bc40b2719427df9df93b"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:71c2a5a88f0b4d5f93cb669cc6d900d71ffb70d87b70b1f90bdfc909fabacb9b"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f288292071ec742e0c420cc19b8abe0ab5d95c447f01ce800bf5bf434270b616"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.14.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:53daa863b16b421cc1d9bc7e042cf1ecce9de9913b978561145b319c2a1a8ae5",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.14.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46",
                    "createdAt": "2024-10-22 16:09:59",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.35.0",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD stable\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:f8106135dc58898f6b81d36e9158a192272e600d1db69ae207cb97dcd4eccb6f"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:97914aa40ad6bc2f01e3eaac4448fbebe0ea0cb0f971b11f69581d545618fe8e"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:df64830277b275211c369cf7f51cddf9cc1d753b1a78be42b2dcb1eddd2aba60"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:9116e1adc24db19136ea34b8faeba3b1003228621d81b716cbe4ec4d61ad6ffd"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:53daa863b16b421cc1d9bc7e042cf1ecce9de9913b978561145b319c2a1a8ae5"
        },
        {
            "name": "gitops-rhel8-operator-84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84d4226e3490f4c0f04b936e01b3b772093084815530cae97b868f4bf8b47a46"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:ffbb287bde27ad176f9fe52b2cb52c323507c7d657be9d144e1d520c0415d3e9"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:19ae5ec397baead9627b61fb5802692b37148bacef897bbec829d92a6a8c67ef"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:7fb645f868c9bf88f8bc1b7c8ff65a991bb9e7030b005020c241cf67aa474b8a"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9e0fee30842a16d7b8a39d336123c80c5271cb2ceb50759fc7ee51a4ed09ceb3"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.14.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:decb4bc09753912d3d582093ce84548f507f6f7cc75f3f744a63130c0c323b46",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.14.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a",
                    "createdAt": "2024-11-15 04:13:36",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": "",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.35.0",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.12.7\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_openshift_gitops/"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:384fc02125e83db1047480211392ed5ea29b4bc254a173cae347c71480a339ac"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:706d5c99715eece77616135da2fbf90863b7aef17fd64ab03bf7dd20877490ec"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:3e97d25ed7516393ce81ab61f1ed78842eb2b77ef5c7b50151b8a7c377a2a36b"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:5aad57bedf3a3e6b2f4c21446a4326efb76a16c6727a3d941e95fe60112580f2"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:decb4bc09753912d3d582093ce84548f507f6f7cc75f3f744a63130c0c323b46"
        },
        {
            "name": "gitops-rhel8-operator-73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:73f13a5587bbfbea5a64bd3507120eb83b6be85088139c6d65a9aa9cd56e186a"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:93698c7fe8c0d1120a9cc3e451c3d46adb3a60c0e0ba09cf06a3c83f915b9cdd"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:83817a6577eee2bcb954bbc05b3fdc68fb56f2f63cec99b4d0623c1b10eb44d7"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:0e4dee6469ff15e71c9925bebcb68510d2cb14662429f2bfea065bbc0b4cc316"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f2804bc2af437ff1f06c214b48a1a780dfcfab995650d901c03270057eb9f3c"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:a848cc4edb4405846c673187dd68ce66c328dd1ad42f193f5737288c7971399d"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.15.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c605145a2b2454c969e43b5d8390d29c932bb0eeb4ba2eb9f0c72d8c909ae8cb",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "NotificationsConfiguration",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.15.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"NotificationsConfiguration\",\n    \"metadata\": {\n      \"name\": \"default-notifications-configuration\"\n    },\n    \"spec\": {\n      \"templates\": {\n        \"template.app-created\": \"email:\\n  subject: Application {{.app.metadata.name}} has been created.\\nmessage: Application {{.app.metadata.name}} has been created.\\nteams:\\n  title: Application {{.app.metadata.name}} has been created.\",\n        \"template.app-deleted\": \"email:\\n  subject: Application {{.app.metadata.name}} has been deleted.\\nmessage: Application {{.app.metadata.name}} has been deleted.\\nteams:\\n  title: Application {{.app.metadata.name}} has been deleted.\",\n        \"template.app-deployed\": \"email:\\n  subject: New version of an application {{.app.metadata.name}} is up and running.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} is now running new version of deployments manifests.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Revision\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Revision\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.revision}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: New version of an application {{.app.metadata.name}} is up and running.\",\n        \"template.app-health-degraded\": \"email:\\n  subject: Application {{.app.metadata.name}} has degraded.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\": \\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#f4c030\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Health Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.health.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Health Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.health.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Application {{.app.metadata.name}} has degraded.\",\n        \"template.app-sync-failed\": \"email:\\n  subject: Failed to sync application {{.app.metadata.name}}.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Failed at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#FF0000'\\n  title: Failed to sync application {{.app.metadata.name}}.\",\n        \"template.app-sync-running\": \"email:\\n  subject: Start syncing application {{.app.metadata.name}}.\\nmessage: |\\n  The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#0DADEA\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Started at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.startedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Operation\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Start syncing application {{.app.metadata.name}}.\",\n        \"template.app-sync-status-unknown\": \"email:\\n  subject: Application {{.app.metadata.name}} sync status is 'Unknown'\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.\\n  Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.\\n  {{if ne .serviceType \\\"slack\\\"}}\\n  {{range $c := .app.status.conditions}}\\n      * {{$c.message}}\\n  {{end}}\\n  {{end}}\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#E96D76\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Application\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  title: Application {{.app.metadata.name}} sync status is 'Unknown'\",\n        \"template.app-sync-succeeded\": \"email:\\n  subject: Application {{.app.metadata.name}} has been successfully synced.\\nmessage: |\\n  {{if eq .serviceType \\\"slack\\\"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.\\n  Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .\\nslack:\\n  attachments: |\\n    [{\\n      \\\"title\\\": \\\"{{ .app.metadata.name}}\\\",\\n      \\\"title_link\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}\\\",\\n      \\\"color\\\": \\\"#18be52\\\",\\n      \\\"fields\\\": [\\n      {\\n        \\\"title\\\": \\\"Sync Status\\\",\\n        \\\"value\\\": \\\"{{.app.status.sync.status}}\\\",\\n        \\\"short\\\": true\\n      },\\n      {\\n        \\\"title\\\": \\\"Repository\\\",\\n        \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"title\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\",\\n        \\\"short\\\": true\\n      }\\n      {{end}}\\n      ]\\n    }]\\n  deliveryPolicy: Post\\n  groupingKey: \\\"\\\"\\n  notifyBroadcast: false\\nteams:\\n  facts: |\\n    [{\\n      \\\"name\\\": \\\"Sync Status\\\",\\n      \\\"value\\\": \\\"{{.app.status.sync.status}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Synced at\\\",\\n      \\\"value\\\": \\\"{{.app.status.operationState.finishedAt}}\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Repository\\\",\\n      \\\"value\\\": \\\"{{.app.spec.source.repoURL}}\\\"\\n    }\\n    {{range $index, $c := .app.status.conditions}}\\n      {{if not $index}},{{end}}\\n      {{if $index}},{{end}}\\n      {\\n        \\\"name\\\": \\\"{{$c.type}}\\\",\\n        \\\"value\\\": \\\"{{$c.message}}\\\"\\n      }\\n    {{end}}\\n    ]\\n  potentialAction: |-\\n    [{\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Operation Details\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true\\\"\\n      }]\\n    },\\n    {\\n      \\\"@type\\\":\\\"OpenUri\\\",\\n      \\\"name\\\":\\\"Open Repository\\\",\\n      \\\"targets\\\":[{\\n        \\\"os\\\":\\\"default\\\",\\n        \\\"uri\\\":\\\"{{.app.spec.source.repoURL | call .repo.RepoURLToHTTPS}}\\\"\\n      }]\\n    }]\\n  themeColor: '#000080'\\n  title: Application {{.app.metadata.name}} has been successfully synced\"\n      },\n      \"triggers\": {\n        \"trigger.on-created\": \"- description: Application is created.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-created\\n  when: \\\"true\\\"\",\n        \"trigger.on-deleted\": \"- description: Application is deleted.\\n  oncePer: app.metadata.name\\n  send:\\n  - app-deleted\\n  when: app.metadata.deletionTimestamp != nil\",\n        \"trigger.on-deployed\": \"- description: Application is synced and healthy. Triggered once per commit.\\n  oncePer: app.status.operationState.syncResult.revision\\n  send:\\n  - app-deployed\\n  when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status\\n      == 'Healthy'\",\n        \"trigger.on-health-degraded\": \"- description: Application has degraded\\n  send:\\n  - app-health-degraded\\n  when: app.status.health.status == 'Degraded'\",\n        \"trigger.on-sync-failed\": \"- description: Application syncing has failed\\n  send:\\n  - app-sync-failed\\n  when: app.status.operationState.phase in ['Error', 'Failed']\",\n        \"trigger.on-sync-running\": \"- description: Application is being synced\\n  send:\\n  - app-sync-running\\n  when: app.status.operationState.phase in ['Running']\",\n        \"trigger.on-sync-status-unknown\": \"- description: Application status is 'Unknown'\\n  send:\\n  - app-sync-status-unknown\\n  when: app.status.sync.status == 'Unknown'\",\n        \"trigger.on-sync-succeeded\": \"- description: Application syncing has succeeded\\n  send:\\n  - app-sync-succeeded\\n  when: app.status.operationState.phase in ['Succeeded']\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1beta1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f",
                    "createdAt": "2024-12-11 20:11:50",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "false",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=1.0.0 <1.15.0",
                    "operatorframework.io/cluster-monitoring": "true",
                    "operatorframework.io/suggested-namespace": "openshift-gitops-operator",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.35.0",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v4",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun",
                            "displayName": "AnalysisRun",
                            "description": "An AnalysisRun is an instantiation of an AnalysisTemplate. AnalysisRuns are like Jobs in that they eventually complete."
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate",
                            "displayName": "AnalysisTemplate",
                            "description": "An AnalysisTemplate is a template spec which defines how to perform a canary analysis, such as the metrics, its frequency, and the values which are considered successful or failed."
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "displayName": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD"
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1beta1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1beta1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate",
                            "displayName": "ClusterAnalysisTemplate",
                            "description": "A ClusterAnalysisTemplate is like an AnalysisTemplate,but it is not limited to its namespace. It can be used by any Rollout throughout the cluster."
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment",
                            "displayName": "Experiment",
                            "description": "An Experiment is limited run of one or more ReplicaSets for the purposes of analysis. Experiments typically run for a pre-determined duration, but can also run indefinitely until stopped."
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "notificationsconfigurations.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "NotificationsConfiguration",
                            "displayName": "NotificationsConfiguration",
                            "description": "NotificationsConfigurations contains the notification template used to generate notifications that notify users about important changes in the application state."
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager",
                            "displayName": "RolloutManager",
                            "description": "A controller for managing Argo Rollouts"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n##Components\n* Argo CD stable\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:c698338c0b8c593cd6e79101b929543c5222b3bd09978d6a8f72095f10fd28c0"
        },
        {
            "name": "argocd_extension_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-extensions-rhel8@sha256:6bfd32f9757aab4ec33b37a75f25ebaec7a18a00ece57a8d815cc6183854395b"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:2808a4a071a0ffa6960e40cdec1d2d2905d6116fe26c553612edabc7c2235a34"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:d78477703b0cd801715fd9ad785986dd64f9937536ea40596c1441e6979a5a98"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:d25c69ecbc7254d09ff3974ec741c290d19af7803e659feaa07b3098d9fec4dc"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c605145a2b2454c969e43b5d8390d29c932bb0eeb4ba2eb9f0c72d8c909ae8cb"
        },
        {
            "name": "gitops-rhel8-operator-2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:2a18db52d160d864f06acf9f995212779fb7c7ecd113363ef7205a7509d80c7f"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:e8929708ec39a24ebf7c746bb1e767ad10a1ee11b10b1324b81895daf8859d1c"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:43e347a90fd890601d1a5fe4536e8138615251bba584c7b8881ce7bb5ab090bd"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:7c6bb4a525964d9cdf1c64c646174f91273501dea93224cab5382f81533c6642"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3f2804bc2af437ff1f06c214b48a1a780dfcfab995650d901c03270057eb9f3c"
        },
        {
            "name": "kube_rbac_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6a90baa81d2272e681a16a91deacdc1c212b00142b0d9736aff14f772f68be11"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:06a6637c4776f4285bcb295d327ee60b1aed61b7adc5f7ab52898d79281ced70"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:5250d644e80aea794b0f732e9285883a4348dace83557f177f64d78fe4dcabd0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.5.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e391887f298db38faeb11b5d12c58611aa381ff14d4eff88b605d64f6c3590ed",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.5.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"dex\": {\n        \"openShiftOAuth\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.5.2",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.3.4\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_applicationset_image",
            "image": "registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:c473e1a9dffa98df2325d2053a302f9281c52c39b244cad581d6b454da430234"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:2e5605a97cbd94c43b754b44b231b055b0d2651b46828a40b857bc2336f1fb8b"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:04bf08acb07a21ff4e7b5dcac556a1d563400f07c9cd8183916425ce23802ac1"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e391887f298db38faeb11b5d12c58611aa381ff14d4eff88b605d64f6c3590ed"
        },
        {
            "name": "gitops-rhel8-operator-bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bda056e712af71fb56b055230e13c78130fb6841df0b1c9a578466db1e88fd95"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8594156a4654a3dc7df7f2f2290cf63d5bd3298867ca8887b203e41cb6dadbc8"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:6d88505dfd19579c81f36cfb6a2b9f37324589e95b3bb6981368f811d3be1562"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.5.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2e0f97c28dcfadc2c754a2297939c29742ad0e61ecda56f315c5d85d6283ac51",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.5.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"dex\": {\n        \"openShiftOAuth\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.3.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_applicationset_image",
            "image": "registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:cdd37324c6ec2fdd451daf119fda385d1cca3427043539e1b8a8422bac9b619e"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:ba46db5be3a47c766e50b21aa78763c094d7d787bff4ba6e5e8e95e754eff6ea"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:208efe235a177700c3cfa88ec6b231cc4b97ac6006be7e9d9eac9f79604cc3f0"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2e0f97c28dcfadc2c754a2297939c29742ad0e61ecda56f315c5d85d6283ac51"
        },
        {
            "name": "gitops-rhel8-operator-1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1f62bca8718c3abc7fb46513fc9c6011ac1f2f453fa133f9c7676eabed8e53b0"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c3727b91e729b79b465cb99ed05730faf5b9dcc562d4c62549dfb1e0d03531f0"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:3c90880b4d8c85834d4c90e9ee972c47d3b5efd5a013ae0741a24d9502aa6f5e"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-5@sha256:bbe1ee2913d69649f7630222681245b9ad94b74940974d58a64d8fe0a05d8b13"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.5.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5222e68ce95bbdf8b1b7a4cf8f7f1793d7a7ad0a5393a01a56fb66085cdbb1e3",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.5.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"dex\": {\n        \"openShiftOAuth\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.3.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_applicationset_image",
            "image": "registry.redhat.io/openshift-gitops-1/applicationset-rhel8@sha256:df5b34cb458b27a0f9da6d0eddb6d8039f59c87cdabc24109df89d5c3d61ce0d"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:6b89c342ccec84f4bf2351ae97a12763bedc2408821bc49b6edd80f7a4f856c0"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:20cb34d1ba5b7cfb868546e55844cddcca19c7756426529d9102d7852f8d127b"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:5222e68ce95bbdf8b1b7a4cf8f7f1793d7a7ad0a5393a01a56fb66085cdbb1e3"
        },
        {
            "name": "gitops-rhel8-operator-4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:4d857e524b0dc386657e579de7cf52da627b0092038bf36e40063fbe42130732"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:9a0add35076f15c8aa8928bb23f2c093413807618ae3d6fb5f00e8c72901ef75"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:c013012156129820109af6a12ab99f406c962fdad452d0f9e56e3ceed7c9c3ab"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:2bde84d46bbba8f00718d994824dd7bd5a3db8f0b32c19d6d34efd1f4fef4fa7"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:720a7e4c4926c41c1219a90daaea3b971a3d0da5a152a96fed4fb544d80f52e3"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-5@sha256:b4aa364cc2a15a6eef2fabc72d9c570791e61ab561e241d9995bd9dec3d1d21e"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:a782f27b301fd2c06e94125cca735590a21d87cbe18cf15f06197679462bb65d",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.6.0",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.5\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:b4bf65d972f03d40d669de7f4086d2fd47a733db5e20aa7fcf79f6ecf4ff26c7"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:36fcc642b33a5cf82e331003fb8a0329107b9accd285a5b0b1facfc899b6c1ae"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:a782f27b301fd2c06e94125cca735590a21d87cbe18cf15f06197679462bb65d"
        },
        {
            "name": "gitops-rhel8-operator-1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1e0ecee8a40196b3ceab977868e0e671c112b2e5f80be39b72cda4b86a09ae1f"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:4435ab18a7415e522fbd47bd193286f22e8a7513b97c3496e3d850e427cc7a3e"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:09c95d88d9a5ec0c92536053524d25b8c724e7b5c7e4ea5d267d886b47824484"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:414ec6ec542ac000f71c6e5b62d19687b3e6bbdf6b719b0113dd08ce5ceaddfe",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.11\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:a74aebc3c3aa4ba3e231891e14611a9894a73548c54649f01ca8a0698f6122c7"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4ad46447f08b858bb28a7db9e6abb62131292a24efde9967065383ec4aa4a91a"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:414ec6ec542ac000f71c6e5b62d19687b3e6bbdf6b719b0113dd08ce5ceaddfe"
        },
        {
            "name": "gitops-rhel8-operator-d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3e50f5b40cf9bb32671da1b2cccc0bc2ada4b046225ae42945bb99fbee817b28"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:96b81e6f2914250d1c91b67dcbc42606161ad38b48bca8131388c0ef68eefbe4"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.1-0.1666124167.p",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:38281804822990c3ab29a07757c8428442179e5f42edcf18cbfee62320376473",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.1+0.1666124167.p"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.substitutesFor": "openshift-gitops-operator.v1.6.1",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.11\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:a74aebc3c3aa4ba3e231891e14611a9894a73548c54649f01ca8a0698f6122c7"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:4ad46447f08b858bb28a7db9e6abb62131292a24efde9967065383ec4aa4a91a"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:38281804822990c3ab29a07757c8428442179e5f42edcf18cbfee62320376473"
        },
        {
            "name": "gitops-rhel8-operator-d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d6ee0b28cf88d706fe840dacd514e0d3092304efcd938032449a65f58ae5ddc6"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3e50f5b40cf9bb32671da1b2cccc0bc2ada4b046225ae42945bb99fbee817b28"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:8d714387b09cb316387f5f224870009d061f9afa23ccf3bb2d2e3fc6708df8f6"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:7b9bb54e205d3c81019a4dda443baf7e24c8bbbe8b001076ffd15c4f02858376",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:efdd377fb790fd4d2912300feee6a59e68e85adbfffa0d3689091a4458bfeec6",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:5bbe59b0f1b9aebb443e0f6f804169f7ff909e7b2a9e9923d30eaa67852db16c"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:6a8003ca7a6b538968b1b986a38fb715c01546b43623e4c06d7280b75d5fbe2f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:7b9bb54e205d3c81019a4dda443baf7e24c8bbbe8b001076ffd15c4f02858376"
        },
        {
            "name": "gitops-rhel8-operator-efdd377fb790fd4d2912300feee6a59e68e85adbfffa0d3689091a4458bfeec6-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:efdd377fb790fd4d2912300feee6a59e68e85adbfffa0d3689091a4458bfeec6"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:efdd377fb790fd4d2912300feee6a59e68e85adbfffa0d3689091a4458bfeec6"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:2eac29a8bedbde6c78040274085e2fc276c89a93761125659a92ac9627446999"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:b66864025ba35c09006cd99443ee6e257bd9ad696ec39001637bca692f2deaf1"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d6e42fcefe2a05fb80c9bfba75fd66ff64ba8f25e947101f4c3875eb07bf6aae",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:10284dbcfe4f2807fd1ad9b3d67d1bfa14f7b91ddc14191c3efcdeed7bb11cfc",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:a593cfb636ca6aab8f401c5d8cf30087592934cd913e653533f979ec9a6d96c9"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:0ea2b9014512930e783f22667daef3687b1452c0e476ac19f6b5cf784e9f1190"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d6e42fcefe2a05fb80c9bfba75fd66ff64ba8f25e947101f4c3875eb07bf6aae"
        },
        {
            "name": "gitops-rhel8-operator-10284dbcfe4f2807fd1ad9b3d67d1bfa14f7b91ddc14191c3efcdeed7bb11cfc-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:10284dbcfe4f2807fd1ad9b3d67d1bfa14f7b91ddc14191c3efcdeed7bb11cfc"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:10284dbcfe4f2807fd1ad9b3d67d1bfa14f7b91ddc14191c3efcdeed7bb11cfc"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:8cfd4ed35d0d198139bcdec5d36774f6a02e9ef344a7ed5f8fe330c86077835a"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:eddbd64cf216cac0d3fdafdd3c5de76748734d018865344b60831dd4ff4c6a68"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:72d865d9e7e63f185cda94cb0287312688fc25d33fe9717021e864dd0c73532f",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:38b195677aa6253820ee5d96d2de225d000e3a6ca803cc8ec7ffa4c7bc4a713a",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.20\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:9a0e3f8c6bc65b13d9f101980a3853627ed4a5d0b0bdcfcda90ce0a4389e4134"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:669bdee36164c7ac53c12369fafe42d9cad8d8bdd66eb8b4cbf85c06e3dd1810"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:72d865d9e7e63f185cda94cb0287312688fc25d33fe9717021e864dd0c73532f"
        },
        {
            "name": "gitops-rhel8-operator-38b195677aa6253820ee5d96d2de225d000e3a6ca803cc8ec7ffa4c7bc4a713a-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:38b195677aa6253820ee5d96d2de225d000e3a6ca803cc8ec7ffa4c7bc4a713a"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:38b195677aa6253820ee5d96d2de225d000e3a6ca803cc8ec7ffa4c7bc4a713a"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:80a41a01849faff06ad2ed289bb5c26e812a27f03f6c5e7a7f0a7fee05f0dc51"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:fd0e19276c6d2c181bd783a29aa97ae9528e5542109aa6446ea9e8407d35d743"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.5",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:eda1bdaea4ba06884aec368634a61bbb09d87403ac43fab39c4d9d1d89c5e688",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8ac1b8fa774f1aa8dc778c45370855f7849593f96272e210a9cb1a75a40746ec",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.23\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:ebf0abdf62e77eb61207d046e33f5f9a0632b2ea98d52048a6a53bcad59867f4"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:19e07c9740d49ffd4faa6b99ec5b38d104414a15a05e85be8762bc5711d2404b"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:eda1bdaea4ba06884aec368634a61bbb09d87403ac43fab39c4d9d1d89c5e688"
        },
        {
            "name": "gitops-rhel8-operator-8ac1b8fa774f1aa8dc778c45370855f7849593f96272e210a9cb1a75a40746ec-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8ac1b8fa774f1aa8dc778c45370855f7849593f96272e210a9cb1a75a40746ec"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:8ac1b8fa774f1aa8dc778c45370855f7849593f96272e210a9cb1a75a40746ec"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:22d7a6acd4f0c73c9423fb1d6bef2ed1bdd9c363d2c278616e01b84e4d91a1d4"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:a47532e836b949c8022260d429fe29d4deb3ebbd944c0b92af75b13093777bf7"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.6.6",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b22190de3162d3e03481cae8904ce563912756eea7ac7e7feec0acbbdae5e6f6",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.6.6"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:104cc7564fcc3261faa3fbf9c95720b4434e15103b876c080ed012b244ef1dae",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.4.28\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:dbcad68b70ab7918e944099aef4177c9bc3378e9ca49499dbb94a175927d3209"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:06f1150114d4c0bd236d2a5d4716c9c3e95a9733058297790389d6ba2a1bf264"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b22190de3162d3e03481cae8904ce563912756eea7ac7e7feec0acbbdae5e6f6"
        },
        {
            "name": "gitops-rhel8-operator-104cc7564fcc3261faa3fbf9c95720b4434e15103b876c080ed012b244ef1dae-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:104cc7564fcc3261faa3fbf9c95720b4434e15103b876c080ed012b244ef1dae"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:104cc7564fcc3261faa3fbf9c95720b4434e15103b876c080ed012b244ef1dae"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:e9e2f950cda8153cff112e43872b98e4977d3cbdf59713b8de92defef6d34b6d"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:0cc4fa704e581cd5581c816668183f602fae6ef9ab3c04ce0d99d561287ef140"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.7.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1d11525c57466ff96de27e210e3a9058ffad8ff2158f66489114243c3a120828",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.7.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7424f55385fcbf31fdfa3bdb441867b258e78e1c8607dff0ba0a6a18091077ff",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.7.0",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.5.4\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficient privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:9a888942eb33ee587ef73feb1386299ae4e57c418dcacdfc8a1145909aa6b36f"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:2f7cc1b5ac9068fd9a089f177d98948e9021bf1746ce1255d2029efba107b998"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:d190be46dfe5f59343e4e1197df71149357deaf030bbae7b7b05e010395f6fba"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:1d11525c57466ff96de27e210e3a9058ffad8ff2158f66489114243c3a120828"
        },
        {
            "name": "gitops-rhel8-operator-7424f55385fcbf31fdfa3bdb441867b258e78e1c8607dff0ba0a6a18091077ff-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7424f55385fcbf31fdfa3bdb441867b258e78e1c8607dff0ba0a6a18091077ff"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7424f55385fcbf31fdfa3bdb441867b258e78e1c8607dff0ba0a6a18091077ff"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:2582a86a2b10a4d2e97bcfe48cc93d0267b7daaef96b45c79124bd1767207afe"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:579877e78130436b58f6c427c059fd7cca0f30afdfd822ccf2f4c051e05c5cba"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.7.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:633538bbab3eb3e19e03ef72334547c8ac8456a5468822aab8afe4d5b05217ac",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.7.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d29226ede558057c4af93748370f0d56dd19e4f5739d27c23ed3d2da721459fa",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.7.0",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.5.8\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficient privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1d9ea806f00fd2c1802cf384cce95e222d4498221a69df05a238187a4760724d"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:b2b85ece693b4cf5609b5a1a95d9eddba859723593a6d3065cc0310e0073fcd1"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:66c8715259b320a4cb7d91ed33ea85360d774148f81f8fdcd8e23c1cb06a4bd6"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:633538bbab3eb3e19e03ef72334547c8ac8456a5468822aab8afe4d5b05217ac"
        },
        {
            "name": "gitops-rhel8-operator-d29226ede558057c4af93748370f0d56dd19e4f5739d27c23ed3d2da721459fa-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d29226ede558057c4af93748370f0d56dd19e4f5739d27c23ed3d2da721459fa"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:d29226ede558057c4af93748370f0d56dd19e4f5739d27c23ed3d2da721459fa"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:bcda82e93c383bf71100c17cb8debec0993473a0f01b182b0ce06f6b2f123f57"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:562212b5455a893b4f947533a0156862280364c356d8239dc337dc0078859023"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.7.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ec0dba75d110318fe1513346982468591412b61e40e9dd8c9436f586977f0225",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.7.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b3444c929a56fa488274c32565d48d9f69938e1291364ee5be9f446f810f999b",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.7.0",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.5.11\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficient privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:3a0f7d98d98ae8fb3ab53506577e9647130e55c900952ed751ce08ef727a682f"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:90f54d201ac11b914955a42dffefa8566afe3bc32e3c4a88923b98bd06f7bc49"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:185d4c4584e0a891f99f461ba4554e948e4ec2c1cabeffc99e0c9d84e4cdc374"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:ec0dba75d110318fe1513346982468591412b61e40e9dd8c9436f586977f0225"
        },
        {
            "name": "gitops-rhel8-operator-b3444c929a56fa488274c32565d48d9f69938e1291364ee5be9f446f810f999b-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b3444c929a56fa488274c32565d48d9f69938e1291364ee5be9f446f810f999b"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b3444c929a56fa488274c32565d48d9f69938e1291364ee5be9f446f810f999b"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:1eadf6c1146d72c71fef08cfc35c0363b8dba02c815d8413ce06dd2f7a018e24"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:f8af48a0deb6b6c393b93d94467030c7bf558faf8c40b4b52a72831f47cc484d"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.7.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b4a5bccf0a2d03ee1164e67e508a23fb26ac3f39433514d83807b1a4e5d32219",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.7.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bd86732f4fc576cc633d8046822ac4d72df429b537219ff0d5b42f335c74c030",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.5.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficient privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:389816ff7bfc2c6a0c8b4da850d054003b9dfe260bd344ede38dcd4cb09c05ed"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:7d6a10c7d65e21043791c4771ec179bbd78747d5077f4e16cb016d0b84bff516"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:342ff9589bc2623450e925fba36130ad09427307868d0abb86e8c97a88486019"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b4a5bccf0a2d03ee1164e67e508a23fb26ac3f39433514d83807b1a4e5d32219"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b3444c929a56fa488274c32565d48d9f69938e1291364ee5be9f446f810f999b"
        },
        {
            "name": "gitops-rhel8-operator-bd86732f4fc576cc633d8046822ac4d72df429b537219ff0d5b42f335c74c030-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:bd86732f4fc576cc633d8046822ac4d72df429b537219ff0d5b42f335c74c030"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:69d6e638e875b8f9d0f67c0a2703b460c85db6aa5e3bda15749da2066cdd974c"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:97f6863e244b60de474d71abd333357b41e13dcfeb5abb90e81b0b1fbf94b8cd"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.7.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:09a43d5b2881ee4f32d5d49ac53671a0f50cf3cc0f96f10c835b729988c97a82",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.7.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.5.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficient privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:908e72f5bff385923790529fc89ca4a1f26d1ffc03a6bc3a1f2f1d8fa425a6e2"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:cd5b3779f5e3ad72a9cb19d3c8c8267a0dcf956bfdcdcd27db166be446c4156a"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:5c11be8ec9db54331893f2f298aa27006e77b0eaded2d88d0531c77da91a421f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:09a43d5b2881ee4f32d5d49ac53671a0f50cf3cc0f96f10c835b729988c97a82"
        },
        {
            "name": "gitops-rhel8-operator-e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c55aadf45397083bec4e42d6c0514ed79169a07fd3d9d75671904df2c0520e52"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:be86916744230de2eba40a3f758cf5341d9d53ef8ceff7f264988472849fc5e0"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.7.4-0.1690486082.p",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c2f39be75173b4cc57498c5845b14c464bf9af92b49716df9661c8135ac2cf7a",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.7.4+0.1690486082.p"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe",
                    "createdAt": "2021-09-15T22:31:21Z",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.substitutesFor": "openshift-gitops-operator.v1.7.4",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD v2.5.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficient privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces. \n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    },
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc."
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f1371d2012796e9aaca105112190ff89ec3d0be95968e05b19db101480f67975"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:45789c49d9334e0ed062641313714c101bd0117dc5633316b1ec63e7a6c76c15"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:5c11be8ec9db54331893f2f298aa27006e77b0eaded2d88d0531c77da91a421f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:c2f39be75173b4cc57498c5845b14c464bf9af92b49716df9661c8135ac2cf7a"
        },
        {
            "name": "gitops-rhel8-operator-e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:e0967a4058fe5a9bfe7e998a3347529c99536cf3a44de9e40f9632035ff5a2fe"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:c55aadf45397083bec4e42d6c0514ed79169a07fd3d9d75671904df2c0520e52"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:26050fb95978e90e8d00e895032045e77cb236008a0e1417459e1aeca8a48c69"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:81a49ab7a2b5a5d64e04096e2fed9bd4f73037ffac9177dd2d2574fe391162bf",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f68c2c77ed962ed334810e90786495c1a67ae351cbe6c9fbca193eb47921266",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.8.0",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.3\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:80bd5befaa2090b9bf5975b81145ec6fbae00c5c0e7534672787d1f43899344a"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:8c78634aa3a76b40c80dd8e62cc6e5892ab23407367cfe30fdccc12464148d1c"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:fc69532be0f4a5e76cea13ff936d9eef099e8b330faa634dcae2dadad0541ae1"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:81a49ab7a2b5a5d64e04096e2fed9bd4f73037ffac9177dd2d2574fe391162bf"
        },
        {
            "name": "gitops-rhel8-operator-3f68c2c77ed962ed334810e90786495c1a67ae351cbe6c9fbca193eb47921266-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f68c2c77ed962ed334810e90786495c1a67ae351cbe6c9fbca193eb47921266"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:3f68c2c77ed962ed334810e90786495c1a67ae351cbe6c9fbca193eb47921266"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:5772954897b790a42733ae278630b920be498d82798cc8157375a41e83d91fc9"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:788f0c1011c7287362ff1db1ffa34c03ad182b6c4869d472cf1303da8943475d"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:273dcda07cdc475069a1dd41ecb2a91c51b2648f94eff57e9fd7e2e6aff75623",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ad9575be4f86e054bf06fb4f5b1b0300b891d6b318960334faec862e00fa22ab",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.7\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:3b7bc0aace228e698860234733ab74a9f4286a5d0067a688a652d461cc708b78"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:e1b624c5bcec9ef9c054810d14d755c56a2862d7772326e460e341e2b90475d5"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:701fc7487b337fbd4cd21308d3d78667ca07c2229f33c7ccc9bd048e36c44940"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:273dcda07cdc475069a1dd41ecb2a91c51b2648f94eff57e9fd7e2e6aff75623"
        },
        {
            "name": "gitops-rhel8-operator-ad9575be4f86e054bf06fb4f5b1b0300b891d6b318960334faec862e00fa22ab-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ad9575be4f86e054bf06fb4f5b1b0300b891d6b318960334faec862e00fa22ab"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:ad9575be4f86e054bf06fb4f5b1b0300b891d6b318960334faec862e00fa22ab"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:661ab407de854b850b3dd95e2edcfc932cab7ab8f3b7de9135ee6ae9d6203714"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:a8952e79c5128cd89288f3ee948655b041d9167aaca8b6c5d22a5df2146f0599"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        },
        {
            "name": "argocd_redis_ha_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:036a95924d289508df78f3d6b00327a06f6d592791f70d5ec099d8eb76b2379c",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7232662dfb1bcece8a9080e29bd18a2bd7799e6fa3c22731cb7f8630f5002c89",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.0-ocp",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.7\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:7959c6cfe84bc62f94e8c9964a82f7574506154aadb7b3a30cb681094bcb5b2b"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:26ad0ad443d4a34c29d070f9cc9f9cd5fa818ceb3d07a18ab145b9680521c434"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:94c347ce689050bc54f3fc1aab153cdc046de8de08c55183f6c50c3dd82a2694"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:036a95924d289508df78f3d6b00327a06f6d592791f70d5ec099d8eb76b2379c"
        },
        {
            "name": "gitops-rhel8-operator-7232662dfb1bcece8a9080e29bd18a2bd7799e6fa3c22731cb7f8630f5002c89-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7232662dfb1bcece8a9080e29bd18a2bd7799e6fa3c22731cb7f8630f5002c89"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:7232662dfb1bcece8a9080e29bd18a2bd7799e6fa3c22731cb7f8630f5002c89"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:b508789e62428d2ce899109c6e692e3ba551dfbf1669706ab49a5c11cdf74024"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:0cfe9fb92661cec0d271217b4e04007fb6fa00c443019bc0f2d139d0cf58a6e8"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:486f4e17fd9d229288c327e34fd90214ac4baff07dd8d95afc4b117dab5658c1",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:9e6c80602936cac28db7714cba96cca8162a40a87ab7aa7fd6de3a7c7f0a09ea",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.0-ocp",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.7\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:e78efc9dfafcfb788bdbac5cf72c954ed1a9975aae1eecd571992cccf8ce44d7"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:a27a41ac0b03aafe8b8e6ee3d42497c13b0cf24353e89dcd2fe40c53cfeca70f"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:e299b5a0c5328a42dde6335340d72c1934c297579b9df912ddd47ed85734b8f0"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:486f4e17fd9d229288c327e34fd90214ac4baff07dd8d95afc4b117dab5658c1"
        },
        {
            "name": "gitops-rhel8-operator-9e6c80602936cac28db7714cba96cca8162a40a87ab7aa7fd6de3a7c7f0a09ea-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:9e6c80602936cac28db7714cba96cca8162a40a87ab7aa7fd6de3a7c7f0a09ea"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:9e6c80602936cac28db7714cba96cca8162a40a87ab7aa7fd6de3a7c7f0a09ea"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:e7bc96dca4d1789f207c9a34c06099bff5483568f17e30de575d240a15b96add"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:7e22fa2de03658c20654d54dd51b7af420943685a1a3302167657d027b99ebfa"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e817356af45380f4a35daca113c90b918ee19602bdb599fa6f287c847d002808",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.0-ocp",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.132\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:1442d11e7045bff7a5488b3c423e2decc3d729232c771ddf4fd6adc51ded6aa1"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:97aac81515a12c357e704f816a80f2d681ad00994ffe2771187b0bb4dfe27eaf"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:baa2b039ba89b73e7e8b479918446b9efc7b7ffda5fc24459ed28c48d60890d9"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:e817356af45380f4a35daca113c90b918ee19602bdb599fa6f287c847d002808"
        },
        {
            "name": "gitops-rhel8-operator-b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:49b954c478d3596d95ca86aa6cf1ace9dd6449901c50a9bd8cb129f0196035fe"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:860b7290c1d7c7c7223fda17107f13a9f59fe998b6037febb05b0aceab7176f7"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.4-0.1693214052.p",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b52f38fe9adc006c7bfb7ef7582baa9811d3e180419870007ffa02e52c9b4320",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.4+0.1693214052.p"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "olm.substitutesFor": "openshift-gitops-operator.v1.8.4",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.0-ocp",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.132\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:00ecc5dccff479c209de1619e0ded7f3d935ff73802a1ff41c22a73d28b25233"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:50aaca834cda3c8d0343cb97159d339e2fba2bf3d9508f4bb640ba1e85849afe"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:baa2b039ba89b73e7e8b479918446b9efc7b7ffda5fc24459ed28c48d60890d9"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b52f38fe9adc006c7bfb7ef7582baa9811d3e180419870007ffa02e52c9b4320"
        },
        {
            "name": "gitops-rhel8-operator-b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:b9a2944e64f116023b417de6a497c8246658056a223d93deea12d078fc56f5fb"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:49b954c478d3596d95ca86aa6cf1ace9dd6449901c50a9bd8cb129f0196035fe"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:de8429a1563a23ae99ce61d8edf64faf120084997f209736b8396ee63fa42267"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.5",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:70db58fd5b998a759f31a92fc84caf71f4a59e70563b1539970feabd23f65d5d",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:081f53c58e24ea8b90789dbe0e39354924840a5a3bf20720dd13c299ec6b86ed",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.22.0-ocp",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.152\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:0afacc5a305609513811269b28f44fbc0764711c4ab83a43a6979081709ecbec"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:fe7afdb7552ac208a895d5f216fa3df4056cc9f60ce2a518fa8d4879bf4f8bbd"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:ce65eccf165965aa94ce2ead0513300b1cdcd3bea9dcdb7425e11bda4ae5dc44"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:70db58fd5b998a759f31a92fc84caf71f4a59e70563b1539970feabd23f65d5d"
        },
        {
            "name": "gitops-rhel8-operator-081f53c58e24ea8b90789dbe0e39354924840a5a3bf20720dd13c299ec6b86ed-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:081f53c58e24ea8b90789dbe0e39354924840a5a3bf20720dd13c299ec6b86ed"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:081f53c58e24ea8b90789dbe0e39354924840a5a3bf20720dd13c299ec6b86ed"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:951b6efc75d7d6977b311619a70ba8ba0b14d8131d73a9872b912d44d5ac9ef2"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:35059fbabb0e204534b790f7952ae1105c624ca883d178f3ee179c886278d498"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.8.6",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b2d58f4dc20eb7e17e09af0e8c5de55fa04f9f4f697e10c6be81a7a6a08381b2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.8.6"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.6.153\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:f77594bc053be144b33ff9603ee9675c7e82946ec0dbfb04d8f942c8d73155da"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:8aa68fddef88921aeeede24a849d3dabbceff01dc03185342c21e6ee58033eaf"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:8cc59901689858e06f5c2942f8c975449c17454fa8364da6153d9b5a3538a985"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:b2d58f4dc20eb7e17e09af0e8c5de55fa04f9f4f697e10c6be81a7a6a08381b2"
        },
        {
            "name": "gitops-rhel8-operator-f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f32df77b3c23d6a833ff887386285ca7a5bd436641f0ec1ffc934c8247fa315f"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:16d9184345e6d5a19f326a7b52f76d8a59b96763f233c50546ff017a625e5ff5"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:0d13c03048b4435d9f5045a6fb7bd4b8808461b26aeca60c0047fa5937e1d45d"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.9.0",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:625dbcf8f4efc1adb1c65dcd894ad5f840ea28ea6e29226c5f483724441b7f21",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.9.0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"RolloutManager\",\n    \"metadata\": {\n      \"name\": \"argo-rollout\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f4336d54225d883c96bac965317444a1a785574f3ba85a0b53c56db534cc86cf",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": ">=1.0.0 <1.9.0",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.7.2\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:d70aecb74cb46ce45e9ec02e9938da7c14316e7d142e78ee25b2d6b0ac1e506c"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:4e80c7810c4c99e89e35b33951ed8e1f4324899b5d47a8cd50cbb034f3e0c925"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:2925a527335159ca73115a831b56b713273372f8de18d08b745b8ce018491c71"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:44b5729b11c749e2e286fccc3021f1e9ba524c69fb9809b5d2121c4e5b05b40e"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:625dbcf8f4efc1adb1c65dcd894ad5f840ea28ea6e29226c5f483724441b7f21"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f4336d54225d883c96bac965317444a1a785574f3ba85a0b53c56db534cc86cf"
        },
        {
            "name": "gitops-rhel8-operator-f4336d54225d883c96bac965317444a1a785574f3ba85a0b53c56db534cc86cf-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:f4336d54225d883c96bac965317444a1a785574f3ba85a0b53c56db534cc86cf"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:3c03f3f8da227567fab48587ca546b51734d2ef4a8aa7b94ba449060a369001b"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:b6397098b9d0e1f9206b51e50013c90165b7ebb9ea69d305e77ecbef0da29b13"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:4a5b9b97466b53e7775d887a0d920507cebbf892e7bc6a5334c784c55f9e3dd8"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.9.1",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2ee96b238673878377a276aa6377493edc5501f7fc5ca6d13453a100689d8ac3",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.9.1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"RolloutManager\",\n    \"metadata\": {\n      \"name\": \"argo-rollout\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1a18c6f2029544c9174c94ae216b6334f74d0d71a24edfbf1afc9bb8a3e51e26",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.7.6\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:09189eedd4a0dae5158f45e010a88dc5000a3eb6679d52fa4832471e5605f7b1"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:cf44b39d1aae7ea2bbb3f7b10b3df98d29e8a1efbde3b002beaa2a00e638316c"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:4cc865d272402035ae33ca6ac8b626283964625152fe86baf9e355c20da474a7"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:7d8ba2051b56928c627d26c6decaf149caf5e4f7fd4394d798482d32a21e1ded"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2ee96b238673878377a276aa6377493edc5501f7fc5ca6d13453a100689d8ac3"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1a18c6f2029544c9174c94ae216b6334f74d0d71a24edfbf1afc9bb8a3e51e26"
        },
        {
            "name": "gitops-rhel8-operator-1a18c6f2029544c9174c94ae216b6334f74d0d71a24edfbf1afc9bb8a3e51e26-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:1a18c6f2029544c9174c94ae216b6334f74d0d71a24edfbf1afc9bb8a3e51e26"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:263e65faff81c20c14aa0c5063aa3cb8bc3359e1b722ed49db11d1d849de835f"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:030eef7243068db82b7ab2d1c509d9081d6ed14f15da5a242224b8ae4dfb861b"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:d0b08ab18fd49457091669e4378c58637fdf732fff866c6d699ae6a6285cc3ad"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:53598a6effeb90e4f1b005b2521beffd2fa2b0c52d0e7f2347ee2abd2577cab3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.9.2",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2201eec03ba3e0b01a5e2352d9a158c8d4e10063b699c1239c7a9eedc717dfa8",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.9.2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"RolloutManager\",\n    \"metadata\": {\n      \"name\": \"argo-rollout\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:99c4b5e58790dd096f3e8229f37bb9631a742f0d4433e1e3b2d30c408d5bbcd4",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.7.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:fe716f35a29951ce7f0728a02eee6fb099f16bba863e686eb550efeeff033347"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:106b643b278b4e26e64777c45ef7874f6c24f62fd52af9b02ca0dd426995e9dd"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:c3dafbce901c39e7ee1b40c9f3e6757c397f08d2e35d679ed384a636811470f8"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:3cc5c9bd71d9ce66f5d279474b1b4f0c4d2472f0962ce41b3d26fe874937d02f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:2201eec03ba3e0b01a5e2352d9a158c8d4e10063b699c1239c7a9eedc717dfa8"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:99c4b5e58790dd096f3e8229f37bb9631a742f0d4433e1e3b2d30c408d5bbcd4"
        },
        {
            "name": "gitops-rhel8-operator-99c4b5e58790dd096f3e8229f37bb9631a742f0d4433e1e3b2d30c408d5bbcd4-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:99c4b5e58790dd096f3e8229f37bb9631a742f0d4433e1e3b2d30c408d5bbcd4"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:a772781e043d5e65a529f889802416fc2898d7575719d53074526f8abc480c4b"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:1213c63021565370aea9a09a902e3d51023ace55b04345755af9410213ff2f83"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:388af909052debc0d224bfbaf9654ee5e21ea0f6ded613d13b6998417e64d7cf"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso75-openshift-rhel8@sha256:d5829e880db4b82a50a4962d61ea148522a93644174931b256d7ad866eadcf40"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.9.3",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d8725149c57d5de6c5c10d472cfd54721e8f8bf12e66e34c0311103a835a3081",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.9.3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"RolloutManager\",\n    \"metadata\": {\n      \"name\": \"argo-rollout\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84be3de58f2d1be62222636bde2883d8478c0c63988fb7ce2021499725855681",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.7.14\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:bf26116973837c7364e79bcf12a71174dc5cd1cbe483e8df15cc36caa5707d08"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:b4b993a0c6e17134c19b5a4281c9bba84e13f567098f6452289ca4a2957a19e2"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:060efded38eeffc3a4b3406d520ffe2803aaaa87e655fcd7eaf8dedd503fd0e4"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:29faed37d99eb218754aa23a1f3ae4230ce9f9265a2e96ab83b594d8377568b6"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:d8725149c57d5de6c5c10d472cfd54721e8f8bf12e66e34c0311103a835a3081"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84be3de58f2d1be62222636bde2883d8478c0c63988fb7ce2021499725855681"
        },
        {
            "name": "gitops-rhel8-operator-84be3de58f2d1be62222636bde2883d8478c0c63988fb7ce2021499725855681-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:84be3de58f2d1be62222636bde2883d8478c0c63988fb7ce2021499725855681"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:475a7933a06b56ac63a7e2a2dd7d426bb13a5f70ba601da8ed1435145b3b8886"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:283faa2289d7204293758d2ffa96a2cd24a7685ddf0a51b52e9b910831550e4c"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:42fadf1b11adedfaf254b95a4d2bce4e4d6b48b86bb88c3b73a09f899f615860"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "openshift-gitops-operator.v1.9.4",
    "package": "openshift-gitops-operator",
    "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:27efa0ab1d9c69047a924bc1dcd2b56108f5f390a6da56afb6ab7a37cb4578e2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisRun",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "AppProject",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Application",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ApplicationSet",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ArgoCD",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "ClusterAnalysisTemplate",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Experiment",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "Rollout",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "argoproj.io",
                "kind": "RolloutManager",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "pipelines.openshift.io",
                "kind": "GitopsService",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "openshift-gitops-operator",
                "version": "1.9.4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"AppProject\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"Application\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ApplicationSet\",\n    \"metadata\": {\n      \"name\": \"example\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"ArgoCD\",\n    \"metadata\": {\n      \"name\": \"argocd\"\n    },\n    \"spec\": {\n      \"controller\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2048Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"1024Mi\"\n          }\n        }\n      },\n      \"ha\": {\n        \"enabled\": false,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"rbac\": {\n        \"defaultPolicy\": \"\",\n        \"policy\": \"g, system:cluster-admins, role:admin\\n\",\n        \"scopes\": \"[groups]\"\n      },\n      \"redis\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"128Mi\"\n          }\n        }\n      },\n      \"repo\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"1000m\",\n            \"memory\": \"1024Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"250m\",\n            \"memory\": \"256Mi\"\n          }\n        }\n      },\n      \"resourceExclusions\": \"- apiGroups:\\n  - tekton.dev\\n  clusters:\\n  - '*'\\n  kinds:\\n  - TaskRun\\n  - PipelineRun        \\n\",\n      \"server\": {\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"500m\",\n            \"memory\": \"256Mi\"\n          },\n          \"requests\": {\n            \"cpu\": \"125m\",\n            \"memory\": \"128Mi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"sso\": {\n        \"dex\": {\n          \"openShiftOAuth\": true,\n          \"resources\": {\n            \"limits\": {\n              \"cpu\": \"500m\",\n              \"memory\": \"256Mi\"\n            },\n            \"requests\": {\n              \"cpu\": \"250m\",\n              \"memory\": \"128Mi\"\n            }\n          }\n        },\n        \"provider\": \"dex\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\n    \"kind\": \"RolloutManager\",\n    \"metadata\": {\n      \"name\": \"argo-rollout\"\n    },\n    \"spec\": null\n  },\n  {\n    \"apiVersion\": \"pipelines.openshift.io/v1alpha1\",\n    \"kind\": \"GitopsService\",\n    \"metadata\": {\n      \"name\": \"gitopsservice-sample\"\n    },\n    \"spec\": null\n  }\n]",
                    "capabilities": "Deep Insights",
                    "console.openshift.io/plugins": "[\"gitops-plugin\"]",
                    "containerImage": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4",
                    "description": "Enables teams to adopt GitOps principles for managing cluster configurations and application delivery across hybrid multi-cluster Kubernetes environments.",
                    "olm.skipRange": "",
                    "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
                    "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
                    "operators.operatorframework.io/builder": "operator-sdk-v1.10.0+git",
                    "operators.operatorframework.io/internal-objects": "[\"gitopsservices.pipelines.openshift.io\"]",
                    "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
                    "repository": "https://github.com/redhat-developer/gitops-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "analysisruns.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisRun"
                        },
                        {
                            "name": "analysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AnalysisTemplate"
                        },
                        {
                            "name": "applications.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Application",
                            "displayName": "Application",
                            "description": "An Application is a group of Kubernetes resources as defined by a manifest."
                        },
                        {
                            "name": "applicationsets.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ApplicationSet",
                            "description": "ApplicationSet is the representation of an ApplicationSet controller deployment."
                        },
                        {
                            "name": "appprojects.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "AppProject",
                            "displayName": "AppProject",
                            "description": "An AppProject is a logical grouping of Argo CD Applications."
                        },
                        {
                            "name": "argocds.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ArgoCD",
                            "displayName": "Argo CD",
                            "description": "Argo CD is the representation of an Argo CD deployment.",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "ArgoCD",
                                    "version": "v1alpha1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "CronJob",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Ingress",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Job",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "PersistentVolumeClaim",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Prometheus",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ServiceMonitor",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                }
                            ]
                        },
                        {
                            "name": "clusteranalysistemplates.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "ClusterAnalysisTemplate"
                        },
                        {
                            "name": "experiments.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Experiment"
                        },
                        {
                            "name": "gitopsservices.pipelines.openshift.io",
                            "version": "v1alpha1",
                            "kind": "GitopsService",
                            "displayName": "Gitops Service",
                            "description": "GitopsService is the Schema for the gitopsservices API"
                        },
                        {
                            "name": "rolloutmanagers.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "RolloutManager"
                        },
                        {
                            "name": "rollouts.argoproj.io",
                            "version": "v1alpha1",
                            "kind": "Rollout"
                        }
                    ]
                },
                "description": "Red Hat OpenShift GitOps is a declarative continuous delivery platform based on [Argo CD](https://argoproj.github.io/argo-cd/). It enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. Following GitOps and infrastructure as code principles, you can store the configuration of clusters and applications in Git repositories and use Git workflows to roll them out to the target clusters.\n\n## Features\n* Automated install and upgrades of Argo CD\n* Manual and automated configuration sync from Git repositories to target OpenShift and Kubernetes clusters\n* Support for the Helm and Kustomize templating tools\n* Configuration drift detection and visualization on live clusters\n* Audit trails of rollouts to the clusters\n* Monitoring and logging integration with OpenShift\n* Automated GitOps bootstrapping using Tekton and Argo CD with [GitOps Application Manager CLI](https://github.com/redhat-developer/kam)\n\n## Components\n* Argo CD 2.7.16\n* GitOps Application Manager CLI ([download](https://github.com/redhat-developer/kam/releases))\n\n## How to Install \nAfter installing the OpenShift GitOps operator, an instance  of Argo CD is installed in the `openshift-gitops` namespace which has sufficent privileges for managing cluster configurations. You can create additional Argo CD instances using the `ArgoCD` custom resource within the desired namespaces.\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: ArgoCD\nmetadata:\n  name: argocd\nspec:\n  server:\n    route:\n      enabled: true\n```\n\nOpenShift GitOps is a layered product on top of OpenShift that enables teams to adopt GitOps principles for managing cluster configurations and automating secure and repeatable application delivery across hybrid multi-cluster Kubernetes environments. OpenShift GitOps is built around Argo CD as the core upstream project and assists customers to establish an end-to-end application delivery workflow on GitOps principles.\n",
                "displayName": "Red Hat OpenShift GitOps",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": false
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": false
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": false
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "devtools",
                    "gitops",
                    "pipelines"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Release Notes",
                        "url": "https://docs.openshift.com/container-platform/4.10/cicd/gitops/gitops-release-notes.html"
                    },
                    {
                        "name": "Day 1 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day1"
                    },
                    {
                        "name": "Day 2 Operations",
                        "url": "https://github.com/redhat-developer/kam/tree/master/docs/journey/day2"
                    }
                ],
                "maintainers": [
                    {
                        "name": "OpenShift GitOps Team",
                        "email": "team-gitops@redhat.com"
                    }
                ],
                "maturity": "GA",
                "provider": {
                    "name": "Red Hat Inc"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "argo_rollouts_image",
            "image": "registry.redhat.io/openshift-gitops-1/argo-rollouts-rhel8@sha256:3d17786e2f4063154b9e3a40b96bf8ec0a14b86395cea5fe7ca18c5b43764478"
        },
        {
            "name": "argocd_image",
            "image": "registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:3873d1f18b5643e1de2601419410270342650a21428bb26a4cbee20c0c63f98b"
        },
        {
            "name": "gitops_console_plugin_image",
            "image": "registry.redhat.io/openshift-gitops-1/console-plugin-rhel8@sha256:86012145d4b8798dc12f6f4f07a9316a193188aaac865e324b63f4e60e8ec584"
        },
        {
            "name": "argocd_dex_image",
            "image": "registry.redhat.io/openshift-gitops-1/dex-rhel8@sha256:136d3a936759e112d3ea2e78f7c02bd882b0fd3011f4c452f45c32c43822772d"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-operator-bundle@sha256:27efa0ab1d9c69047a924bc1dcd2b56108f5f390a6da56afb6ab7a37cb4578e2"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4"
        },
        {
            "name": "gitops-rhel8-operator-11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4-annotation",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8-operator@sha256:11a6084e11aa32511a34bd6cfb4f4995aec690c1f5ed61861e99f6e42d62afb4"
        },
        {
            "name": "backend_image",
            "image": "registry.redhat.io/openshift-gitops-1/gitops-rhel8@sha256:43bb961d847477902e66a92edd1539322cac8d5f74706b048a458ad037a0c7a3"
        },
        {
            "name": "kam_image",
            "image": "registry.redhat.io/openshift-gitops-1/kam-delivery-rhel8@sha256:80f92842fe4cba008a873ad2ab6059a3a24e76e16671d8ece034dbbe666996bc"
        },
        {
            "name": "must_gather_image",
            "image": "registry.redhat.io/openshift-gitops-1/must-gather-rhel8@sha256:a568c8c647e2e2d6abdf12138eeef8f8bdde1fdcbf786e9ca8c8f93bc79acaf9"
        },
        {
            "name": "argocd_redis_ha_proxy_image",
            "image": "registry.redhat.io/openshift4/ose-haproxy-router@sha256:edf7ce748b703e195220b7bd7b42fa2caa4cdfd96840445e096036a0d85f1ff2"
        },
        {
            "name": "argocd_keycloak_image",
            "image": "registry.redhat.io/rh-sso-7/sso76-openshift-rhel8@sha256:ec9f60018694dcc5d431ba47d5536b761b71cb3f66684978fe6bb74c157679ac"
        },
        {
            "name": "argocd_redis_image",
            "image": "registry.redhat.io/rhel8/redis-6@sha256:edbd40185ed8c20ee61ebdf9f2e1e1d7594598fceff963b4dee3201472d6deda"
        }
    ]
}

{
    "schema": "olm.package",
    "name": "amq-streams",
    "defaultChannel": "stable",
    "icon": {
        "base64data": "",
        "mediatype": "image/svg+xml"
    }
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.2.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.2.0-5",
            "replaces": "amqstreams.v2.2.0-4",
            "skipRange": ">=2.1.0-0 <2.2.0-5"
        },
        {
            "name": "amqstreams.v2.2.1-0",
            "replaces": "amqstreams.v2.2.0-5",
            "skipRange": ">=2.1.0-0 <2.2.1-0"
        },
        {
            "name": "amqstreams.v2.2.1-1",
            "replaces": "amqstreams.v2.2.1-0",
            "skipRange": ">=2.1.0-0 <2.2.1-1"
        },
        {
            "name": "amqstreams.v2.2.1-2",
            "replaces": "amqstreams.v2.2.1-1",
            "skipRange": ">=2.1.0-0 <2.2.1-2"
        },
        {
            "name": "amqstreams.v2.2.1-3",
            "replaces": "amqstreams.v2.2.1-2",
            "skipRange": ">=2.1.0-0 <2.2.1-3"
        },
        {
            "name": "amqstreams.v2.2.1-4",
            "replaces": "amqstreams.v2.2.1-3",
            "skipRange": ">=2.1.0-0 <2.2.1-4"
        },
        {
            "name": "amqstreams.v2.2.1-5",
            "replaces": "amqstreams.v2.2.1-4",
            "skipRange": ">=2.1.0-0 <2.2.1-5"
        },
        {
            "name": "amqstreams.v2.2.1-6",
            "replaces": "amqstreams.v2.2.1-5",
            "skipRange": ">=2.1.0-0 <2.2.1-6"
        },
        {
            "name": "amqstreams.v2.2.1-7",
            "replaces": "amqstreams.v2.2.1-6",
            "skipRange": ">=2.1.0-0 <2.2.1-7"
        },
        {
            "name": "amqstreams.v2.2.2-0",
            "replaces": "amqstreams.v2.2.1-7",
            "skipRange": ">=2.1.0-0 <2.2.2-0"
        },
        {
            "name": "amqstreams.v2.2.2-1",
            "replaces": "amqstreams.v2.2.2-0",
            "skipRange": ">=2.1.0-0 <2.2.2-1"
        },
        {
            "name": "amqstreams.v2.2.2-2",
            "replaces": "amqstreams.v2.2.2-1",
            "skipRange": ">=2.1.0-0 <2.2.2-2"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.3.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.3.0-4",
            "replaces": "amqstreams.v2.3.0-3",
            "skipRange": ">=2.2.0-0 <2.3.0-4"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.4.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.4.0-1",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.3.0-0 <2.4.0-1"
        },
        {
            "name": "amqstreams.v2.4.0-2",
            "replaces": "amqstreams.v2.4.0-1",
            "skipRange": ">=2.3.0-0 <2.4.0-2"
        },
        {
            "name": "amqstreams.v2.4.0-3",
            "replaces": "amqstreams.v2.4.0-2",
            "skipRange": ">=2.3.0-0 <2.4.0-3"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.5.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.5.0-0",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-0"
        },
        {
            "name": "amqstreams.v2.5.0-1",
            "replaces": "amqstreams.v2.5.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-1"
        },
        {
            "name": "amqstreams.v2.5.1-0",
            "replaces": "amqstreams.v2.5.0-1",
            "skipRange": ">=2.4.0-0 <2.5.1-0"
        },
        {
            "name": "amqstreams.v2.5.1-1",
            "replaces": "amqstreams.v2.5.1-0",
            "skipRange": ">=2.4.0-0 <2.5.1-1"
        },
        {
            "name": "amqstreams.v2.5.1-2",
            "replaces": "amqstreams.v2.5.1-1",
            "skipRange": ">=2.4.0-0 <2.5.1-2"
        },
        {
            "name": "amqstreams.v2.5.1-3",
            "replaces": "amqstreams.v2.5.1-2",
            "skipRange": ">=2.4.0-0 <2.5.1-3"
        },
        {
            "name": "amqstreams.v2.5.1-4",
            "replaces": "amqstreams.v2.5.1-3",
            "skipRange": ">=2.4.0-0 <2.5.1-4"
        },
        {
            "name": "amqstreams.v2.5.1-5",
            "replaces": "amqstreams.v2.5.1-4",
            "skipRange": ">=2.4.0-0 <2.5.1-5"
        },
        {
            "name": "amqstreams.v2.5.2-0",
            "replaces": "amqstreams.v2.5.1-5",
            "skipRange": ">=2.4.0-0 <2.5.2-0"
        },
        {
            "name": "amqstreams.v2.5.2-1",
            "replaces": "amqstreams.v2.5.2-0",
            "skipRange": ">=2.4.0-0 <2.5.2-1"
        },
        {
            "name": "amqstreams.v2.5.2-2",
            "replaces": "amqstreams.v2.5.2-1",
            "skipRange": ">=2.4.0-0 <2.5.2-2"
        },
        {
            "name": "amqstreams.v2.5.2-3",
            "replaces": "amqstreams.v2.5.2-2",
            "skipRange": ">=2.4.0-0 <2.5.2-3"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.6.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.5.0-0",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-0"
        },
        {
            "name": "amqstreams.v2.5.0-1",
            "replaces": "amqstreams.v2.5.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-1"
        },
        {
            "name": "amqstreams.v2.5.1-0",
            "replaces": "amqstreams.v2.5.0-1",
            "skipRange": ">=2.4.0-0 <2.5.1-0"
        },
        {
            "name": "amqstreams.v2.5.1-1",
            "replaces": "amqstreams.v2.5.1-0",
            "skipRange": ">=2.4.0-0 <2.5.1-1"
        },
        {
            "name": "amqstreams.v2.6.0-0",
            "replaces": "amqstreams.v2.5.1-1",
            "skipRange": ">=2.5.0-0 <2.6.0-0"
        },
        {
            "name": "amqstreams.v2.6.0-1",
            "replaces": "amqstreams.v2.6.0-0",
            "skipRange": ">=2.5.0-0 <2.6.0-1"
        },
        {
            "name": "amqstreams.v2.6.0-2",
            "replaces": "amqstreams.v2.6.0-1",
            "skipRange": ">=2.5.0-0 <2.6.0-2"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.7.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.5.0-0",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-0"
        },
        {
            "name": "amqstreams.v2.5.0-1",
            "replaces": "amqstreams.v2.5.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-1"
        },
        {
            "name": "amqstreams.v2.5.1-0",
            "replaces": "amqstreams.v2.5.0-1",
            "skipRange": ">=2.4.0-0 <2.5.1-0"
        },
        {
            "name": "amqstreams.v2.5.1-1",
            "replaces": "amqstreams.v2.5.1-0",
            "skipRange": ">=2.4.0-0 <2.5.1-1"
        },
        {
            "name": "amqstreams.v2.6.0-0",
            "replaces": "amqstreams.v2.5.1-1",
            "skipRange": ">=2.5.0-0 <2.6.0-0"
        },
        {
            "name": "amqstreams.v2.6.0-1",
            "replaces": "amqstreams.v2.6.0-0",
            "skipRange": ">=2.5.0-0 <2.6.0-1"
        },
        {
            "name": "amqstreams.v2.6.0-2",
            "replaces": "amqstreams.v2.6.0-1",
            "skipRange": ">=2.5.0-0 <2.6.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-0",
            "replaces": "amqstreams.v2.6.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-0"
        },
        {
            "name": "amqstreams.v2.7.0-1",
            "replaces": "amqstreams.v2.7.0-0",
            "skipRange": ">=2.6.0-0 <2.7.0-1"
        },
        {
            "name": "amqstreams.v2.7.0-2",
            "replaces": "amqstreams.v2.7.0-1",
            "skipRange": ">=2.6.0-0 <2.7.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-3",
            "replaces": "amqstreams.v2.7.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-3"
        },
        {
            "name": "amqstreams.v2.7.0-4",
            "replaces": "amqstreams.v2.7.0-3",
            "skipRange": ">=2.6.0-0 <2.7.0-4"
        },
        {
            "name": "amqstreams.v2.7.0-5",
            "replaces": "amqstreams.v2.7.0-4",
            "skipRange": ">=2.6.0-0 <2.7.0-5"
        },
        {
            "name": "amqstreams.v2.7.0-6",
            "replaces": "amqstreams.v2.7.0-5",
            "skipRange": ">=2.6.0-0 <2.7.0-6"
        },
        {
            "name": "amqstreams.v2.7.0-7",
            "replaces": "amqstreams.v2.7.0-6",
            "skipRange": ">=2.6.0-0 <2.7.0-7"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.8.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.5.0-0",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-0"
        },
        {
            "name": "amqstreams.v2.5.0-1",
            "replaces": "amqstreams.v2.5.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-1"
        },
        {
            "name": "amqstreams.v2.5.1-0",
            "replaces": "amqstreams.v2.5.0-1",
            "skipRange": ">=2.4.0-0 <2.5.1-0"
        },
        {
            "name": "amqstreams.v2.5.1-1",
            "replaces": "amqstreams.v2.5.1-0",
            "skipRange": ">=2.4.0-0 <2.5.1-1"
        },
        {
            "name": "amqstreams.v2.6.0-0",
            "replaces": "amqstreams.v2.5.1-1",
            "skipRange": ">=2.5.0-0 <2.6.0-0"
        },
        {
            "name": "amqstreams.v2.6.0-1",
            "replaces": "amqstreams.v2.6.0-0",
            "skipRange": ">=2.5.0-0 <2.6.0-1"
        },
        {
            "name": "amqstreams.v2.6.0-2",
            "replaces": "amqstreams.v2.6.0-1",
            "skipRange": ">=2.5.0-0 <2.6.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-0",
            "replaces": "amqstreams.v2.6.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-0"
        },
        {
            "name": "amqstreams.v2.7.0-1",
            "replaces": "amqstreams.v2.7.0-0",
            "skipRange": ">=2.6.0-0 <2.7.0-1"
        },
        {
            "name": "amqstreams.v2.7.0-2",
            "replaces": "amqstreams.v2.7.0-1",
            "skipRange": ">=2.6.0-0 <2.7.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-3",
            "replaces": "amqstreams.v2.7.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-3"
        },
        {
            "name": "amqstreams.v2.7.0-4",
            "replaces": "amqstreams.v2.7.0-3",
            "skipRange": ">=2.6.0-0 <2.7.0-4"
        },
        {
            "name": "amqstreams.v2.7.0-5",
            "replaces": "amqstreams.v2.7.0-4",
            "skipRange": ">=2.6.0-0 <2.7.0-5"
        },
        {
            "name": "amqstreams.v2.8.0-0",
            "replaces": "amqstreams.v2.7.0-5",
            "skipRange": ">=2.7.0-0 <2.8.0-0"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-2.x",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.5.0-0",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-0"
        },
        {
            "name": "amqstreams.v2.5.0-1",
            "replaces": "amqstreams.v2.5.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-1"
        },
        {
            "name": "amqstreams.v2.5.1-0",
            "replaces": "amqstreams.v2.5.0-1",
            "skipRange": ">=2.4.0-0 <2.5.1-0"
        },
        {
            "name": "amqstreams.v2.5.1-1",
            "replaces": "amqstreams.v2.5.1-0",
            "skipRange": ">=2.4.0-0 <2.5.1-1"
        },
        {
            "name": "amqstreams.v2.6.0-0",
            "replaces": "amqstreams.v2.5.1-1",
            "skipRange": ">=2.5.0-0 <2.6.0-0"
        },
        {
            "name": "amqstreams.v2.6.0-1",
            "replaces": "amqstreams.v2.6.0-0",
            "skipRange": ">=2.5.0-0 <2.6.0-1"
        },
        {
            "name": "amqstreams.v2.6.0-2",
            "replaces": "amqstreams.v2.6.0-1",
            "skipRange": ">=2.5.0-0 <2.6.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-0",
            "replaces": "amqstreams.v2.6.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-0"
        },
        {
            "name": "amqstreams.v2.7.0-1",
            "replaces": "amqstreams.v2.7.0-0",
            "skipRange": ">=2.6.0-0 <2.7.0-1"
        },
        {
            "name": "amqstreams.v2.7.0-2",
            "replaces": "amqstreams.v2.7.0-1",
            "skipRange": ">=2.6.0-0 <2.7.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-3",
            "replaces": "amqstreams.v2.7.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-3"
        },
        {
            "name": "amqstreams.v2.7.0-4",
            "replaces": "amqstreams.v2.7.0-3",
            "skipRange": ">=2.6.0-0 <2.7.0-4"
        },
        {
            "name": "amqstreams.v2.7.0-5",
            "replaces": "amqstreams.v2.7.0-4",
            "skipRange": ">=2.6.0-0 <2.7.0-5"
        },
        {
            "name": "amqstreams.v2.8.0-0",
            "replaces": "amqstreams.v2.7.0-5",
            "skipRange": ">=2.7.0-0 <2.8.0-0"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "amq-streams-lts",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.5.0-0",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-0"
        },
        {
            "name": "amqstreams.v2.5.0-1",
            "replaces": "amqstreams.v2.5.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-1"
        },
        {
            "name": "amqstreams.v2.5.1-0",
            "replaces": "amqstreams.v2.5.0-1",
            "skipRange": ">=2.4.0-0 <2.5.1-0"
        },
        {
            "name": "amqstreams.v2.5.1-1",
            "replaces": "amqstreams.v2.5.1-0",
            "skipRange": ">=2.4.0-0 <2.5.1-1"
        },
        {
            "name": "amqstreams.v2.5.1-2",
            "replaces": "amqstreams.v2.5.1-1",
            "skipRange": ">=2.4.0-0 <2.5.1-2"
        },
        {
            "name": "amqstreams.v2.5.1-3",
            "replaces": "amqstreams.v2.5.1-2",
            "skipRange": ">=2.4.0-0 <2.5.1-3"
        },
        {
            "name": "amqstreams.v2.5.1-4",
            "replaces": "amqstreams.v2.5.1-3",
            "skipRange": ">=2.4.0-0 <2.5.1-4"
        },
        {
            "name": "amqstreams.v2.5.1-5",
            "replaces": "amqstreams.v2.5.1-4",
            "skipRange": ">=2.4.0-0 <2.5.1-5"
        },
        {
            "name": "amqstreams.v2.5.2-0",
            "replaces": "amqstreams.v2.5.1-5",
            "skipRange": ">=2.4.0-0 <2.5.2-0"
        },
        {
            "name": "amqstreams.v2.5.2-1",
            "replaces": "amqstreams.v2.5.2-0",
            "skipRange": ">=2.4.0-0 <2.5.2-1"
        },
        {
            "name": "amqstreams.v2.5.2-2",
            "replaces": "amqstreams.v2.5.2-1",
            "skipRange": ">=2.4.0-0 <2.5.2-2"
        },
        {
            "name": "amqstreams.v2.5.2-3",
            "replaces": "amqstreams.v2.5.2-2",
            "skipRange": ">=2.4.0-0 <2.5.2-3"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable",
    "package": "amq-streams",
    "entries": [
        {
            "name": "amqstreams.v2.5.0-0",
            "replaces": "amqstreams.v2.4.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-0"
        },
        {
            "name": "amqstreams.v2.5.0-1",
            "replaces": "amqstreams.v2.5.0-0",
            "skipRange": ">=2.4.0-0 <2.5.0-1"
        },
        {
            "name": "amqstreams.v2.5.1-0",
            "replaces": "amqstreams.v2.5.0-1",
            "skipRange": ">=2.4.0-0 <2.5.1-0"
        },
        {
            "name": "amqstreams.v2.5.1-1",
            "replaces": "amqstreams.v2.5.1-0",
            "skipRange": ">=2.4.0-0 <2.5.1-1"
        },
        {
            "name": "amqstreams.v2.6.0-0",
            "replaces": "amqstreams.v2.5.1-1",
            "skipRange": ">=2.5.0-0 <2.6.0-0"
        },
        {
            "name": "amqstreams.v2.6.0-1",
            "replaces": "amqstreams.v2.6.0-0",
            "skipRange": ">=2.5.0-0 <2.6.0-1"
        },
        {
            "name": "amqstreams.v2.6.0-2",
            "replaces": "amqstreams.v2.6.0-1",
            "skipRange": ">=2.5.0-0 <2.6.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-0",
            "replaces": "amqstreams.v2.6.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-0"
        },
        {
            "name": "amqstreams.v2.7.0-1",
            "replaces": "amqstreams.v2.7.0-0",
            "skipRange": ">=2.6.0-0 <2.7.0-1"
        },
        {
            "name": "amqstreams.v2.7.0-2",
            "replaces": "amqstreams.v2.7.0-1",
            "skipRange": ">=2.6.0-0 <2.7.0-2"
        },
        {
            "name": "amqstreams.v2.7.0-3",
            "replaces": "amqstreams.v2.7.0-2",
            "skipRange": ">=2.6.0-0 <2.7.0-3"
        },
        {
            "name": "amqstreams.v2.7.0-4",
            "replaces": "amqstreams.v2.7.0-3",
            "skipRange": ">=2.6.0-0 <2.7.0-4"
        },
        {
            "name": "amqstreams.v2.7.0-5",
            "replaces": "amqstreams.v2.7.0-4",
            "skipRange": ">=2.6.0-0 <2.7.0-5"
        },
        {
            "name": "amqstreams.v2.8.0-0",
            "replaces": "amqstreams.v2.7.0-5",
            "skipRange": ">=2.7.0-0 <2.8.0-0"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.0-5",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:12c4bd165832d68cad65d20acd58ad5b341861e72f2b92900aecdc1c13fb5482",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.0-5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:12b7639a58f96588b2304d7db2cc173c4bf0b05ce3f3a74388083966f8ae6465",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.0-5",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:6b1bd8833060d0fd0baab6c29389b4011aef3fd675541af0d79e38ecc99d1c11"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:d7d40ca4bfa57f4a8728f63ce4955557185b347375c6fd91c378c62374963b8a"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:86e09b3caf8caaf6ca7a340ffd7a2e3ecc269673939414c6ef4cc20da45cce43"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:12c4bd165832d68cad65d20acd58ad5b341861e72f2b92900aecdc1c13fb5482"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:12b7639a58f96588b2304d7db2cc173c4bf0b05ce3f3a74388083966f8ae6465"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:f3d73c67eeecb5e72d82cb241b1afdfa28a4d7154fad073c7aa05a6c56b101ae",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:413a49c12557fce8b723dcfbe987d8a174671badd7fce297b12f79e0c49f3803",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-0",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:60b6b1e855fbeb6bfda52d8a5c2509592904edc133990d67e7c2e2fa37f583e5"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:1a232f845e203100eeead1ab915f495e73938d5570fe780fd924d818ccdb73ed"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:1d8b1e450942ba87cb3a9575d5ffa6aa758ee033a58a9088a7761778934f47e8"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:f3d73c67eeecb5e72d82cb241b1afdfa28a4d7154fad073c7aa05a6c56b101ae"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:413a49c12557fce8b723dcfbe987d8a174671badd7fce297b12f79e0c49f3803"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:0ebd92e6ee5334d8c2ef0d2d1cd8eca50a35800013ccbe7510f680831cf71f7d",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:64ba4e5b8d1f11994d66bc078d171ded96297ccd7b4c3341277ee5309920d6a3",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-1",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:795988013e4bc9d1d9caf62122ac98c7d7fb3b3ed00b372ea4f641ca2e1e5de1"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:51a5cc3d8cbffaf3c6be1063bbf7991fcd6606805a52912245b82e1ab8c2077d"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:048f00efb2a6c9c7959fd7450813367844c0cfef2783859c78d838f8803bef6f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:0ebd92e6ee5334d8c2ef0d2d1cd8eca50a35800013ccbe7510f680831cf71f7d"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:64ba4e5b8d1f11994d66bc078d171ded96297ccd7b4c3341277ee5309920d6a3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-2",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:ae357adb90656ff409c8ae162c8110077b4f8a877e3d9dc23a81883cd390860c",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:4623347bbd851bd28127b7e43f48fe6170860e847bb15ec811a98b6d55eaab21",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-2",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:b6094b0dd1f29ab65022c6df5eb44e8bad0aae166735e3bffe3b8090edffe6b9"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:fefc107e7bec408e418ef16ae754fa2c9f5bad95813e872ba9eea2387371f2c6"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:a4e144a2342b402cac65ac927322b2ddbe3ce461b94018f11e6befedc34197d7"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:ae357adb90656ff409c8ae162c8110077b4f8a877e3d9dc23a81883cd390860c"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:4623347bbd851bd28127b7e43f48fe6170860e847bb15ec811a98b6d55eaab21"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-3",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:b3ed59bf828e6ed3a8b2c4ee4c59591375a61e077c867c00790e01ec757af82b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:bbe8accdef56af9fb3f690a726ed57606f18467be0575559df615547230a0677",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-3",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:767f09365e65ded083d707566d1a49cff2f0b799a8f9e02f3039b3cb4845ed5f"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:b31b40a65e5a14fec325e7586400ea68d04f40ec4b4bffa791432578c8eaae95"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:d165efd0f2e8af7b729c6eb3c5cbadf3be4323c3b659e161fa179148510ae943"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:b3ed59bf828e6ed3a8b2c4ee4c59591375a61e077c867c00790e01ec757af82b"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:bbe8accdef56af9fb3f690a726ed57606f18467be0575559df615547230a0677"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-4",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:a5862d2410f8db23d8abccf9478fa5f7d575956508aa391c8f088cf7376d7d1a",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:931afd8bafd827b5e775174bc26cdb5a38630b29e04c697e8a73a2d0a26bf7ad",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-4",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:a5862d2410f8db23d8abccf9478fa5f7d575956508aa391c8f088cf7376d7d1a"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:711698b539a7cb87231b894409bc5a5613c61e8e80a7321706d4c409bba6dc86"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:beee41b49ad466befd990f6148d44bcf42ce9e9e76a021aaae50363142101b2d"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:c2d93b9fec0858460055cb272144405ebb8e8fa4f825dd408903722f4a861cb2"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:931afd8bafd827b5e775174bc26cdb5a38630b29e04c697e8a73a2d0a26bf7ad"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-5",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:c9ffd554180e560599b24398a04e72f4f88e0c7880e51bc8d14a0b3f34a6da00",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:ead64695978044fdafb55091d2845cd68c68808dc820daad83572edf4841d566",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-5",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:c9ffd554180e560599b24398a04e72f4f88e0c7880e51bc8d14a0b3f34a6da00"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:711698b539a7cb87231b894409bc5a5613c61e8e80a7321706d4c409bba6dc86"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:d21c3eee7094f4d01182d8287b4e4f5c9d59f3f9a4235ec631c7c51b3e0c1d4d"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:a508e3a0943be20e19b88d4338698074c78c26769ab37da0475457bf170c448d"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:ead64695978044fdafb55091d2845cd68c68808dc820daad83572edf4841d566"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-6",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:6d7d752a77bb050fb4418692d20d3b9037ae259f823338bf08d2903de95739b5",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-6"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:27a1580953c40dc0f03b8f2c0b29fc0ee7224cad2c7f04ea6bd425121db86801",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-6",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:6d7d752a77bb050fb4418692d20d3b9037ae259f823338bf08d2903de95739b5"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:d3d526d3adf32118162bf4f5cd3ae7283f89846c48421c6f2c6ca7cf5c3ad2ee"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:246db848169251216593aa9d60b50f7a7e078952645f14e8efd8b00c6ba1976f"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:6f8c9b83db3c6d0f5d87286539784841b31275a4e69caebe5dcf24737917609a"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:27a1580953c40dc0f03b8f2c0b29fc0ee7224cad2c7f04ea6bd425121db86801"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.1-7",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:df62ce05b6a8470f5dd8f1910f56c3056a1ea234ffd9c1d2fbe5aee2489863f3",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.1-7"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:426ec825db5c313e7b7268b6af9dea9a4f4770a57ff6657e9a0dc36e0c593a67",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.1-7",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:df62ce05b6a8470f5dd8f1910f56c3056a1ea234ffd9c1d2fbe5aee2489863f3"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:3d92e63ab692113f9a943d5f2f2deedb8487863cebd8bb9c24a3625610c17792"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:61ffcd830b5b72c897c3b7c07690a5a331f3c94a27960579ceb66c84e8d99bdd"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:2ac79e74732261fb388839720ceed5e6604a747f9b7d51078f9dbf0a713a522e"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:426ec825db5c313e7b7268b6af9dea9a4f4770a57ff6657e9a0dc36e0c593a67"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.2-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:75f7953e5ac834d8787f83508f38b0c031a7def6fb3776dee91c994ef5d78d20",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.2-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:8cc71cbfffd2fc4edbbf220767bb4c97e28e0933db9ea4e68b5e2215d157b616",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.2-0",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:75f7953e5ac834d8787f83508f38b0c031a7def6fb3776dee91c994ef5d78d20"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:755edc2eb9198e4ebf72de351a8bde910c2869401d79b3c473708171ea9d26ed"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:531d65d596098933c5eb7dc46cdde4e1f5524c26f892039067b46dded38132ed"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:90896f4c4e844706577b4873ff69533237a6ca27fcd222387dd7d0ae0959e4ac"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:8cc71cbfffd2fc4edbbf220767bb4c97e28e0933db9ea4e68b5e2215d157b616"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.2-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:bafb7843efff78326b7ba3fde47d70e72cfe778d1bab2ba5c4b2e9577097f78f",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.2-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:cda0728e7c026b27d64dc1a4c8052174cbaff81555810cfd509f5084536bc757",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.2-1",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:bafb7843efff78326b7ba3fde47d70e72cfe778d1bab2ba5c4b2e9577097f78f"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:e28e0c371f67f7b1ce38fc2b462a82a89f8a6e3676e110aabccdd59aa488fdfe"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:ddec5874705f2e7f98af81ec9cf3ca7eeca99b2ed1e2ee2984cf75df704a4274"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:e227492f2e2fa8d7b3061150dcde0ddedb6fbaffe7a1b25ba9c610831cfb5a1e"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:cda0728e7c026b27d64dc1a4c8052174cbaff81555810cfd509f5084536bc757"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.2.2-2",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:826354c9c06a06f998e522a88d6a81239e003e1d6a2633e9b7b27b8a61d5fe38",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.2.2-2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.2.3\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.2\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.2.3\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.2.3\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:f908d848b5e67de4b162597b190ef18d449ffd4b6540457b24b491445d5c5ea3",
                    "createdAt": "2022-07-01 10:33:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.1.0-0 <2.2.2-2",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat Integration\", \"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### CRD Upgrades\n**!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from AMQ Streams 1.7, migration to `v1beta2` needs to be completed for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! If upgrading from AMQ Streams version earlier than 1.7, you need to first install the CRDs from AMQ Streams 1.7 and complete the migration to `v1beta2` for all AMQ Streams CRDs and CRs before the upgrade to 2.2 is done! For more details about the CRD upgrades, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.2/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "Red Hat Integration - AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.16.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:826354c9c06a06f998e522a88d6a81239e003e1d6a2633e9b7b27b8a61d5fe38"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:5d49bd23da40590e74422424b9457398bad89da8276718ff6a8a088e901c8345"
        },
        {
            "name": "strimzi-kafka-310",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-31-rhel8@sha256:d0607285fae95365b9d34b9474466824fb5ad012871204e8b13e52e438b66bf5"
        },
        {
            "name": "strimzi-kafka-320",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:e3bbfff505f12c0360e175f4640c2dd9a7adcf3dce1ae2f586f2bde805ed8b1f"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:f908d848b5e67de4b162597b190ef18d449ffd4b6540457b24b491445d5c5ea3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.3.0-4",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:a59435a22c2f470b149ff721240f14144d2e56200b141e59a4f1011267a6c925",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.3.0-4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.3.1\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.3\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.3.1\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.3.1\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.3.1\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:2e46a25144d697761f0119deaf528c6f1c2ccd04e2acd95c661b0df4f32e1a9f",
                    "createdAt": "2022-10-31 17:05:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.2.0-0 <2.3.0-4",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.3.0 release, AMQ Streams supports only OCP 4.8 to 4.12!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 2.2 or earlier is not supported anymore!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more details, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.3/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.3/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.19.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq7/amq-streams-bridge-rhel8@sha256:c822b3d87f7dea233fc523238d8d0516e42f9a3d252f50f4d427c934995f9b22"
        },
        {
            "name": "strimzi-kafka-323",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-32-rhel8@sha256:0152a85f2d0bc85881dacaee62c6e8b0b8b04f57a542b9b82dc93ad5303d6bf9"
        },
        {
            "name": "strimzi-kafka-331",
            "image": "registry.redhat.io/amq7/amq-streams-kafka-33-rhel8@sha256:046c2539fef32bd928fc1f4f4c41e63f9a143b371fcc201d78c66f48fc34ea32"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq7/amq-streams-operator-bundle@sha256:a59435a22c2f470b149ff721240f14144d2e56200b141e59a4f1011267a6c925"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq7/amq-streams-rhel8-operator@sha256:2e46a25144d697761f0119deaf528c6f1c2ccd04e2acd95c661b0df4f32e1a9f"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.4.0-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:66e95ae7d2c5b6eeb1e422dd4191be1f723be73d2355ff3e011832aac90bf1fb",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.4.0-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.4.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.3\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.4.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.4.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:3a73d259c459284af40854ad7adc6bfb3d74065183a2ef32b30e54f645ae9d70",
                    "createdAt": "2022-10-31 17:05:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.3.0-0 <2.4.0-1",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.4.0 release, AMQ Streams supports only OCP 4.8 to 4.12!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 2.2 or earlier is not supported anymore!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more details, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.4/html/deploying_and_upgrading_amq_streams_on_openshift/assembly-upgrade-str#assembly-upgrade-resources-str\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.4/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.19.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:6ba9529ce2e03118f2ec31e56d812da12aa2ac05a06fecbd6336ef933beae8b7"
        },
        {
            "name": "strimzi-kafka-331",
            "image": "registry.redhat.io/amq-streams/kafka-33-rhel8@sha256:471e88a449a5ac41aa47a468e0099f1049b13638d99c1b5ef85a89f096ed3668"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:1e03d22cf9faf76084b90321e364f39e15b58851095d971505b7ccdfa9c233be"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:66e95ae7d2c5b6eeb1e422dd4191be1f723be73d2355ff3e011832aac90bf1fb"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:3a73d259c459284af40854ad7adc6bfb3d74065183a2ef32b30e54f645ae9d70"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.4.0-2",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:71eac7163ae1f890d717667926da60a07e9b0dd28b9dbc1cea25cf5f90eab712",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.4.0-2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.4.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.3\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.4.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.4.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:30432d5c097160b5cd48164f64a06350f092e7d3552c5736e11bca82d47fae61",
                    "createdAt": "2022-10-31 17:05:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.3.0-0 <2.4.0-2",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.4.0 release, AMQ Streams supports only OCP 4.8 to 4.12!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more details, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.4/html/deploying_and_managing_amq_streams_on_openshift/assembly-upgrade-str)\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.4/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.19.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:4892e5f370a383abad03caf064136d6a15639e49ee6f19618eaeddf5cf4da512"
        },
        {
            "name": "strimzi-kafka-331",
            "image": "registry.redhat.io/amq-streams/kafka-33-rhel8@sha256:494fa03c43a01182097633dd299a9cf4237bcf1974583bff418d933da5d457c0"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:83ffd193a211354adb72a80a827f5e43e462dba4a8a12d8a626684841981ff8a"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:71eac7163ae1f890d717667926da60a07e9b0dd28b9dbc1cea25cf5f90eab712"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:30432d5c097160b5cd48164f64a06350f092e7d3552c5736e11bca82d47fae61"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.4.0-3",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:1346dcee82f2120bd2af22be9f041e057bdc32f9ad1c3ef717d599ba6519faeb",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.4.0-3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.4.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.3\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.4.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.4.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Read\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Write\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Create\",\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operation\":\"Describe\",\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"my-cluster-target\",\n      \"clusters\": [\n        {\n          \"alias\": \"my-cluster-source\",\n          \"bootstrapServers\": \"my-cluster-source-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"my-cluster-target\",\n          \"bootstrapServers\": \"my-cluster-target-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"my-cluster-source\",\n          \"targetCluster\": \"my-cluster-target\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": 1,\n              \"offset-syncs.topic.replication.factor\": 1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"heartbeatConnector\": {\n            \"config\": {\n              \"heartbeats.topic.replication.factor\": 1\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": 1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:cd1fefcd199400a504b4b9942c24ba6becafcecc952a9e39fa2729228be79e77",
                    "createdAt": "2022-10-31 17:05:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.3.0-0 <2.4.0-3",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "StatefulSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.4.0 release, AMQ Streams supports only OCP 4.8 to 4.12!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more details, see the [documentation](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.4/html/deploying_and_managing_amq_streams_on_openshift/assembly-upgrade-str)\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/2.4/html/deploying_and upgrading_amq_streams_on_openshift/assembly-upgrade-str) for more information.\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.19.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-maven-builder",
            "image": "registry.access.redhat.com/ubi8/openjdk-11@sha256:d9739b266415be7c915daf3c61f8f1cc4e14d0b237a0ab664693bc2e0d3577e4"
        },
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:8d467fc746b78440df06f6d88d266f6ac9b5a4574a2b17fd870c173a107f8d65"
        },
        {
            "name": "strimzi-kafka-331",
            "image": "registry.redhat.io/amq-streams/kafka-33-rhel8@sha256:aa780a250444c2426be79e95366050a33f4a4c9d68c08b58743413ea67a2d6d7"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:50b3be789993cfeedc4923a8e760c1cf52498b2178be3abfa3719fc2d15ce723"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:1346dcee82f2120bd2af22be9f041e057bdc32f9ad1c3ef717d599ba6519faeb"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:cd1fefcd199400a504b4b9942c24ba6becafcecc952a9e39fa2729228be79e77"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.0-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:766218b028e28d55679d510ec104275e96b8b20f5b7509f74e9fea7d7a0ef7b0",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.0-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:abdf1ca15c55860e7962057fcb84d2eef800996fcbc3f9f80eeb7efa79dbafcc",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.4.0-0 <2.5.0-0",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.0 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:388b089025c51fa0274315d7993658d9725313549a6b275564fb2a9ef5903782"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:c79d2fa40dfecfb965acb4c2a4b6dd71be8dd7b57bd4370309509f3159e75fd4"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:88369bcc4453a18e8814bed84f1701b3e47e702c58f94738879ec9ad4a0d0f16"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:766218b028e28d55679d510ec104275e96b8b20f5b7509f74e9fea7d7a0ef7b0"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:abdf1ca15c55860e7962057fcb84d2eef800996fcbc3f9f80eeb7efa79dbafcc"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.0-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:9d496bcbe0de05c662113b7148330511b80c231a61ffe9dece0e75b929e72da5",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.0-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:313fab9370d1c3820dac08c15f0f822ed812909e54a7c6b45357d8f2465b370a",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.4.0-0 <2.5.0-1",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.0 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:48b7d4f3e96c7dd82e6864918fb86684ebdb9fe381d7089d39efc26c62f8b3d2"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:1f62bef10011eddd064248a74499b911362a503ae02797b49e18375ddc338fc6"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:fc900527fa19b35ec909c2a44e9e22ff0119934dcdf6e5da3665631d724a1bf4"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:9d496bcbe0de05c662113b7148330511b80c231a61ffe9dece0e75b929e72da5"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:313fab9370d1c3820dac08c15f0f822ed812909e54a7c6b45357d8f2465b370a"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.1-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:1539781524a1aa4b59011445507b36d0a1c2f0c4b73cd6a8aef9002b7eb1ec10",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.1-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:a81f9059897322dfc4e842c983f4195743dfd452dd6dd2518cebfb456729e1cd",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.4.0-0 <2.5.1-0",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.1 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:c2f46f729ccd5f2d9b1d15e38c0281c724d405c46aeb62d4a535a824f76fba7f"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:276bb0251fb61043ab14c69eb28e7b78d05695562ad75b12d5a46652bdf28043"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:130daf1eb0978b30111701d2bda6249a035a5a3c577eeceba3f8156fb5a19992"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:1539781524a1aa4b59011445507b36d0a1c2f0c4b73cd6a8aef9002b7eb1ec10"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:a81f9059897322dfc4e842c983f4195743dfd452dd6dd2518cebfb456729e1cd"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.1-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:695ff2a3896f7497ec07eb0139f2c30ace64ea93b668b5ffb8d285d34c1d4db3",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.1-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:464b04e622e0b3472e8a1e1ce8a2efd32cf27fc2056d3d589bfe6b5f9ac0bf4e",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.4.0-0 <2.5.1-1",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.1 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:c10474a9187b49aa90fe3f912150a5112b31a76e9da55998d96dc9e00429acc6"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:8b2529937cf80207ba0109e9b8005a92544a4eb6615aeece575baf9b68422610"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:0bcdd55f01638f650ed69ebdf5f8a7291e103805b8cbb34013ced88e46e0678c"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:695ff2a3896f7497ec07eb0139f2c30ace64ea93b668b5ffb8d285d34c1d4db3"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:464b04e622e0b3472e8a1e1ce8a2efd32cf27fc2056d3d589bfe6b5f9ac0bf4e"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.1-2",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:f34d1faeedd120dea0aa3e4e1de8c265e9c764a8fe957f8ab3970c4ecb93e4d8",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.1-2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:0e3e002edf6f701090eb1e411a5a8ec291ccf4db6ea595a5e9f2a00180ac0453",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "olm.skipRange": ">=2.4.0-0 <2.5.1-2",
                    "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"Proxy\", \"proxy-aware\", \"fips\"]",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.1 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:b8e0a6bb41eec975faf92dcf10b86aa3e366a5daa81962157d5e999d3e1a444e"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:5ec219e3e421a42ed04307f41d449f337a9806be1211a113d39387250ec0e06f"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:03df22a2c11b4f3083b843b85a05b2a33133ebe2bca96df6701f9c5ecd006649"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:f34d1faeedd120dea0aa3e4e1de8c265e9c764a8fe957f8ab3970c4ecb93e4d8"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:0e3e002edf6f701090eb1e411a5a8ec291ccf4db6ea595a5e9f2a00180ac0453"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.1-3",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:fc656a8b2794e84cc5b2d3f353e642d56863de3d634c25996b46070289102f6b",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.1-3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:d6693b1e420ef7a6e4f960114b1eb13351d3b0314b300a286999575a76f4f5b7",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.4.0-0 <2.5.1-3",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.1 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:8a4162b63895329f86febb2e443472aa9b53dd6f576bdacd19365d49bd5856f8"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:0ff685e3adf5db73c44cdc22fad39db0f7ea9748e318372b07cee939da6fbd48"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:13c8dab28ac5647fa0232c58ef45274c0bcca84fdc58bfef9c4c28a20c0c26f8"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:fc656a8b2794e84cc5b2d3f353e642d56863de3d634c25996b46070289102f6b"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:d6693b1e420ef7a6e4f960114b1eb13351d3b0314b300a286999575a76f4f5b7"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.1-4",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:e527813ab5a8dfc73150e90701f4876f22e9bde1a3e470c235c30da4752d9c5f",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.1-4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:60b5c9a16d18a88ea33f3dacaff11663bf90629ec09796b86135cca58c4b0601",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.4.0-0 <2.5.1-4",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.1 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:761da80e0f3f0e9fd8bdb8159aa4bc6e39d69e6200ad0dd9cb5e42b956f2efa8"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:2f4baac52a008a52f89f8b50d7ea3cd9671a66ec92a6b2c33902f910f246cc31"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:6420c472e9e23de0681e732e20c34bbed380e20412e00b9296e3624e304e2b54"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:e527813ab5a8dfc73150e90701f4876f22e9bde1a3e470c235c30da4752d9c5f"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:60b5c9a16d18a88ea33f3dacaff11663bf90629ec09796b86135cca58c4b0601"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.1-5",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:07dbb75cb0ef68a6c831ea5d5d10c7851395622a047fe80aab3a17fbf84bee44",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.1-5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:2775b9899b5540905723e6dbbc8309f4ee090da1255c24e7cc30eb573af2ea17",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.4.0-0 <2.5.1-5",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.1 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:9048e16e8032c4ce8f3c7452f8193e1268a13823d82f682943abfa2df06525ea"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:86952e8f03f806fefdf22cf252e4683f94e09ef2d92079bfd7d6a8f6342f3c7d"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:99fb7c796f69266e406e911116f6cfe9b69e311de058a1866a58f89ad852d2ad"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:07dbb75cb0ef68a6c831ea5d5d10c7851395622a047fe80aab3a17fbf84bee44"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:2775b9899b5540905723e6dbbc8309f4ee090da1255c24e7cc30eb573af2ea17"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.2-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:a58018f0a5fd68a595ab95644985a6623bf47a1e402ae16043885900fdc6dc8f",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.2-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:dbe562aae88a71ed9d22f09872a933a5a946dfee7270a31b338b7526f38f7fd1",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.4.0-0 <2.5.2-0",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.2 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:c95d782bb62982cc489d18dc898dfd0fd65f79c82698bc277160ec04648fcc6a"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:df65d2059ccb102050cd8f85aa69187ab5dbd6a1928681515516c052556efe7e"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:ba01a2ec488da6ddc84aa5eeedefe6d8a5f87c515a27344a8dba7a1cae362fca"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:a58018f0a5fd68a595ab95644985a6623bf47a1e402ae16043885900fdc6dc8f"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:dbe562aae88a71ed9d22f09872a933a5a946dfee7270a31b338b7526f38f7fd1"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.2-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:8eb427ad80a5136d7dd94bb3d7e645453eff0bc111a53a20014d45288c868dab",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.2-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:dbe562aae88a71ed9d22f09872a933a5a946dfee7270a31b338b7526f38f7fd1",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.4.0-0 <2.5.2-1",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.2 release, AMQ Streams supports only OCP 4.10 to 4.13!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:c95d782bb62982cc489d18dc898dfd0fd65f79c82698bc277160ec04648fcc6a"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:df65d2059ccb102050cd8f85aa69187ab5dbd6a1928681515516c052556efe7e"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:ba01a2ec488da6ddc84aa5eeedefe6d8a5f87c515a27344a8dba7a1cae362fca"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:8eb427ad80a5136d7dd94bb3d7e645453eff0bc111a53a20014d45288c868dab"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:dbe562aae88a71ed9d22f09872a933a5a946dfee7270a31b338b7526f38f7fd1"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.2-2",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:f9793228e287d465e0eee79639765fe2f68a5249407cd96e33725a4190003737",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.2-2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:8874c0f4a311e4409759aa8800a3988f029fbb1bed73741415b1e6c2d77f6a1a",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.4.0-0 <2.5.2-2",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.2 release, AMQ Streams supports only OCP 4.12 to 4.16!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:787848f85f3740493c3149bd72620fee25e3d1792d3bf629253d452adff7ecab"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:96644bf055a1151012777579b5fd209009074722307b52f596b19bac7dc4c9c7"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:f8ac0200ce4687779c55bc8c7df0eee7218a5bdf9f93217316978862a97eb6f1"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:f9793228e287d465e0eee79639765fe2f68a5249407cd96e33725a4190003737"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:8874c0f4a311e4409759aa8800a3988f029fbb1bed73741415b1e6c2d77f6a1a"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.5.2-3",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:effdd2b513697ff01d99efee081689969dbe623a9cb8cbb0c2b8b6ae5ea71430",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.5.2-3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.5.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.5\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.5.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.4.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:3a023c6af42604c0b599a05d711d761b618562d4c7d4ce5f4cb0d671a7227a7b",
                    "createdAt": "2023-07-10 21:47:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.4.0-0 <2.5.2-3",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.5.2 release, AMQ Streams supports only OCP 4.12 to 4.16!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:b9b1eec400d918d4c15a6ae5d4b1fabdc88782cae2500e2076ad0500a44a85df"
        },
        {
            "name": "strimzi-kafka-340",
            "image": "registry.redhat.io/amq-streams/kafka-34-rhel8@sha256:5674838f478fdec80906a2e818213531941966d224d1dbfede646a705d1bcabd"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:610980862541ea65dbf8120ae1b2f229c495458490471dcacbfacc2572c742f5"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:effdd2b513697ff01d99efee081689969dbe623a9cb8cbb0c2b8b6ae5ea71430"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:3a023c6af42604c0b599a05d711d761b618562d4c7d4ce5f4cb0d671a7227a7b"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.6.0-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:d244d250051ed295e53f72eed6e74e66a2c81a28a338f462b3eafa8c5ae8a256",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.6.0-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.6.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.6\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.6.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.6.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.6.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:f1be1aa2f18276f9169893eb55e3733cd52fa38f2101a9b3925f79774841689f",
                    "createdAt": "2023-10-14 18:18:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.5.0-0 <2.6.0-0",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, AMQ Streams supports only OCP 4.11 to 4.14! \n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:8e6eb1ecc6ee383bd6e9b6e4562f4fd543f448696db2ccba27103927ba5eeaf7"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:8cabc9b8788cf5450a097f18e6de57a7c5e3d5fda874faa60c7e4b32f7213f38"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel8@sha256:55b18000b2e774adccd0d5393b58fc3b8358ab174eaaa3ada9d520b5cde30669"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:d244d250051ed295e53f72eed6e74e66a2c81a28a338f462b3eafa8c5ae8a256"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:f1be1aa2f18276f9169893eb55e3733cd52fa38f2101a9b3925f79774841689f"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.6.0-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:d75b57b6d96cea0da72e3662d0008d34d3f12e5845bc80158858d7665d5691ce",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.6.0-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.6.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.6\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.6.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.6.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.6.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:5059b9ac793f91de2606ef724a2bb7d6518e75a053cc662665459eafa5f4d074",
                    "createdAt": "2023-10-14 18:18:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.5.0-0 <2.6.0-1",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, AMQ Streams supports only OCP 4.11 to 4.14! \n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:297394056547efd07ccecaa5a4056accf9f9e9613811154a49fdeaefa147aa9a"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:1c3e4596e3134fd173d4f9d7f2460a5faf92287b0171110a6a7fd69f1fd7df1f"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel8@sha256:99d804bbfd32d006c58dec2e4b78b501834d62f5958c68774b233dd412163456"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:d75b57b6d96cea0da72e3662d0008d34d3f12e5845bc80158858d7665d5691ce"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:5059b9ac793f91de2606ef724a2bb7d6518e75a053cc662665459eafa5f4d074"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.6.0-2",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:44a5c4cc3086e4eac42dc78a72b7492d13df0098017288278d9006e767a480a1",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.6.0-2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.6.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.6\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.6.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.6.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.6.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example AMQ Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:dacf7ddffe7cbe2dc35e7d3290637b3334117e09dde986e6eaeaceded7069fbf",
                    "createdAt": "2023-10-14 18:18:00",
                    "description": "Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.5.0-0 <2.6.0-2",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, AMQ Streams supports only OCP 4.11 to 4.14! \n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream\n* The long term, fault-tolerant storage of events\n* The ability for a consumer to replay streams of events\n* The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!** **Direct upgrade from AMQ Stream 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of AMQ Streams. You will also need to convert the CRD resources. For more information, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe AMQ Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for AMQ Streams on OpenShift](https://access.redhat.com/documentation/en-us/red_hat_amq_streams/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via AMQ Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe AMQ Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nAMQ Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://access.redhat.com/documentation/en-us/red_hat_amq_streams).\n",
                "displayName": "AMQ Streams",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://access.redhat.com/documentation/en-us/red_hat_amq_streams"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.21.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel8@sha256:be7466ffd7f624f769eedca2e4106c597d2bf1d95cc9679f235e6dcdec66cfa9"
        },
        {
            "name": "strimzi-kafka-350",
            "image": "registry.redhat.io/amq-streams/kafka-35-rhel8@sha256:fa8361e5089ab4449261f5a0ad57bd0bd059dc254b94bd9ab68340faae386947"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel8@sha256:8b10bfb697b48ba3ed246fb846384f4cc67f05f670e9521edf0f47f829869404"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:44a5c4cc3086e4eac42dc78a72b7492d13df0098017288278d9006e767a480a1"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel8-operator@sha256:dacf7ddffe7cbe2dc35e7d3290637b3334117e09dde986e6eaeaceded7069fbf"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/ubi8/openjdk-17@sha256:8796da64c626c5f63f31a4e3ac0ac3b179333a7c6d5472a195b9b3f61ccd1099"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:34395fcff2024bfc50f20f4d790ae3a6981b000a1b959c18a6fa9bc0beaf1563",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Red Hat Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:a1476941d46d613be6746b6853906cb6ceb69889a0559a58139605ad27908029",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Red Hat Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-0",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Red Hat Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Red Hat Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Red Hat Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Red Hat Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Red Hat Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Red Hat Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nRed Hat Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Red Hat Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:bd3ddbdc254e20c064860944b625f81fbb3636ce576092dcf972463eaab02b73"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:5ac85120261fce5598cfe7f6d90f1faa22da2e48bd949c03108dcbe2f8656e80"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:b431cc81b8efcbe2622397e60c8746f394944b7d3342df09afb09aecaa45bb90"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:7f2141752368d445f7589e7f2c078214f54493359afb894121548681b348341b"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:34395fcff2024bfc50f20f4d790ae3a6981b000a1b959c18a6fa9bc0beaf1563"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:a1476941d46d613be6746b6853906cb6ceb69889a0559a58139605ad27908029"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-1",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:8a5657686814b397e4577a14ce9ea8df36ac1d89273533deb3323efc09b299e2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-1"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Red Hat Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:25768564d6d2b15ac00c95e595878716001d49bf896599d31b4fa6e17b64e8c4",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Red Hat Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-1",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Red Hat Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Red Hat Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Red Hat Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Red Hat Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Red Hat Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Red Hat Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nRed Hat Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Red Hat Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:fbbe0dec6c55a883da1a9a4d735d87a57e8a1978304ebe7a4f41f893b3ac9a73"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:776c7cf838a02a2dc6b760ce3af7afc5c54f6db58f777fb9fdbb4c9674540b42"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:6d800bc0aa810993a93517c2464eb4575ee0d2579a1b0d84f3b8614550e32c94"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:92fdeb931040b6364b120c09d16c8278884a540cea7b05e966a9e3bb1be6ad42"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:8a5657686814b397e4577a14ce9ea8df36ac1d89273533deb3323efc09b299e2"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:25768564d6d2b15ac00c95e595878716001d49bf896599d31b4fa6e17b64e8c4"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-2",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:3b62c3ab8c68127ee5836f85ee7435de48f4d3d33e6e9f6a69ee0d8e267888a2",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-2"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Red Hat Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:46a753d5849ded5b8b8244f6f42e896f0a115aae077870c3f53c6802718701fc",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Red Hat Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-2",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Red Hat Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Red Hat Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Red Hat Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Red Hat Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Red Hat Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Red Hat Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nRed Hat Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Red Hat Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:19015a27ae27521a4874c7173fe09d6564d7b1df5ba773d3973b42db76660f86"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:71eed700bf0a400cf2da3b70d4243320b2c595a73a06472551406fb2c3958442"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:3e41f47d21c030b4f0f29b96a71e9952166c5abbf0539e9ae0247f28b56bb735"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:69465c88d5a8f28c5cd02e16cb15a09fef2253cf154a6183f1cab130123c7bc9"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:3b62c3ab8c68127ee5836f85ee7435de48f4d3d33e6e9f6a69ee0d8e267888a2"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:46a753d5849ded5b8b8244f6f42e896f0a115aae077870c3f53c6802718701fc"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-3",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:66938cf040ec59ea1ebb459ce61f22e802e73890e5d60b303d267a1ca668ddbc",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-3"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Red Hat Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:a12c5647a10a6fcbc6963547022ebde643b3ee8ec89f3b33a73851312f7fdb76",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Red Hat Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-3",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Red Hat Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Red Hat Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Red Hat Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Red Hat Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Red Hat Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Red Hat Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Red Hat Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Red Hat Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nRed Hat Streams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Red Hat Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:7e9de5a4b5c25f3e08bd72f7fc7343752002dce0f53ed2829808674582dc7641"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:d280e15fbd5d3a5ac72e742f52135c3e727188ea0ebd428f6a91a1de88ee8af5"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:ea5bb9a3f970f1db7c4335b851fe8c791798641e7b6fef0423797f138f4f30d7"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:df9a835dc8228044979fd3ccc3e27ca5bb2fa8720cdd8b4563b1686e2873acab"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:66938cf040ec59ea1ebb459ce61f22e802e73890e5d60b303d267a1ca668ddbc"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:a12c5647a10a6fcbc6963547022ebde643b3ee8ec89f3b33a73851312f7fdb76"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-4",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:22703d1f8a6e830b593c7cb9d23cd5e0857f5c017f35a13bdf3835c0edf839bb",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-4"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:95f5aa75cd1f7228e78fd4d88d786713fba4cf828dc22bc2dd1d0380909c1aef",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-4",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStreams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:d090ca1008883251b58834e97bab0f686b982300602dc087016ffe16e52cf459"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:5faecdb596b9621cfdfb3abc5d58d07c5fa2d01f148dcfa4405ce11d740aff03"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:42bf60ce31540dd61fab2c9886d791e41f063ea6f86628694b9e60e49bc8951b"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:e0861758951e3e81f53c370d0de773ec6a1fe3e4a605f440d6e74fac5b6882d5"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:22703d1f8a6e830b593c7cb9d23cd5e0857f5c017f35a13bdf3835c0edf839bb"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:95f5aa75cd1f7228e78fd4d88d786713fba4cf828dc22bc2dd1d0380909c1aef"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-5",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:04c18bdfa732d176375bbce148ae0a112f97886486868bd72e81aca6dfe461ec",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-5"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:d1c577cce87e2063b483db3a70bac25c9b5c7fa1d68fbdc7774d2a71c2f8e8a1",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-5",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStreams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:64725dc718ddecc17de4c305e624fa1c63153e387fb4a3e9a8535c9877d4e863"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:22c9154fb8d3fcb4ae5dc2f45a4daf4db992e878e186ce6081b78c5f76602d4b"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:917efd492885c2071fbf06372348f812ba600b6788052e2700bd730c7f4b794e"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:3653bef47f9ab5db7c29e3e0f38628b25ccfb48d97300dd3cc20ab9db0609e1b"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:04c18bdfa732d176375bbce148ae0a112f97886486868bd72e81aca6dfe461ec"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:d1c577cce87e2063b483db3a70bac25c9b5c7fa1d68fbdc7774d2a71c2f8e8a1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-6",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:65db5162e80bbf624ddb35903e71737b7a4990b645be367e2ef5a55e2d2a9cb4",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-6"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:c0eb1565d376b7f7eb2bee71d247b276ef0d64e49ba31d587dc35859201a17cc",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-6",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStreams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:d2feec1941968205bb67331b2737aaf10a0714825804f347099f49dfabc45a5b"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:0f2704ced5cf9e9dd9c9c6647ba06ff482a9c4879ad53ab884a948e1dd00b11b"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:151623c3ecc38eda85e247e85b2e0f47da5c3dfc9d76ca4212bafd947e9152ea"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:075695d884c4a42db04b6727df30615362c1f9ff716061ef818d0cd9f5c0c7ff"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:65db5162e80bbf624ddb35903e71737b7a4990b645be367e2ef5a55e2d2a9cb4"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:c0eb1565d376b7f7eb2bee71d247b276ef0d64e49ba31d587dc35859201a17cc"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.7.0-7",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:b9dbbce235b7a4f45f42184cf0b908e91e17094e971bc29a8710f35127a6b06f",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.7.0-7"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.7.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.7\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"certificate\":\"ca.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.7.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.7.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:671c1a2fcb0856cb208c0ead539fff9571fa2281a1e3d45b3df9ebd3df8c787e",
                    "createdAt": "2024-03-09 21:27:00",
                    "description": "Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.6.0-0 <2.7.0-7",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.6.0 release, Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Streams 1.7 or earlier is not supported!** You have to upgrade first to one of the previous versions of Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStreams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "strimzi-bridge",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:be9b82af13cbc120bb415abf4fcc97420e543172d6450b836c47344e4dcacd00"
        },
        {
            "name": "strimzi-kafka-360",
            "image": "registry.redhat.io/amq-streams/kafka-36-rhel9@sha256:8890c3217343d9aa3dd2ab9c7fa1742f960b5a26e09906581ce6075e61dc2888"
        },
        {
            "name": "strimzi-kafka-370",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:66362c800b78003d26df9471b7f21f5c9ad7fca8e8fd2511428dfc549cdf46c2"
        },
        {
            "name": "strimzi-maven-builder",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:a7620559f3e5a0a4d5ecee44538619f698158847d9d0a06c7168404ed6f7cd36"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:b9dbbce235b7a4f45f42184cf0b908e91e17094e971bc29a8710f35127a6b06f"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:671c1a2fcb0856cb208c0ead539fff9571fa2281a1e3d45b3df9ebd3df8c787e"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "amqstreams.v2.8.0-0",
    "package": "amq-streams",
    "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:f420ef31e38eccf6d1014dac5c986217fe27c53f2d7f17c9980e0d29fd06cd68",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "core.strimzi.io",
                "kind": "StrimziPodSet",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "Kafka",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaBridge",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnect",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaConnector",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaMirrorMaker2",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaNodePool",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaRebalance",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaTopic",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kafka.strimzi.io",
                "kind": "KafkaUser",
                "version": "v1beta2"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "amq-streams",
                "version": "2.8.0-0"
            }
        },
        {
            "type": "olm.csv.metadata",
            "value": {
                "annotations": {
                    "alm-examples": "[\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"Kafka\",\n    \"metadata\":{\n      \"name\":\"my-cluster\"\n    },\n    \"spec\":{\n      \"kafka\":{\n          \"version\":\"3.8.0\",\n          \"replicas\":3,\n          \"listeners\": [\n            {\n              \"name\": \"plain\",\n              \"port\": 9092,\n              \"type\": \"internal\",\n              \"tls\": false\n            },\n            {\n              \"name\": \"tls\",\n              \"port\": 9093,\n              \"type\": \"internal\",\n              \"tls\": true\n            }\n          ],\n          \"config\":{\n            \"offsets.topic.replication.factor\":3,\n            \"transaction.state.log.replication.factor\":3,\n            \"transaction.state.log.min.isr\":2,\n            \"default.replication.factor\":3,\n            \"min.insync.replicas\":2,\n            \"inter.broker.protocol.version\":\"3.8\"\n          },\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"zookeeper\":{\n          \"replicas\":3,\n          \"storage\":{\n            \"type\":\"ephemeral\"\n          }\n      },\n      \"entityOperator\":{\n          \"topicOperator\":{\n            },\n          \"userOperator\":{\n            }\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaConnect\",\n    \"metadata\":{\n      \"name\":\"my-connect-cluster\"\n    },\n    \"spec\":{\n      \"version\":\"3.8.0\",\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9093\",\n      \"tls\":{\n          \"trustedCertificates\":[\n            {\n                \"secretName\":\"my-cluster-cluster-ca-cert\",\n                \"pattern\":\"*.crt\"\n            }\n          ]\n      },\n      \"config\": {\n          \"group.id\": \"connect-cluster\",\n          \"offset.storage.topic\": \"connect-cluster-offsets\",\n          \"config.storage.topic\": \"connect-cluster-configs\",\n          \"status.storage.topic\": \"connect-cluster-status\",\n          \"config.storage.replication.factor\": -1,\n          \"offset.storage.replication.factor\": -1,\n          \"status.storage.replication.factor\": -1\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaMirrorMaker\",\n    \"metadata\":{\n      \"name\":\"my-mirror-maker\"\n    },\n    \"spec\":{\n      \"version\":\"3.8.0\",\n      \"replicas\":1,\n      \"consumer\":{\n          \"bootstrapServers\":\"my-source-cluster-kafka-bootstrap:9092\",\n          \"groupId\":\"my-source-group-id\"\n      },\n      \"producer\":{\n          \"bootstrapServers\":\"my-target-cluster-kafka-bootstrap:9092\"\n      },\n      \"include\":\".*\"\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaBridge\",\n    \"metadata\":{\n      \"name\":\"my-bridge\"\n    },\n    \"spec\":{\n      \"replicas\":1,\n      \"bootstrapServers\":\"my-cluster-kafka-bootstrap:9092\",\n      \"http\":{\n          \"port\":8080\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaTopic\",\n    \"metadata\":{\n      \"name\":\"my-topic\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"partitions\":10,\n      \"replicas\":3,\n      \"config\":{\n          \"retention.ms\":604800000,\n          \"segment.bytes\":1073741824\n      }\n    }\n  },\n  {\n    \"apiVersion\":\"kafka.strimzi.io/v1beta2\",\n    \"kind\":\"KafkaUser\",\n    \"metadata\":{\n      \"name\":\"my-user\",\n      \"labels\":{\n          \"strimzi.io/cluster\":\"my-cluster\"\n      }\n    },\n    \"spec\":{\n      \"authentication\":{\n          \"type\":\"tls\"\n      },\n      \"authorization\":{\n          \"type\":\"simple\",\n          \"acls\":[\n            {\n                \"resource\":{\n                  \"type\":\"topic\",\n                  \"name\":\"my-topic\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\", \"Describe\", \"Write\", \"Create\"],\n                \"host\":\"*\"\n            },\n            {\n                \"resource\":{\n                  \"type\":\"group\",\n                  \"name\":\"my-group\",\n                  \"patternType\":\"literal\"\n                },\n                \"operations\":[\"Read\"],\n                \"host\":\"*\"\n            }\n          ]\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaConnector\",\n    \"metadata\": {\n      \"name\": \"my-source-connector\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-connect-cluster\"\n      }\n    },\n    \"spec\": {\n      \"class\": \"org.apache.kafka.connect.file.FileStreamSourceConnector\",\n      \"tasksMax\": 1,\n      \"config\": {\n        \"file\": \"/opt/kafka/LICENSE\",\n        \"topic\": \"my-topic\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaMirrorMaker2\",\n    \"metadata\": {\n      \"name\": \"my-mm2-cluster\"\n    },\n    \"spec\": {\n      \"version\":\"3.8.0\",\n      \"replicas\": 1,\n      \"connectCluster\": \"cluster-b\",\n      \"clusters\": [\n        {\n          \"alias\": \"cluster-a\",\n          \"bootstrapServers\": \"cluster-a-kafka-bootstrap:9092\"\n        },\n        {\n          \"alias\": \"cluster-b\",\n          \"bootstrapServers\": \"cluster-b-kafka-bootstrap:9092\",\n          \"config\": {\n            \"config.storage.replication.factor\": -1,\n            \"offset.storage.replication.factor\": -1,\n            \"status.storage.replication.factor\": -1\n          }\n        }\n      ],\n      \"mirrors\": [\n        {\n          \"sourceCluster\": \"cluster-a\",\n          \"targetCluster\": \"cluster-b\",\n          \"sourceConnector\": {\n            \"config\": {\n              \"replication.factor\": -1,\n              \"offset-syncs.topic.replication.factor\": -1,\n              \"sync.topic.acls.enabled\": \"false\"\n            }\n          },\n          \"checkpointConnector\": {\n            \"config\": {\n              \"checkpoints.topic.replication.factor\": -1\n            }\n          },\n          \"topicsPattern\": \".*\",\n          \"groupsPattern\": \".*\"\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaRebalance\",\n    \"metadata\": {\n      \"name\": \"my-rebalance\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"goals\": [\n        \"CpuCapacityGoal\",\n        \"NetworkInboundCapacityGoal\",\n        \"DiskCapacityGoal\",\n        \"RackAwareGoal\",\n        \"MinTopicLeadersPerBrokerGoal\",\n        \"NetworkOutboundCapacityGoal\",\n        \"ReplicaCapacityGoal\"\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"core.strimzi.io/v1beta2\",\n    \"kind\": \"StrimziPodSet\",\n    \"metadata\": {\n      \"name\": \"strimzi-pod-set-example\"\n    },\n    \"spec\": {\n      \"pods\": [\n        {\n          \"apiVersion\": \"v1\",\n          \"kind\": \"Pod\",\n          \"metadata\": {\n            \"labels\": {\n              \"app\": \"strimzi-pod-set-example\"\n            },\n            \"name\": \"example-pod\"\n          },\n          \"spec\": {\n            \"containers\": [\n              {\n                \"command\": [\n                  \"sleep\",\n                  3600\n                ],\n                \"image\": \"busybox:latest\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"busybox\"\n              }\n            ]\n          }\n        }\n      ],\n      \"selector\": {\n        \"matchLabels\": {\n          \"app\": \"strimzi-pod-set-example\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"kafka.strimzi.io/v1beta2\",\n    \"kind\": \"KafkaNodePool\",\n    \"metadata\": {\n      \"name\": \"my-pool\",\n      \"labels\": {\n        \"strimzi.io/cluster\": \"my-cluster\"\n      }\n    },\n    \"spec\": {\n      \"replicas\": 3,\n      \"roles\": [\n        \"broker\"\n      ],\n      \"storage\": {\n        \"type\": \"jbod\",\n        \"volumes\": [\n          {\n            \"id\": 0,\n            \"type\": \"persistent-claim\",\n            \"size\": \"100Gi\",\n            \"deleteClaim\": false\n          }\n        ]\n      }\n    }\n  }\n]",
                    "alm-examples-metadata": "{\n  \"my-cluster\": {\n    \"description\": \"Example Kafka cluster with Ephemeral storage\"\n  },\n  \"my-connect-cluster\": {\n    \"description\": \"Example Kafka Connect cluster\"\n  },\n  \"my-mirror-maker\": {\n    \"description\": \"Example Kafka Mirror Maker 1 deployment\"\n  },\n  \"my-mm2-cluster\": {\n    \"description\": \"Example Kafka Mirror Maker 2 deployment\"\n  },\n  \"my-bridge\": {\n    \"description\": \"Example Streams Kafka HTTP Bridge deployment\"\n  },\n  \"my-topic\": {\n    \"description\": \"Example KafkaTopic custom resource\"\n  },\n  \"my-user\": {\n    \"description\": \"Example KafkaUser custom resource\"\n  },\n  \"my-source-connector\": {\n    \"description\": \"Example Kafka Connect source connector\"\n  },\n  \"my-rebalance\": {\n    \"description\": \"Example Cruise Control rebalance request\"\n  },\n  \"my-pool\": {\n    \"description\": \"Example KafkaNodePool custom resource\"\n  }\n}",
                    "capabilities": "Deep Insights",
                    "categories": "Streaming & Messaging",
                    "certified": "false",
                    "containerImage": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:07a9540a8b906c6d52e6a9684cfb838aadf9849cc24b1d80218ea3ad5545cb5a",
                    "createdAt": "2024-08-22 15:19:00",
                    "description": "Streams for Apache Kafka is a massively scalable, distributed, and high performance data streaming platform based on Apache Kafka®.",
                    "features.operators.openshift.io/cnf": "false",
                    "features.operators.openshift.io/cni": "false",
                    "features.operators.openshift.io/csi": "false",
                    "features.operators.openshift.io/disconnected": "true",
                    "features.operators.openshift.io/fips-compliant": "true",
                    "features.operators.openshift.io/proxy-aware": "true",
                    "features.operators.openshift.io/tls-profiles": "false",
                    "features.operators.openshift.io/token-auth-aws": "false",
                    "features.operators.openshift.io/token-auth-azure": "false",
                    "features.operators.openshift.io/token-auth-gcp": "false",
                    "olm.skipRange": ">=2.7.0-0 <2.8.0-0",
                    "operators.openshift.io/valid-subscription": "[\"Red Hat AMQ\", \"Red Hat Application Foundations\"]",
                    "operators.operatorframework.io/internal-objects": "[\"strimzipodsets.core.strimzi.io\"]",
                    "repository": "https://github.com/strimzi/strimzi-kafka-operator",
                    "support": "Red Hat"
                },
                "apiServiceDefinitions": {},
                "crdDescriptions": {
                    "owned": [
                        {
                            "name": "kafkas.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "Kafka",
                            "displayName": "Kafka",
                            "description": "Represents a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "kafka.version",
                                    "displayName": "Version",
                                    "description": "Kafka version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "kafka.replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "kafka.storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by Kafka brokers",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "kafka.resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                },
                                {
                                    "path": "zookeeper.replicas",
                                    "displayName": "Zookeeper Nodes",
                                    "description": "The desired number of Zookeeper nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "zookeeper.storage.type",
                                    "displayName": "Zookeeper storage",
                                    "description": "The type of storage used by Zookeeper nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "zookeeper.resources",
                                    "displayName": "Zookeeper Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkanodepools.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaNodePool",
                            "displayName": "Kafka Node Pool",
                            "description": "Represents a pool of Kafka brokers",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Route",
                                    "version": "route.openshift.io/v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ConfigMap",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "clusterId",
                                    "displayName": "Cluster ID",
                                    "description": "Kafka Cluster ID",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "nodeIds",
                                    "displayName": "Node IDs",
                                    "description": "List of node IDs in this Node Pool",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka cluster conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Kafka Brokers",
                                    "description": "The desired number of Kafka brokers in this pool.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "storage.type",
                                    "displayName": "Kafka storage",
                                    "description": "The type of storage used by this pool of Kafka nodes",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:ephemeral",
                                        "urn:alm:descriptor:com.tectonic.ui:select:persistent-claim",
                                        "urn:alm:descriptor:com.tectonic.ui:select:jbod"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Kafka Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnects.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnect",
                            "displayName": "Kafka Connect",
                            "description": "Represents a Kafka Connect cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Connect conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Connect nodes",
                                    "description": "The desired number of Kafka Connect nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Connect version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Bootstrap server",
                                    "description": "The address of the bootstrap server",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormakers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker",
                            "displayName": "Kafka Mirror Maker",
                            "description": "Represents a Kafka MirrorMaker cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker nodes",
                                    "description": "The desired number of Kafka MirrorMaker nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka Mirror Maker version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "consumer.bootstrapServers",
                                    "displayName": "Source cluster",
                                    "description": "The bootstrap address of the Source cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "producer.bootstrapServers",
                                    "displayName": "Target cluster",
                                    "description": "The bootstrap address of the Target cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "include",
                                    "displayName": "Mirrored topics",
                                    "description": "Expression specifying the topics which should be mirrored",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkabridges.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaBridge",
                            "displayName": "Kafka Bridge",
                            "description": "Represents a Kafka Bridge cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Service",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Bridge conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "Bridge nodes",
                                    "description": "The desired number of Kafka Bridge nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "bootstrapServers",
                                    "displayName": "Kafka cluster",
                                    "description": "The bootstrap address of the Kafka cluster",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "http.port",
                                    "displayName": "HTTP port",
                                    "description": "The port where the HTTP Bridge is listening",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:number"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkatopics.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaTopic",
                            "displayName": "Kafka Topic",
                            "description": "Represents a topic inside a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka topic conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "partitions",
                                    "displayName": "Partitions",
                                    "description": "The number of partitions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "replicas",
                                    "displayName": "Replication factor",
                                    "description": "The number of replicas",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkausers.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaUser",
                            "displayName": "Kafka User",
                            "description": "Represents a user inside a Kafka cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Secret",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka user conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "authentication.type",
                                    "displayName": "Authentication type",
                                    "description": "Authentication type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:tls",
                                        "urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512"
                                    ]
                                },
                                {
                                    "path": "authorization.type",
                                    "displayName": "Authorization type",
                                    "description": "Authorization type",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:select:simple"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkaconnectors.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaConnector",
                            "displayName": "Kafka Connector",
                            "description": "Represents a Connector inside a Kafka Connect cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Connector conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "class",
                                    "displayName": "Class",
                                    "description": "Class of the Kafka Connect connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "tasksMax",
                                    "displayName": "Max number of tasks",
                                    "description": "Maximum number of tasks used by the connector",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkamirrormaker2s.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaMirrorMaker2",
                            "displayName": "Kafka MirrorMaker 2",
                            "description": "Represents a Kafka MirrorMaker 2 cluster",
                            "resources": [
                                {
                                    "name": "",
                                    "kind": "Deployment",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "ReplicaSet",
                                    "version": "v1"
                                },
                                {
                                    "name": "",
                                    "kind": "Pod",
                                    "version": "v1"
                                }
                            ],
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka MirrorMaker conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "replicas",
                                    "displayName": "MirrorMaker2 nodes",
                                    "description": "The desired number of Kafka MirrorMaker 2 nodes.",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "version",
                                    "displayName": "Version",
                                    "description": "Kafka MirrorMaker 2 version",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "connectCluster",
                                    "displayName": "Connect cluster",
                                    "description": "The Kafka cluster where the underlying Kafka Connect connects",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:text"
                                    ]
                                },
                                {
                                    "path": "resources",
                                    "displayName": "Resource Requirements",
                                    "description": "Limits describes the minimum/maximum amount of compute resources required/allowed",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "kafkarebalances.kafka.strimzi.io",
                            "version": "v1beta2",
                            "kind": "KafkaRebalance",
                            "displayName": "Kafka Rebalance",
                            "description": "Triggeres rebalance of replicas in a Kafka cluster",
                            "statusDescriptors": [
                                {
                                    "path": "conditions",
                                    "displayName": "Conditions",
                                    "description": "Kafka Rebalance conditions",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:io.kubernetes.conditions"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "skipHardGoalCheck",
                                    "displayName": "Skip hard goals",
                                    "description": "Skip hard Cruise Cotnrol goals",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "strimzipodsets.core.strimzi.io",
                            "version": "v1beta2",
                            "kind": "StrimziPodSet",
                            "displayName": "Strimzi Pod Set",
                            "description": "Internal custom resource used to manage Strimzi pods",
                            "statusDescriptors": [
                                {
                                    "path": "pods",
                                    "displayName": "Pods",
                                    "description": "Number of desired pods",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "readyPods",
                                    "displayName": "Ready Pods",
                                    "description": "Number of pods which are ready",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                },
                                {
                                    "path": "currentPods",
                                    "displayName": "Up-to-date Pods",
                                    "description": "Number of pods which are up-to-date",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:podCount"
                                    ]
                                }
                            ],
                            "specDescriptors": [
                                {
                                    "path": "selector",
                                    "displayName": "Pod Selector",
                                    "description": "Selector used to match pods managed by this resource",
                                    "x-descriptors": [
                                        "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "description": "**Streams for Apache Kafka** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka® project. Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency.\n**From the 2.8.0 release, Streams supports only OCP 4.12 to 4.14!\n**The core capabilities include:** * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream * The long term, fault-tolerant storage of events * The ability for a consumer to replay streams of events * The ability to partition topics for horizontal scalability\n### Upgrades\n**!!! IMPORTANT !!!**\n**Direct upgrade from Streams 1.7 or earlier is not supported anymore!** You have to upgrade first to one of the previous versions of Streams. You will also need to convert the CRD resources. For more information, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.\n* **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.\n* **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics within the cluster.\n* **User Management** - Creates and manages Kafka Users within the cluster.\n* **Connector Management** - Creates and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.\n* **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards\n### Upgrading your Clusters\nThe Streams Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. For more information on upgrading, see the [documentation for Streams for Apache Kafka on OpenShift](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka/).\n### Storage\nAn efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Streams requires block storage. The use of file storage (for example, NFS) is not recommended.\nThe Streams Operator supports three types of data storage:\n* Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStreams also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n### Documentation\nDocumentation for the current release can be found on the Red Hat [Customer Portal](https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka).\n",
                "displayName": "Streams for Apache Kafka",
                "installModes": [
                    {
                        "type": "OwnNamespace",
                        "supported": true
                    },
                    {
                        "type": "SingleNamespace",
                        "supported": true
                    },
                    {
                        "type": "MultiNamespace",
                        "supported": true
                    },
                    {
                        "type": "AllNamespaces",
                        "supported": true
                    }
                ],
                "keywords": [
                    "kafka",
                    "messaging",
                    "kafka-connect",
                    "kafka-streams",
                    "data-streaming",
                    "data-streams",
                    "streaming",
                    "streams"
                ],
                "labels": {
                    "operatorframework.io/arch.amd64": "supported",
                    "operatorframework.io/arch.arm64": "supported",
                    "operatorframework.io/arch.ppc64le": "supported",
                    "operatorframework.io/arch.s390x": "supported",
                    "operatorframework.io/os.linux": "supported"
                },
                "links": [
                    {
                        "name": "Product Page",
                        "url": "https://access.redhat.com/products/red-hat-amq"
                    },
                    {
                        "name": "Documentation",
                        "url": "https://docs.redhat.com/en/documentation/red_hat_streams_for_apache_kafka"
                    }
                ],
                "maintainers": [
                    {
                        "name": "Red Hat",
                        "email": "customerservice@redhat.com"
                    }
                ],
                "maturity": "stable",
                "minKubeVersion": "1.23.0",
                "provider": {
                    "name": "Red Hat"
                }
            }
        }
    ],
    "relatedImages": [
        {
            "name": "bridge-rhel9-e7c45bda9995eac1c7d8d788d879d47b089faea851bdd9ddd41e3db0a157ebac-annotation",
            "image": "registry.redhat.io/amq-streams/bridge-rhel9@sha256:e7c45bda9995eac1c7d8d788d879d47b089faea851bdd9ddd41e3db0a157ebac"
        },
        {
            "name": "kafka-37-rhel9-6921b50de5f39975a3de2335a35c485c0f2f9a40c7ade2504f1f400472d0fc8c-annotation",
            "image": "registry.redhat.io/amq-streams/kafka-37-rhel9@sha256:6921b50de5f39975a3de2335a35c485c0f2f9a40c7ade2504f1f400472d0fc8c"
        },
        {
            "name": "kafka-38-rhel9-c9a60d03827466ee37dd4aff6803eda2c1d65cb2508cb57d13e1d47f982e5a20-annotation",
            "image": "registry.redhat.io/amq-streams/kafka-38-rhel9@sha256:c9a60d03827466ee37dd4aff6803eda2c1d65cb2508cb57d13e1d47f982e5a20"
        },
        {
            "name": "maven-builder-rhel9-70ccab4e906479e9053ab23f7442315bc80c0dbd0018aa78153b2d0a126dd43f-annotation",
            "image": "registry.redhat.io/amq-streams/maven-builder-rhel9@sha256:70ccab4e906479e9053ab23f7442315bc80c0dbd0018aa78153b2d0a126dd43f"
        },
        {
            "name": "",
            "image": "registry.redhat.io/amq-streams/strimzi-operator-bundle@sha256:f420ef31e38eccf6d1014dac5c986217fe27c53f2d7f17c9980e0d29fd06cd68"
        },
        {
            "name": "strimzi-rhel9-operator-07a9540a8b906c6d52e6a9684cfb838aadf9849cc24b1d80218ea3ad5545cb5a-annotation",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:07a9540a8b906c6d52e6a9684cfb838aadf9849cc24b1d80218ea3ad5545cb5a"
        },
        {
            "name": "strimzi-cluster-operator",
            "image": "registry.redhat.io/amq-streams/strimzi-rhel9-operator@sha256:07a9540a8b906c6d52e6a9684cfb838aadf9849cc24b1d80218ea3ad5545cb5a"
        }
    ]
}

version: '3'


includes:
  tools:
    taskfile: .taskfile.tools.yaml
    internal: true

  style:
    taskfile: .taskfile.style.yaml
    internal: true

  build:
    taskfile: .taskfile.build.yaml
    internal: true

  kind:
    taskfile: .taskfile.kind.yaml
    internal: true

  deploy:
    taskfile: .taskfile.deploy.yaml
    internal: true

vars:
  ENVTEST_VERSION:
    sh: go list -m -f {{ "{{.Version}}" }} k8s.io/client-go | sed 's/^v0\.\([[:digit:]]\{1,\}\)\.[[:digit:]]\{1,\}$/1.\1.x/'

  PKGS:
    sh: go list ./... | grep -v 'test/e2e$' | cut -d/ -f4 | uniq | sed '/^$/d' | sed 's|.*|./&/...|' | tr '\n' ' '

tasks:
  default:
    desc: "Run all tests"
    cmds:
      - task: sanity
      - task: unit
      - task: e2e

  unit:
    desc: "Run unit tests"
    summary: |
      Run unit tests.
      
      The FOCUS variable can be used to filter tests by name.
      The PKGS variable can be used to filter tests by package.
    vars:
      GOCOVERDIR: "./coverage/unit"
    cmds:
      - rm -rf {{.GOCOVERDIR}} && mkdir -p {{.GOCOVERDIR}} && chmod 1777 {{.GOCOVERDIR}}
      - defer:
          task: rm-file
          vars:
            FILE: .ginkgo.coverprofile.out
      - eval $({{.TOOLSBIN}}/setup-envtest use -p env {{.ENVTEST_VERSION}}) && {{.TOOLSBIN}}/ginkgo --coverprofile=.ginkgo.coverprofile.out --tags {{.GO_BUILD_TAGS}} --progress --trace {{with .FOCUS}}--focus "{{.}}"{{end}} {{.PKGS}} -- -test.gocoverdir="{{.ROOT_DIR}}/{{.GOCOVERDIR}}"
      - go tool covdata percent -i={{.GOCOVERDIR}}
    deps: [tools:setup-envtest, tools:ginkgo]

  e2e:
    desc: "Run e2e tests"
    summary: |
      Run e2e tests.
      
      The FOCUS variable can be used to filter tests by name.
    vars:
      GOCOVERDIR: "./coverage/e2e"
    cmds:
      - rm -rf {{.GOCOVERDIR}} && mkdir -p {{.GOCOVERDIR}} && chmod 1777 {{.GOCOVERDIR}}
      - |
        cat << EOF > ./kind-e2e.yaml
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
          - role: control-plane
            extraMounts:
              - hostPath: {{.GOCOVERDIR}}
                containerPath: /tmp/coverdata
        EOF
      - defer:
          task: rm-file
          vars:
            FILE: "./kind-e2e.yaml"
      - task: deploy:kind
        vars:
          KUSTOMIZE_DIR: "config/e2e"
          CONTROLLER_MANIFEST: "{{.PROJECT}}-e2e.yaml"
          KIND_CLUSTER_NAME: "{{.KIND_CLUSTER_NAME}}-e2e"
          KIND_EXTRA_FLAGS: "--config ./kind-e2e.yaml"
          GO_COVER: "true"
      - defer:
          task: kind:delete
          vars:
            KIND_CLUSTER_NAME: "{{.KIND_CLUSTER_NAME}}-e2e"
      - "{{.TOOLSBIN}}/ginkgo --tags {{.GO_BUILD_TAGS}} --progress --trace {{with .FOCUS}}--focus '{{.}}'{{end}} ./test/e2e"

      # Delete the controller manager pod to write the coverage data to disk.
      - kubectl delete --wait pod -n {{.PROJECT}}-system -l control-plane=controller-manager
      - go tool covdata percent -i={{.GOCOVERDIR}}
    deps: [tools:ginkgo]

  sanity:
    desc: "Run sanity checks"
    summary: |
      Run sanity checks.
      
      These checks include running formatters and code generation to ensure the
      repository is in a clean, consistent state.
      
      They also include running the linters and static analysis tools.
    cmds:
      - git diff --exit-code
    deps: [ style, build:generate ]

  rm-file:
    cmds:
      - rm -f {{.FILE}}
    silent: true
    internal: true

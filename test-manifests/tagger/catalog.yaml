---
defaultChannel: alpha
icon:
  base64data: 
  mediatype: image/png
name: tagger
schema: olm.package
---
entries:
- name: tagger.v2.1.17
name: alpha
package: tagger
schema: olm.channel
---
image: quay.io/operatorhubio/tagger@sha256:79f615095d51e8bc1ab3023d3e752de15500793c9d128b3203fa6355263348a5
name: tagger.v2.1.17
package: tagger
properties:
- type: olm.gvk
  value:
    group: tagger.dev
    kind: Tag
    version: v1beta1
- type: olm.package
  value:
    packageName: tagger
    version: 2.1.17
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "tagger.dev/v1beta1",
            "kind": "Tag",
            "metadata": {
              "name": "nginx"
            },
            "spec": {
              "from": "docker.io/library/nginx:latest",
              "generation": 0,
              "mirror": false
            }
          }
        ]
      capabilities: Full Lifecycle
      categories: Developer Tools
      containerImage: quay.io/tagger/operator:v2.1.17
      createdAt: "2021-08-02T00:00:00Z"
      operators.operatorframework.io/builder: operator-sdk-v1.9.0+git
      operators.operatorframework.io/project_layout: unknown
      repository: https://github.com/ricardomaraschini/tagger
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Tag is a Container Image representation as a Custom Resource.
        displayName: Tag
        kind: Tag
        name: tags.tagger.dev
        version: v1beta1
    description: |-
      A Container Image Orchestrator. Adds mirroring and Container Image manipulation capabilities
      to a Kubernetes cluster.

      Keeping track of all Container Images in use in a Kubernetes cluster is a complicated task.
      Container Images may come from numerous different Image Registries. In some cases, controlling
      how a stable version of a given Container Image looks escapes the user's authority. To add to
      this, Container Runtimes rely on remote registries (from the cluster's point of view) when
      obtaining Container Images, potentially making the process of pulling their blobs (manifests,
      config, and layers) slower.

      The notion of indexing Container Image versions by Tags is helpful. Still, it does not provide
      users with the right confidence to always use the intended Container Image – today's "latest"
      tag might not be tomorrow's "latest" tag. In addition to that, these Image Registries allow
      access to Container Images by their Manifest content's hash (i.e., usually sha256), which gives
      users the confidence at a cost in semantics.

      When releasing a new version of an application to Push and to Deploy are split into two
      distinct steps. Both the pusher and the puller need access to the same Image Registry, adding
      complexity.  Credentials are one example of the concerns. Other factors may pop up when
      running, for instance, in an air-gapped environment, where the cluster may not reach external
      Image Registries.

      Tagger aims to overcome these caveats by providing an image management abstraction layer. For
      instance, by providing a direct mapping between a Container Image tag (e.g., "latest") and its
      correspondent Manifest content's hash, users can then refer to the Container Image by its tag
      – and be sure to use that specific version. More than that, when allied with an Internal Image
      Registry, Tagger can also automatically mirror Container Images into the cluster.

      While using Tagger, Deployments can refer to Container Images by an arbitrarily defined name,
      such as "my-app", and Tagger will make sure that they use the right Container Image through its
      internal "tag to Manifest content's hash" mapping.

      For each new "release" of a given Container Image, Tagger creates a new Generation for it,
      making it easy to roll back to previously pushed "releases" of the same Container Image in case
      of problems.

      When integrated with an Internal Registry, Tagger allows users to push or pull Images directly
      without requiring an external Image Registry. It works as a layer between the user and the
      Internal Registry. Every time a new "release" of Container Images is pushed, all Deployments
      are updated automatically. Users don't need to know about the Internal Registry existence, if
      they are logged-in to the Kubernetes cluster, they can obtain old or provide new "Generations"
      for a Container Image.

      In summary, Tagger mirrors remote Container Images into a Kubernetes cluster indexing them in
      different Generations (allowing easy navigation through these multiple Generations), provides
      an interface allowing users to pull and push images directly to the Kubernetes cluster and
      provides full integration with Kubernetes Deployments (automatic triggers new rollouts on
      Container Image changes).

      By default Tagger won't be able to mirror until you provide it with a mirror registry config.
      After install you can configure the mirror by editing the Secret mirror-registry-config in the
      operator namespace. Follow below an example of a valid mirror-registry-config secret (you gonna
      have to provide your own address, username, password, etc).

      ```yaml
      apiVersion: v1
      kind: Secret
      metadata:
        name: mirror-registry-config
      data:
        address: cmVnaXN0cnkuaW8=
        username: YWRtaW4=
        password: d2hhdCB3ZXJlIHlvdSB0aGlua2luZz8K
        token: YW4gb3B0aW9uYWwgdG9rZW4gZm9yIHRva2VuIGJhc2VkIGF1dGg=
        insecure: dHJ1ZQ==
      ```

      To make pushing an pulling images easier you should go ahead and grab the `kubectl` plugin
      available [here](https://github.com/ricardomaraschini/tagger/releases). You can download a
      full version of the README with usage examples and configuration options
      [here](https://github.com/ricardomaraschini/tagger/releases/download/v2.1.17/README.pdf).
    displayName: Tagger
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - tagger
    - mirroring
    - image
    links:
    - name: Documentation
      url: https://github.com/ricardomaraschini/tagger/releases/download/v2.1.17/README.pdf
    - name: Plugin (kubectl)
      url: https://github.com/ricardomaraschini/tagger/releases/tag/v2.1.17
    maintainers:
    - email: rmarasch@redhat.com
      name: Ricardo Maraschini
    maturity: alpha
    provider:
      name: Ricardo Maraschini
      url: https://github.com/ricardomaraschini/tagger
relatedImages:
- image: quay.io/operatorhubio/tagger@sha256:79f615095d51e8bc1ab3023d3e752de15500793c9d128b3203fa6355263348a5
  name: ""
- image: quay.io/tagger/operator:v2.1.17
  name: ""
schema: olm.bundle

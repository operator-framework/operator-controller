---
defaultChannel: stable
icon:
  base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCA1MTIgNTk1IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1MTIgNTk1OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6IzE5MkM0Nzt9Cgkuc3Qxe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQoJLnN0MntmaWxsOnVybCgjU1ZHSURfMl8pO30KCS5zdDN7ZmlsbDp1cmwoI1NWR0lEXzNfKTt9Cgkuc3Q0e2ZpbGw6dXJsKCNTVkdJRF80Xyk7fQoJLnN0NXtmaWxsOnVybCgjU1ZHSURfNV8pO30KCS5zdDZ7ZmlsbDp1cmwoI1NWR0lEXzZfKTt9Cjwvc3R5bGU+CjxnPgoJPHBvbHlnb24gY2xhc3M9InN0MCIgcG9pbnRzPSIyNTYsNSAxLDE1Mi4yIDEsNDQ2LjcgMjU2LDU5My45IDUxMSw0NDYuNyA1MTEsMTUyLjIgMjU2LDUgCSIvPgoJPGxpbmVhckdyYWRpZW50IGlkPSJTVkdJRF8xXyIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIHgxPSIxMDkuNDk5NiIgeTE9Ijg0Ljk2MjIiIHgyPSI0NDAuOTUxNyIgeTI9Ijc5My44MTAyIj4KCQk8c3RvcCAgb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojRkZGRkZGIi8+CgkJPHN0b3AgIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzU0QkFEOCIvPgoJPC9saW5lYXJHcmFkaWVudD4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNTYsNTYxbDIyNi41LTEzMC44di0yNi4zYy0zNy42LTcuMy04NC45LTE0LjMtMTQzLjUtMTkuM2MtMTk5LjItMTcuMi0xNC44LTU2LjYsNjguOS0xMjcuMQoJCVMxMzAsMTY1LjcsMTMwLDE2NS43czE0Ny42LDMxLDEzMi44LDUwYy0xMC41LDEzLjUtMTM0LjMsNDMuNS0yMzMuMyw4OC4xdjEyNi41TDI1Niw1NjF6Ii8+CjwvZz4KPC9zdmc+Cg==
  mediatype: image/svg+xml
name: strimzi-kafka-operator
schema: olm.package
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
- name: strimzi-cluster-operator.v0.38.0
  replaces: strimzi-cluster-operator.v0.37.0
- name: strimzi-cluster-operator.v0.39.0
  replaces: strimzi-cluster-operator.v0.38.0
- name: strimzi-cluster-operator.v0.40.0
  replaces: strimzi-cluster-operator.v0.39.0
- name: strimzi-cluster-operator.v0.41.0
  replaces: strimzi-cluster-operator.v0.40.0
- name: strimzi-cluster-operator.v0.42.0
  replaces: strimzi-cluster-operator.v0.41.0
- name: strimzi-cluster-operator.v0.43.0
  replaces: strimzi-cluster-operator.v0.42.0
name: stable
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
name: strimzi-0.19.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
name: strimzi-0.20.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
name: strimzi-0.21.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
name: strimzi-0.22.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
name: strimzi-0.23.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
name: strimzi-0.24.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
name: strimzi-0.25.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
name: strimzi-0.26.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
name: strimzi-0.27.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
name: strimzi-0.28.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
name: strimzi-0.29.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
name: strimzi-0.30.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
name: strimzi-0.31.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
name: strimzi-0.32.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
name: strimzi-0.33.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
name: strimzi-0.34.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
name: strimzi-0.35.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
name: strimzi-0.36.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
name: strimzi-0.37.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
- name: strimzi-cluster-operator.v0.38.0
  replaces: strimzi-cluster-operator.v0.37.0
name: strimzi-0.38.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
- name: strimzi-cluster-operator.v0.38.0
  replaces: strimzi-cluster-operator.v0.37.0
- name: strimzi-cluster-operator.v0.39.0
  replaces: strimzi-cluster-operator.v0.38.0
name: strimzi-0.39.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
- name: strimzi-cluster-operator.v0.38.0
  replaces: strimzi-cluster-operator.v0.37.0
- name: strimzi-cluster-operator.v0.39.0
  replaces: strimzi-cluster-operator.v0.38.0
- name: strimzi-cluster-operator.v0.40.0
  replaces: strimzi-cluster-operator.v0.39.0
name: strimzi-0.40.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
- name: strimzi-cluster-operator.v0.38.0
  replaces: strimzi-cluster-operator.v0.37.0
- name: strimzi-cluster-operator.v0.39.0
  replaces: strimzi-cluster-operator.v0.38.0
- name: strimzi-cluster-operator.v0.40.0
  replaces: strimzi-cluster-operator.v0.39.0
- name: strimzi-cluster-operator.v0.41.0
  replaces: strimzi-cluster-operator.v0.40.0
name: strimzi-0.41.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
- name: strimzi-cluster-operator.v0.38.0
  replaces: strimzi-cluster-operator.v0.37.0
- name: strimzi-cluster-operator.v0.39.0
  replaces: strimzi-cluster-operator.v0.38.0
- name: strimzi-cluster-operator.v0.40.0
  replaces: strimzi-cluster-operator.v0.39.0
- name: strimzi-cluster-operator.v0.41.0
  replaces: strimzi-cluster-operator.v0.40.0
- name: strimzi-cluster-operator.v0.42.0
  replaces: strimzi-cluster-operator.v0.41.0
name: strimzi-0.42.x
package: strimzi-kafka-operator
schema: olm.channel
---
entries:
- name: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.11.1
  replaces: strimzi-cluster-operator.v0.11.0
- name: strimzi-cluster-operator.v0.12.1
  replaces: strimzi-cluster-operator.v0.11.1
- name: strimzi-cluster-operator.v0.12.2
  replaces: strimzi-cluster-operator.v0.12.1
- name: strimzi-cluster-operator.v0.13.0
  replaces: strimzi-cluster-operator.v0.12.2
- name: strimzi-cluster-operator.v0.14.0
  replaces: strimzi-cluster-operator.v0.13.0
- name: strimzi-cluster-operator.v0.15.0
  replaces: strimzi-cluster-operator.v0.14.0
- name: strimzi-cluster-operator.v0.16.2
  replaces: strimzi-cluster-operator.v0.15.0
- name: strimzi-cluster-operator.v0.17.0
  replaces: strimzi-cluster-operator.v0.16.2
- name: strimzi-cluster-operator.v0.18.0
  replaces: strimzi-cluster-operator.v0.17.0
- name: strimzi-cluster-operator.v0.19.0
  replaces: strimzi-cluster-operator.v0.18.0
- name: strimzi-cluster-operator.v0.20.0
  replaces: strimzi-cluster-operator.v0.19.0
- name: strimzi-cluster-operator.v0.20.1
  replaces: strimzi-cluster-operator.v0.20.0
- name: strimzi-cluster-operator.v0.21.1
  replaces: strimzi-cluster-operator.v0.20.1
- name: strimzi-cluster-operator.v0.22.1
  replaces: strimzi-cluster-operator.v0.21.1
- name: strimzi-cluster-operator.v0.23.0
  replaces: strimzi-cluster-operator.v0.22.1
- name: strimzi-cluster-operator.v0.24.0
  replaces: strimzi-cluster-operator.v0.23.0
- name: strimzi-cluster-operator.v0.25.0
  replaces: strimzi-cluster-operator.v0.24.0
- name: strimzi-cluster-operator.v0.26.0
  replaces: strimzi-cluster-operator.v0.25.0
- name: strimzi-cluster-operator.v0.26.1
  replaces: strimzi-cluster-operator.v0.26.0
- name: strimzi-cluster-operator.v0.27.0
  replaces: strimzi-cluster-operator.v0.26.1
- name: strimzi-cluster-operator.v0.27.1
  replaces: strimzi-cluster-operator.v0.27.0
- name: strimzi-cluster-operator.v0.28.0
  replaces: strimzi-cluster-operator.v0.27.1
- name: strimzi-cluster-operator.v0.29.0
  replaces: strimzi-cluster-operator.v0.28.0
- name: strimzi-cluster-operator.v0.30.0
  replaces: strimzi-cluster-operator.v0.29.0
- name: strimzi-cluster-operator.v0.31.0
  replaces: strimzi-cluster-operator.v0.30.0
- name: strimzi-cluster-operator.v0.31.1
  replaces: strimzi-cluster-operator.v0.31.0
- name: strimzi-cluster-operator.v0.32.0
  replaces: strimzi-cluster-operator.v0.31.1
- name: strimzi-cluster-operator.v0.33.0
  replaces: strimzi-cluster-operator.v0.32.0
- name: strimzi-cluster-operator.v0.33.1
  replaces: strimzi-cluster-operator.v0.33.0
- name: strimzi-cluster-operator.v0.33.2
  replaces: strimzi-cluster-operator.v0.33.1
- name: strimzi-cluster-operator.v0.34.0
  replaces: strimzi-cluster-operator.v0.33.2
- name: strimzi-cluster-operator.v0.35.0
  replaces: strimzi-cluster-operator.v0.34.0
- name: strimzi-cluster-operator.v0.35.1
  replaces: strimzi-cluster-operator.v0.35.0
- name: strimzi-cluster-operator.v0.36.0
  replaces: strimzi-cluster-operator.v0.35.1
- name: strimzi-cluster-operator.v0.36.1
  replaces: strimzi-cluster-operator.v0.36.0
- name: strimzi-cluster-operator.v0.37.0
  replaces: strimzi-cluster-operator.v0.36.1
- name: strimzi-cluster-operator.v0.38.0
  replaces: strimzi-cluster-operator.v0.37.0
- name: strimzi-cluster-operator.v0.39.0
  replaces: strimzi-cluster-operator.v0.38.0
- name: strimzi-cluster-operator.v0.40.0
  replaces: strimzi-cluster-operator.v0.39.0
- name: strimzi-cluster-operator.v0.41.0
  replaces: strimzi-cluster-operator.v0.40.0
- name: strimzi-cluster-operator.v0.42.0
  replaces: strimzi-cluster-operator.v0.41.0
- name: strimzi-cluster-operator.v0.43.0
  replaces: strimzi-cluster-operator.v0.42.0
name: strimzi-0.43.x
package: strimzi-kafka-operator
schema: olm.channel
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:cc71492ec14907c0c9fcf5f719183c049d8ffc1799723cd8384201c6f8b2f85a
name: strimzi-cluster-operator.v0.11.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.11.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:cc71492ec14907c0c9fcf5f719183c049d8ffc1799723cd8384201c6f8b2f85a
  name: ""
- image: strimzi/cluster-operator:0.11.0
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:6ed0c1d3f102629cfe340a30a22fce77df7671e7a3ead60f6541a943c2c3e774
name: strimzi-cluster-operator.v0.11.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.11.1
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:6ed0c1d3f102629cfe340a30a22fce77df7671e7a3ead60f6541a943c2c3e774
  name: ""
- image: strimzi/cluster-operator:0.11.1
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:0d6ccb4f42feedf612300d969a99bb16c6f2c42c601cf5a939d767580d3b6601
name: strimzi-cluster-operator.v0.12.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.12.1
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:0d6ccb4f42feedf612300d969a99bb16c6f2c42c601cf5a939d767580d3b6601
  name: ""
- image: strimzi/operator:0.12.1
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:7d92cb4b2b2793fe664c923d4911db1247521fa6e2158d000631f0cd62ade7b3
name: strimzi-cluster-operator.v0.12.2
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.12.2
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:7d92cb4b2b2793fe664c923d4911db1247521fa6e2158d000631f0cd62ade7b3
  name: ""
- image: strimzi/operator:0.12.2
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:5c6cce3ed2831d359f3470ef6c4535f99a91a2c10bb49b658db2d7880fce23d4
name: strimzi-cluster-operator.v0.13.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.13.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:5c6cce3ed2831d359f3470ef6c4535f99a91a2c10bb49b658db2d7880fce23d4
  name: ""
- image: strimzi/operator:0.13.0
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:2c366f72d5ebf8b03a74ea2e54ea308b1e44b106128d56cf1d4e4ac665d51e7c
name: strimzi-cluster-operator.v0.14.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.14.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:2c366f72d5ebf8b03a74ea2e54ea308b1e44b106128d56cf1d4e4ac665d51e7c
  name: ""
- image: strimzi/operator:0.14.0
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:b68ca5833d9af51ffbc1d3f61c10b004227ff1eedfd752357c1ef6a5d989804f
name: strimzi-cluster-operator.v0.15.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.15.0
relatedImages:
- image: docker.io/strimzi/operator@sha256:c4e6c47444e45cef133aa7b34ef29fe2ebf9d3edc09c946c78db6a4359f4312d
  name: ""
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:b68ca5833d9af51ffbc1d3f61c10b004227ff1eedfd752357c1ef6a5d989804f
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:7e38a2df4cf793ba358b6839f3a78201d611ecf4aadec517b89726d0cce1e8ac
name: strimzi-cluster-operator.v0.16.2
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.16.2
relatedImages:
- image: ""
  name: ""
- image: docker.io/strimzi/operator@sha256:d134a9865524c29fcf75bbc4469013bc38d8a15cb5f41acfddb6b9e492f556e4
  name: ""
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:7e38a2df4cf793ba358b6839f3a78201d611ecf4aadec517b89726d0cce1e8ac
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:376f3896f5aa8f17c9ddf3f23a43214e357679b0e1d5268a7138346f3c2143df
name: strimzi-cluster-operator.v0.17.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.17.0
relatedImages:
- image: ""
  name: ""
- image: docker.io/strimzi/operator@sha256:a789a21d93e73fb2fcc1981e721697296696f8900c7dd7a018838f54e62ea0ac
  name: ""
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:376f3896f5aa8f17c9ddf3f23a43214e357679b0e1d5268a7138346f3c2143df
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:daf6015d156de44881f9999912200f5fc8d65fefa1b7a80925b2b673eb7548ca
name: strimzi-cluster-operator.v0.18.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.18.0
relatedImages:
- image: docker.io/strimzi/jmxtrans@sha256:ab65157523eaaa25cf44fc273a01ac701dee00e5cd4f0c378b700e0f0f795b73
  name: ""
- image: docker.io/strimzi/kafka-bridge@sha256:34fbe40acdd72eff9fe2d4eca273251776f14218a038de0952f12fce859186c5
  name: ""
- image: docker.io/strimzi/kafka@sha256:12d5ed92510941f1569faa449665e9fc6ea544e67b7ae189ec6b8df434e121f4
  name: ""
- image: docker.io/strimzi/kafka@sha256:3891d699bec7e33701f630f45762705edde0056244d1a29f65f47ce340ba923b
  name: ""
- image: docker.io/strimzi/kafka@sha256:5f6074515468cdfc80b0f4dccefe810a6254cc08c6fc084ac7565c6f8e757c53
  name: ""
- image: docker.io/strimzi/operator@sha256:2857eec4b4c5eca0fbe342fa37497dcc9eee6fdbc06db53910c92136176ed34d
  name: ""
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:daf6015d156de44881f9999912200f5fc8d65fefa1b7a80925b2b673eb7548ca
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:319922171f712e2d9fa7639e25d4441e8147c139a98ab4fb7badd803358d3072
name: strimzi-cluster-operator.v0.19.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.19.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.5.0",
                  "replicas":3,
                  "listeners":{
                    "plain":{
                      },
                    "tls":{
                      }
                  },
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.5"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.5.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnectS2I",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.5.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.5.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "whitelist":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1alpha1",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 2,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"2.5.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": 1,
                    "offset.storage.replication.factor": 1,
                    "status.storage.replication.factor": 1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "NetworkOutboundCapacityGoal",
                "CpuCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: docker.io/strimzi/operator:0.19.0
      createdAt: "2020-07-27 22:49:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operatorhub.io/ui-metadata-max-k8s-version: "1.21"
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Connect cluster with Source 2 Image support
        displayName: Kafka Connect Source to Image
        kind: KafkaConnectS2I
        name: kafkaconnects2is.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: DeploymentConfig
          name: ""
          version: apps.openshift.io/v1
        - kind: ReplicationController
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: BuildConfig
          name: ""
          version: build.openshift.io/v1
        - kind: ImageStream
          name: ""
          version: image.openshift.io/v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: whitelist
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org)
      cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/)
      in various deployment configurations. See our [website](https://strimzi.io)
      for more details about the project.\n### New in 0.19\n* Support for scale subresource
      in `KafkaConnect`, `KafkaConnectS2I`, `KafkaBridge`, `KafkaMirrorMaker`, `KafkaMirrorMaker2`,
      and `KafkaConnector` resources\n* Use Java 11 as the Java runtime\n* Add support
      for Open Policy Agent for Kafka authorization\n* Use Strimzi Kafka Bridge 0.18.0\n*
      Make it possible to configure labels and annotations for secrets created by
      the User Operator\n* Remove deprecated `Kafka.spec.topicOperator` classes and
      deployment logic\n* Refactored the format of the `KafkaRebalance` resource's
      status. The state of the rebalance is now displayed in the associated `Condition`'s
      `type` field rather than the `status` field. This was done so that the information
      would display correctly in various Kubernetes tools.\n* Added performance tuning
      options to the `KafkaRebalance` CR and the ability to define a regular expression
      that will exclude matching topics from a rebalance optimization proposal.\n*
      Support dynamically changeable logging in the Entity Operator and Kafka Bridge
      \n### Supported Features\n* **Manages the Kafka Cluster** - Deploys and manages
      all of the components of this complex application, including dependencies like
      Apache ZooKeeper® that are traditionally hard to administer.\n* **Includes Kafka
      Connect** - Allows for configuration of common data sources and sinks to move
      data into and out of the Kafka cluster.\n* **Topic Management** - Creates and
      manages Kafka Topics within the cluster.\n* **User Management** - Creates and
      manages Kafka Users within the cluster.\n* **Connector Management** - Creates
      and manages Kafka Connect connectors.\n* **Includes Kafka Mirror Maker 1 and
      2** - Allows for morroring data between different Apache Kafka® clusters.\n*
      **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages
      through an Apache Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing**
      - Uses built-in Cruise Control for redistributes partition replicas according
      to specified goals in order to achieve the best cluster performance.\n* **Monitoring**
      - Built-in support for monitoring using Prometheus and provided Grafana dashabords\n###
      Upgrading your Clusters\nThe Strimzi Operator understands how to run and upgrade
      between a set of Kafka versions. When specifying a new version in your config,
      check to make sure you aren't using any features that may have been removed.
      See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str)
      for more information.\n### Storage\nAn efficient data storage infrastructure
      is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed
      via Strimzi requires block storage. The use of file storage (for example, NFS)
      is not recommended.\nThe Strimzi Operator supports three types of data storage:\n*
      Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a
      Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi
      also supports advanced operations such as adding or removing disks in Apache
      Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n###
      Documentation\nDocumentation to the current _master_ branch as well as all releases
      can be found on our [website](https://strimzi.io/documentation).\n### Getting
      help\nIf you encounter any issues while using Strimzi, you can get help using:\n*
      [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n*
      [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
      Contributing\nYou can contribute by:\n* Raising any issues you find using Strimzi\n*
      Fixing issues by opening Pull Requests\n* Improving documentation\n* Talking
      about Strimzi\n\nAll bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues).
      Issues which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
      label.\n\nThe [Hacking guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/HACKING.md)
      describes how to build Strimzi and how to  test your changes before submitting
      a patch or opening a PR.\n\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/)
      describes how to contribute to Strimzi documentation.\n\nIf you want to get
      in touch with us first before contributing, you can use:\n* [Strimzi mailing
      list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi
      Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
      License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).\n"
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.11.0
    provider:
      name: Strimzi
relatedImages:
- image: docker.io/strimzi/jmxtrans@sha256:1f4c19182a6bff0ad0f358284e1da3cbdc042b13623f23e19802400542bef89d
  name: strimzi-jmxtrans
- image: docker.io/strimzi/kafka-bridge@sha256:07625a283342ae26f94aa002362bf7a7729553a9a1693e6a9e1648e7f12b7bc2
  name: strimzi-bridge
- image: docker.io/strimzi/kafka@sha256:19fe5726d2702b8d2a80e1eeb3c2330c1efb528d275b9671cbc3dabe8fd25940
  name: strimzi-kafka-241
- image: docker.io/strimzi/kafka@sha256:961419d795036f5f491817a5652c8f30c531a7b3cafd245d9473812a6a632c19
  name: strimzi-kafka-250
- image: docker.io/strimzi/kafka@sha256:df7007f48fb49969499b5191188ab299ff460d3bd04b2942b81e44088e5c47b7
  name: strimzi-kafka-240
- image: docker.io/strimzi/operator@sha256:d8fed9eb28c6d024670b060527681e21c6744a6c7dd2bf48450ce577382d3646
  name: strimzi-cluster-operator
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:319922171f712e2d9fa7639e25d4441e8147c139a98ab4fb7badd803358d3072
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:18a790fcc3cffb618caed20d6791a45b7575cf0f27c49d1acb1a0df709c27cac
name: strimzi-cluster-operator.v0.20.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.20.0
relatedImages:
- image: docker.io/strimzi/jmxtrans@sha256:54731f53b77f7a3ccd39b243d41c3ba9151be17cb8d879f9004a961aeaa4f796
  name: ""
- image: docker.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
  name: ""
- image: docker.io/strimzi/kafka@sha256:04f2f20ec54d37e8d7ba41ce1750c028e9dd98268e3007f14bf6988516e675a3
  name: ""
- image: docker.io/strimzi/kafka@sha256:a7836159f95072a4b2bee952208b0d2f280fbc516cdbc9f6dafc476c0d7b7ebf
  name: ""
- image: docker.io/strimzi/kafka@sha256:de912deee0a7e51b7408418911b6e24207d7a42ada1379e6d4c1bbb074f76a3d
  name: ""
- image: docker.io/strimzi/operator@sha256:62218aee7553b31db1f65bc30b3c6b6595c2fd631b2e1792e24e554a47080aa6
  name: ""
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:18a790fcc3cffb618caed20d6791a45b7575cf0f27c49d1acb1a0df709c27cac
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:79322193048175e10bfa1d5b64b41f2b273db46afd33c13be02f1f733faa7008
name: strimzi-cluster-operator.v0.20.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.20.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.6.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.6",
                    "inter.broker.protocol.version":"2.6"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.6.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnectS2I",
            "metadata":{
              "name":"my-connect-s2i-cluster"
            },
            "spec":{
              "version":"2.6.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.6.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "whitelist":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1alpha1",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 2,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"2.6.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": 1,
                    "offset.storage.replication.factor": 1,
                    "status.storage.replication.factor": 1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "NetworkOutboundCapacityGoal",
                "CpuCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster with S2I support"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: docker.io/strimzi/operator@sha256:3ded125be57b1da93736baa3200b67c42252d1c6cb5f1e583354f6bb29fe1f60
      createdAt: "2020-12-15 13:16:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operatorhub.io/ui-metadata-max-k8s-version: "1.21"
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Connect cluster with Source 2 Image support
        displayName: Kafka Connect Source to Image
        kind: KafkaConnectS2I
        name: kafkaconnects2is.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: DeploymentConfig
          name: ""
          version: apps.openshift.io/v1
        - kind: ReplicationController
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: BuildConfig
          name: ""
          version: build.openshift.io/v1
        - kind: ImageStream
          name: ""
          version: image.openshift.io/v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: whitelist
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### New in 0.20
      * Last version to support Kubernetes 1.11 and higher. Future versions will support only Kubernetes 1.16 and higher.
      * Big improvements to Kafka listener configuration
      * Add support for Kafka 2.5.1 and 2.6.0. Remove support for 2.4.0 and 2.4.1
      * Remove TLS sidecars from Kafka pods
      * Cruise Control metrics
      * Support dynamically changeable logging in the Cluster Operator, Kafka brokers, Kafka Connect and Kafka Mirror Maker 2
      * Support for `client.rack` in Kafka Connect
      * Support for configuring `hostAliases` in Pod template
      * Use Strimzi Kafka Bridge 0.19.0
      * Improvements to OAuth authentication and Keycloak authroization
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.11.0
    provider:
      name: Strimzi
relatedImages:
- image: docker.io/strimzi/jmxtrans@sha256:de31d15268d596befce3fcf74927c14ccec783d18879c81b39c669364e15a6e6
  name: strimzi-jmxtrans
- image: docker.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
  name: strimzi-bridge
- image: docker.io/strimzi/kafka@sha256:2e4b7af64b818ce85642d7e0aa0a8bdd798a5b1d5fa9116400b0c91742bab8f6
  name: strimzi-kafka-251
- image: docker.io/strimzi/kafka@sha256:6671bd4f37d2df0877e2aa6c3dba53a7c110528ced9b15c9c3f5bd32949fc4ba
  name: strimzi-kafka-250
- image: docker.io/strimzi/kafka@sha256:b3b3c7a35f9416db17773d4ce569120f818b3c2faa2480847bd0797d5193e653
  name: strimzi-kafka-260
- image: docker.io/strimzi/operator@sha256:3ded125be57b1da93736baa3200b67c42252d1c6cb5f1e583354f6bb29fe1f60
  name: strimzi-cluster-operator
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:79322193048175e10bfa1d5b64b41f2b273db46afd33c13be02f1f733faa7008
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:77bd4092c38cda1970b795896e25e4df17b8c08b9605a7d3912761994cad69dd
name: strimzi-cluster-operator.v0.21.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.21.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.7.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.7",
                    "inter.broker.protocol.version":"2.7"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.7.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaConnectS2I",
            "metadata":{
              "name":"my-connect-s2i-cluster"
            },
            "spec":{
              "version":"2.7.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.7.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "whitelist":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1alpha1",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta1",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 2,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"2.7.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": 1,
                    "offset.storage.replication.factor": 1,
                    "status.storage.replication.factor": 1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1alpha1",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "NetworkOutboundCapacityGoal",
                "CpuCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster with S2I support"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator:0.21.1
      createdAt: "2021-01-19 13:13:13"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operatorhub.io/ui-metadata-max-k8s-version: "1.21"
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Connect cluster with Source 2 Image support
        displayName: Kafka Connect Source to Image
        kind: KafkaConnectS2I
        name: kafkaconnects2is.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: DeploymentConfig
          name: ""
          version: apps.openshift.io/v1
        - kind: ReplicationController
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: BuildConfig
          name: ""
          version: build.openshift.io/v1
        - kind: ImageStream
          name: ""
          version: image.openshift.io/v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: whitelist
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta1
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1alpha1
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### New in 0.21
      * **Since 0.21 Strimzi supports only Kubernetes 1.16 and higher.**
      * Support for Kafka 2.7.0
      * Support for declarative management of connector plugins in Kafka Connect CR
      * Add support for secretPrefix property for User Operator to prefix all secret names created from KafkaUser resource
      * Allow configuring labels and annotations for Cluster CA certificate secrets
      * Add the JAAS configuration string in the sasl.jaas.config property to the generated secrets for KafkaUser with SCRAM-SHA-512 authentication
      * Allow disabling ownerReference on CA secrets
      * Make it possible to run Strimzi operators and operands with read-only root filesystem
      * Add possibility to configure DeploymentStrategy for Kafka Connect, Kafka Mirror Maker (1 and 2), and Kafka Bridge
      * Support passing metrics configuration as an external ConfigMap
      * Enable CORS configuration for Cruise Control
      * Support for rolling individual Kafka or ZooKeeper pods through the Cluster Operator using an annotation
      * Support for Topology Spread Constraints in Pod templates
      * Make Kafka cluster-id available on Kafka CR status
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: docker.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
  name: strimzi-bridge
- image: gcr.io/kaniko-project/executor@sha256:b9eec410fa32cd77cdb7685c70f86a96debb8b087e77e63d7fe37eaadb178709
  name: strimzi-kaniko-executor
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:77bd4092c38cda1970b795896e25e4df17b8c08b9605a7d3912761994cad69dd
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:6a6f59d342196690ed2bc90a9a2cc1a09f8f650097811d92913cf384729f2b0c
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka@sha256:536ccd07bf46371b1d78a382201dbd0d6e5ad3eaa343974e6b27bd34ce01ee23
  name: strimzi-kafka-260
- image: quay.io/strimzi/kafka@sha256:7d383a11a6466f15f8a3c10010406e76fec1493adfc97f08c9d58ef2c90cade5
  name: strimzi-kafka-270
- image: quay.io/strimzi/kafka@sha256:deb1113293028409ec219f352281ffe4c97a51b2057419a27fcbe88856ad6329
  name: strimzi-kafka-251
- image: quay.io/strimzi/kafka@sha256:f1268f53ce158ceaed3b93c6449e7318853f3d9eefbfe125dc19e58db8c76f99
  name: strimzi-kafka-250
- image: quay.io/strimzi/operator@sha256:5d3f4313b465b6a987b0de398969342b31157cacde1b06ed9b5f2e7d08e73549
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:2ce5bb7c2f1124def715fe73599c3cd5384d484a46cd51bdf7281db0f50b3e28
name: strimzi-cluster-operator.v0.22.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.22.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.7.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.7",
                    "inter.broker.protocol.version":"2.7"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.7.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnectS2I",
            "metadata":{
              "name":"my-connect-s2i-cluster"
            },
            "spec":{
              "version":"2.7.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.7.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "whitelist":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 2,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"2.7.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": 1,
                    "offset.storage.replication.factor": 1,
                    "status.storage.replication.factor": 1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "NetworkOutboundCapacityGoal",
                "CpuCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster with S2I support"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:0e37f671e6d489c3e56ffb8f51f19a2a014b2cb3f57eafcc5e2931090932e725
      createdAt: "2021-03-23 13:13:13"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operatorhub.io/ui-metadata-max-k8s-version: "1.21"
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster with Source 2 Image support
        displayName: Kafka Connect Source to Image
        kind: KafkaConnectS2I
        name: kafkaconnects2is.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: DeploymentConfig
          name: ""
          version: apps.openshift.io/v1
        - kind: ReplicationController
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: BuildConfig
          name: ""
          version: build.openshift.io/v1
        - kind: ImageStream
          name: ""
          version: image.openshift.io/v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: whitelist
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  This release introduces new API version `v1beta2` to all Strimzi custom resources.  This is a preparation for migration to `apiextensions/v1` which is needed because Kubernetes 1.22 will remove support for `apiextensions/v1beta1`.  Migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs after the upgrade to 0.22 is done and before upgrading to Strimzi 0.23 which will support only Strimzi `v1beta2` APIs and `apiextensions/v1` CRDs. For more details about the CRD upgrades, see the [documentation](https://strimzi.io/docs/operators/0.22.1/deploying.html#assembly-upgrade-resources-str).
      ### New in 0.22
      * Add v1beta2 version for all resources. v1beta2 removes all deprecated fields.
      * Add annotations that enable the operator to restart Kafka Connect connectors or tasks. The annotations can be applied to the KafkaConnector and the KafkaMirrorMaker2 custom resources.
      * Add additional configuration options for the Kaniko executor used by the Kafka Connect Build on Kubernetes
      * Add support for JMX options configuration of all Kafka Connect (KC, KC2SI, MM2)
      * Update Strimzi Kafka OAuth to version 0.7 and add support for new features (OAuth over SASL PLAIN, Checking token audience, Validating tokens using JSONPath)
      * Configure external logging ConfigMap name and key.
      * Add support for configuring labels and annotations in ClusterRoleBindings created as part of Kafka and Kafka Connect clusters
      * Add support for Ingress v1 in Kubernetes 1.19 and newer
      * Add support for Kafka 2.6.1
      * List topics used by a Kafka Connect connector in the .status section of the KafkaConnector custom resource
      * Bump Cruise Control to v2.5.37 for Kafka 2.7 support. Note this new version of Cruise Control uses Log4j 2 and is supported by dynamic logging configuration (where logging properties are defined in a ConfigMap). However, existing Log4j configurations must be updated to Log4j 2 configurations.
      * Support pausing reconciliation of CR with annotation strimzi.io/pause-reconciliation
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:2ce5bb7c2f1124def715fe73599c3cd5384d484a46cd51bdf7281db0f50b3e28
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:79bbdab70980a6929197264b944a1f53b528785de1ecf47f96a0a397d43d784f
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:322087236facbddbdb1c24d2f8d963773913a85f2333bebecf1e37374e88e54c
  name: strimzi-kafka-250
- image: quay.io/strimzi/kafka@sha256:3e15af3627116de6c7db1619d9c963147392851be36fa6342c3c17263e993de3
  name: strimzi-kafka-251
- image: quay.io/strimzi/kafka@sha256:59239810a6c46907590df3daaa79d10c034c26f770a51fec07313da389b031f6
  name: strimzi-kafka-261
- image: quay.io/strimzi/kafka@sha256:9413de5670950e85f43a5ee6d06940218f753f78f71489eb8f4fdcccdd21074e
  name: strimzi-kafka-260
- image: quay.io/strimzi/kafka@sha256:f7f19ec9598c4c577460988f48ddf55c1103fe3883fbe4ea8813f2864f24662e
  name: strimzi-kafka-270
- image: quay.io/strimzi/kaniko-executor@sha256:c812530c2ea981d3316c7544b180289abfbd9adf1dde6f1345692b8fb0a65cb0
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/operator@sha256:0e37f671e6d489c3e56ffb8f51f19a2a014b2cb3f57eafcc5e2931090932e725
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:cfb319cbd6b84b2b1ae4a89364251352f35805b95c27e494599f5015ac0c65e3
name: strimzi-cluster-operator.v0.23.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.23.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.8.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.8",
                    "inter.broker.protocol.version":"2.8"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnectS2I",
            "metadata":{
              "name":"my-connect-s2i-cluster"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "whitelist":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 2,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"2.8.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": 1,
                    "offset.storage.replication.factor": 1,
                    "status.storage.replication.factor": 1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "NetworkOutboundCapacityGoal",
                "CpuCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster with S2I support"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:59d939f342f96d0e8a54c96fd187832c4b19cd4137bf55ace53d486728ae6c5f
      createdAt: "2021-05-14 11:37:13"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster with Source 2 Image support
        displayName: Kafka Connect Source to Image
        kind: KafkaConnectS2I
        name: kafkaconnects2is.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: DeploymentConfig
          name: ""
          version: apps.openshift.io/v1
        - kind: ReplicationController
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: BuildConfig
          name: ""
          version: build.openshift.io/v1
        - kind: ImageStream
          name: ""
          version: image.openshift.io/v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: whitelist
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  Starting with Strimzi 0.23, we support only the `v1beta2` API version of all Strimzi custom resources.  This is a required for migration to `apiextensions/v1` which is needed because Kubernetes 1.22 will remove support for `apiextensions/v1beta1`.  Migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs **before upgrading to Strimzi 0.23**. For more details about the CRD upgrades, see the [documentation](https://strimzi.io/docs/operators/0.23.0/deploying.html#assembly-upgrade-resources-str).
      ### New in 0.23
      * Migrate to CRD v1 (required by Kubernetes 1.22+)
      * Strimzi API versions `v1alpha1` and `v1beta1` were removed from all Strimzi custom resources apart from `KafkaTopic` and `KafkaUser` (use `v1beta2` versions instead)
      * Add support for Kafka 2.8.0 and 2.6.2, remove support for Kafka 2.5.x
      * Make it possible to configure maximum number of connections and maximum connection creation rate in listener configuration
      * Add support for configuring finalizers for `loadbalancer` type listeners
      * Use dedicated Service Account for Kafka Connect Build on Kubernetes
      * Remove direct ZooKeeper access for handling user quotas in the User Operator. Add usage of Admin Client API instead.
      * Support for configuring custom Authorizer implementation
      * Changed Reconciliation interval for Topic Operator from 90 to 120 seconds (to keep it the same as for other operators)
      * Changed Zookeeper session timeout default value to 18 seconds for Topic and User Operators (for improved resiliency)
      * Removed requirement for replicas and partitions KafkaTopic spec making these parameters optional
      * Support to configure a custom filter for parent CR's labels propagation into subresources
      * Allow disabling service links (environment variables describing Kubernetes services) in Pod template
      * Add support for separate control plane listener (disabled by default, available via the `ControlPlaneListener` feature gate)
      * Support for Dual Stack networking
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _master_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:cfb319cbd6b84b2b1ae4a89364251352f35805b95c27e494599f5015ac0c65e3
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:b4ec1844f4cc5eb74cd0aac83d74b81b977e178bf670d1136d1af0b68663d0a3
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:bed07186355a4c04ee50e90048e3bd3a023264093a9ef28f0278cce44640e93f
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:641f46114c59d61577bcb3f4ef5af16aea3ed42c2a575f8d3641c82848df85e8
  name: strimzi-kafka-262
- image: quay.io/strimzi/kafka@sha256:699bff48ee445d8ba381a791cd0340015e3ecede8d169f41bc151095ab7fb5cc
  name: strimzi-kafka-261
- image: quay.io/strimzi/kafka@sha256:d2745f48ed262290ce66c3362ffb9b9a8cfeb9c76beac40c995f72f3f06ad10e
  name: strimzi-kafka-270
- image: quay.io/strimzi/kafka@sha256:dbc53bb374d2cb9513a5bb8f80fea751c91b249cabd36d8b3c04af5e5c961738
  name: strimzi-kafka-260
- image: quay.io/strimzi/kafka@sha256:e90695b35d6dd5db20c9900dd0dab95d1ef908f3145b4f9f436b903303c88549
  name: strimzi-kafka-280
- image: quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/operator@sha256:59d939f342f96d0e8a54c96fd187832c4b19cd4137bf55ace53d486728ae6c5f
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:fadf18bda86f8d4283da3446fd12e458db35da8f05f6150bc9ba86fbf1e1b1f2
name: strimzi-cluster-operator.v0.24.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnectS2I
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.24.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.8.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.8",
                    "inter.broker.protocol.version":"2.8"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnectS2I",
            "metadata":{
              "name":"my-connect-s2i-cluster"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 2,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"2.8.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster with S2I support"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:786ea69c77e0651f009a73a8b3ce0b3d41b3cd71b917dc0d9bdc61c725f494a6
      createdAt: "2021-06-24 13:13:13"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster with Source 2 Image support
        displayName: Kafka Connect Source to Image
        kind: KafkaConnectS2I
        name: kafkaconnects2is.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: DeploymentConfig
          name: ""
          version: apps.openshift.io/v1
        - kind: ReplicationController
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: BuildConfig
          name: ""
          version: build.openshift.io/v1
        - kind: ImageStream
          name: ""
          version: image.openshift.io/v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
    description: "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org)
      cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/)
      in various deployment configurations. See our [website](https://strimzi.io)
      for more details about the project.\n### CRD Upgrades\n**!!! IMPORTANT !!!**
      \ This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.
      \ If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed
      for all Strimzi CRDs and CRs before the upgrade to 0.24 is done!  If upgrading
      from Strimzi version earlier than 0.22, you need to first install the CRDs from
      Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and
      CRs before the upgrade to 0.24 is done!  For more details about the CRD upgrades,
      see the documentation.\n### New in 0.24\n* Add support for Kafka 2.7.1 and remove
      support for 2.6.0, 2.6.1, and 2.6.2\n* Add support for [Kubernetes Configuration
      Provider for Apache Kafka](https://github.com/strimzi/kafka-kubernetes-config-provider)\n*
      Use Red Hat UBI8 base image\n* Support for patching of service accounts and
      configuring their labels and annotations. The feature is disabled by default
      and enabled using the new `ServiceAccountPatching` feature gate.\n* Added support
      for configuring cluster-operator's worker thread pool size that is used for
      various sync and async tasks\n* Add Kafka Quotas plugin with produce, consume,
      and storage quotas\n* Support pausing reconciliation of KafkaTopic CR with annotation
      `strimzi.io/pause-reconciliation`\n* Update cruise control to 2.5.57\n* Update
      to Strimzi Kafka Bridge to 0.20.1\n* Support for broker load information added
      to the rebalance optimization proposal. Information on the load difference,
      before and after a rebalance is stored in a ConfigMap\n* Add support for selectively
      changing the verbosity of logging for individual CRs, using markers.\n* Added
      support for `controller_mutation_rate' quota. Creation/Deletion of topics and
      creation of partitions can be configured through this.\n* Use newer version
      of Kafka Exporter with different bugfixes \n### Supported Features\n* **Manages
      the Kafka Cluster** - Deploys and manages all of the components of this complex
      application, including dependencies like Apache ZooKeeper® that are traditionally
      hard to administer.\n* **Includes Kafka Connect** - Allows for configuration
      of common data sources and sinks to move data into and out of the Kafka cluster.\n*
      **Topic Management** - Creates and manages Kafka Topics within the cluster.\n*
      **User Management** - Creates and manages Kafka Users within the cluster.\n*
      **Connector Management** - Creates and manages Kafka Connect connectors.\n*
      **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between
      different Apache Kafka® clusters.\n* **Includes HTTP Kafka Bridge** - Allows
      clients to send and receive messages through an Apache Kafka® cluster via HTTP
      protocol.\n* **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes
      partition replicas according to specified goals in order to achieve the best
      cluster performance.\n* **Monitoring** - Built-in support for monitoring using
      Prometheus and provided Grafana dashabords\n### Upgrading your Clusters\nThe
      Strimzi Operator understands how to run and upgrade between a set of Kafka versions.
      When specifying a new version in your config, check to make sure you aren't
      using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str)
      for more information.\n### Storage\nAn efficient data storage infrastructure
      is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed
      via Strimzi requires block storage. The use of file storage (for example, NFS)
      is not recommended.\nThe Strimzi Operator supports three types of data storage:\n*
      Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a
      Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi
      also supports advanced operations such as adding or removing disks in Apache
      Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n###
      Documentation\nDocumentation to the current _master_ branch as well as all releases
      can be found on our [website](https://strimzi.io/documentation).\n### Getting
      help\nIf you encounter any issues while using Strimzi, you can get help using:\n*
      [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n*
      [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
      Contributing\nYou can contribute by:\n* Raising any issues you find using Strimzi\n*
      Fixing issues by opening Pull Requests\n* Improving documentation\n* Talking
      about Strimzi\n\nAll bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues).
      Issues which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
      label.\n\nThe [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/master/development-docs/DEV_GUIDE.md)
      describes how to build Strimzi and how to  test your changes before submitting
      a patch or opening a PR.\n\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/)
      describes how to contribute to Strimzi documentation.\n\nIf you want to get
      in touch with us first before contributing, you can use:\n* [Strimzi mailing
      list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi
      Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
      License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/master/LICENSE).\n"
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:fadf18bda86f8d4283da3446fd12e458db35da8f05f6150bc9ba86fbf1e1b1f2
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:2c54adabf6f31c087dbb898057f9c5e200aaf4c5b39fb3a47bbaf7f6587df72d
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:537ea10e87619251204747ebc1005c632a6c6ed270f5ef06f86c0c3ae4a7553b
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:8959b7968ab8b3306906cdbff2ebb8d63329af37e58124a601843795c4ef5bd6
  name: strimzi-kafka-271
- image: quay.io/strimzi/kafka@sha256:95cfe9000afda2f7def269ca46472d3803ee85146c521884884d8505a7187daf
  name: strimzi-kafka-270
- image: quay.io/strimzi/kafka@sha256:fbb08410d9595029bc4a02ed859971264e6ce2dc85dd6a9855eaa7bb58b52a25
  name: strimzi-kafka-280
- image: quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/operator@sha256:786ea69c77e0651f009a73a8b3ce0b3d41b3cd71b917dc0d9bdc61c725f494a6
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:e5a35c12ffaed50074fb84ef3e64993550fb6061a5f5c50cc0d4bbb12c6301da
name: strimzi-cluster-operator.v0.25.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.25.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"2.8.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"2.8",
                    "inter.broker.protocol.version":"2.8"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"2.8.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"2.8.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster with S2I support"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:afaf1dd1f2f696ae80674d74159661ea239ae609f78a73a1423c7a17a39e5044
      createdAt: "2021-06-24 13:13:13"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.25 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.25 is done!  For more details about the CRD upgrades, see the documentation.
      ### New in 0.25
      * Move from Scala 2.12 to Scala 2.13
      * Open Policy Agent authorizer updated to a new version supporting Scala 2.13.
        The new version of the authroizer uses different format of the input data sent to the OPA server and might require you to update your policies.
        See [release notes](https://github.com/strimzi/strimzi-kafka-operator/releases/tag/0.25.0) for more details.

      * Allow a custom password to be set for SCRAM-SHA-512 users by referencing a secret in the `KafkaUser` resource
      * Add support for [EnvVar Configuration Provider for Apache Kafka](https://github.com/strimzi/kafka-env-var-config-provider)
      * Add support for `tls-external` authentication to User Operator to allow management of ACLs and Quotas for TLS users with user certificates generated externally
      * Support for disabling the automatic generation of network policies by the Cluster Operator
      * Configure fixed size limit for `emptyDir` volumes used for temporary files
      * Update Strimzi Kafka Bridge to 0.20.2
      * The `KafkaConnectS2I` resource has been removed and is no longer supported by the operator.
        Please use the [migration guide](https://strimzi.io/docs/operators/0.24.0/full/using.html#proc-migrating-kafka-connect-s2i-str) to migrate your `KafkaConnectS2I` deployments to [`KafkaConnect` Build](https://strimzi.io/docs/operators/latest/full/deploying.html#creating-new-image-using-kafka-connect-build-str) instead.

      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:e5a35c12ffaed50074fb84ef3e64993550fb6061a5f5c50cc0d4bbb12c6301da
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:af5eb8459ac9a0acbca51e67c6e0217f62ba404cba9f2251968c927dcef75252
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:a005e20d7fbe04d6f587f2093e21a00556ec62b850df757b9f7d9d57e3141c40
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:56a33815f7d50a97ea9bb4cce1e3a6d04d918b841b5aa285f16b792d8930059e
  name: strimzi-kafka-280
- image: quay.io/strimzi/kafka@sha256:d8991608ec71f17e850c33714ee02ca87ba94bc0f077be62ad1ed127ca244823
  name: strimzi-kafka-270
- image: quay.io/strimzi/kafka@sha256:ee17eb3611019b0cfa5e9e196610edc1dbd7084471fb20990f055c89da8eef45
  name: strimzi-kafka-271
- image: quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/operator@sha256:afaf1dd1f2f696ae80674d74159661ea239ae609f78a73a1423c7a17a39e5044
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:057ce413ddfab4a3bd8ce693b9138548b6a52b49b2ac3f8d7149a3b6afc61ab3
name: strimzi-cluster-operator.v0.26.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.26.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:057ce413ddfab4a3bd8ce693b9138548b6a52b49b2ac3f8d7149a3b6afc61ab3
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:e0a88cc7f523e988a9c2438567b0759e61549bd0d1a25e20939edc2fac2a4fb2
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:8cf568a437d5673206f299b0532937ef606f78a8f0ac481c7dcb1928915f58b3
  name: ""
- image: quay.io/strimzi/kafka@sha256:b7c81a0c34c7c58603cad95ded27c20013cfb65eb652f4fe971ead10050c0f2b
  name: ""
- image: quay.io/strimzi/kafka@sha256:e543c3bcbebff7ce8796a724e4e5d6f761a270efcc0523fa7c6c38dbb60554c7
  name: ""
- image: quay.io/strimzi/kafka@sha256:f7403c24959d9a7efdd78a80b17769f4f34db931133b65aeabef695726a3091e
  name: ""
- image: quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
  name: ""
- image: quay.io/strimzi/maven-builder@sha256:663eb81388ae8f824e7920c272f6d2e2274cf6c140d61416607261cdce9d50e2
  name: ""
- image: quay.io/strimzi/operator@sha256:73d2862a475aef083edcf9f491ef97fd4930fa86d60921ee2be83d4309ac5bcc
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:0d5541471a75b39b393e29da4c727e0083ab1beac068f387d71f792325037148
name: strimzi-cluster-operator.v0.26.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.26.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.0.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"3.0",
                    "inter.broker.protocol.version":"3.0"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.0.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.0.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.0.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:5d90caa66f57939ba62a9a50efa00fce319ba596e719a3f8a42170d7635ee3f4
      createdAt: "2021-12-14 00:16:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.26 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.26 is done!  For more details about the CRD upgrades, see the documentation.
      ### New in 0.26.1
      * **Updated Log4j2 to fix CVE-2021-44228**
      ### New in 0.26.0
      * Add support for Kafka 2.8.1 and 3.0.0; remove Kafka 2.7.0 and 2.7.1
      * Add support for exposing JMX in Zookeeper
      * Allow configuring labels and annotations for JMX authentication secrets
      * Enable Cruise Control anomaly.detection configurations
      * Add support for building connector images from the Maven coordinates
      * Allow Kafka Connect Build artifacts to be downloaded from insecure servers
      * Add option to specify pull secret in Kafka Connect Build on OpenShift
      * Configurable authentication, authorization, and SSL for Cruise Control API
      * Allow to configure `/tmp` volume size via Pod template. By default `1Mi` is used.
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:0d5541471a75b39b393e29da4c727e0083ab1beac068f387d71f792325037148
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:bff5d3bab575d0b9ed95dd79d2d22518cc00c4d1c9dbb5614ed16149d4920a1b
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:d3899c79747e4cb3a6df5a9fcd80b81f038ca0634a97329c1d160499469876dd
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:6367b0fbba9593e3ac736040ea2d7ef71296b1ec144d3b54d9370352141b90e4
  name: strimzi-kafka-300
- image: quay.io/strimzi/kafka@sha256:8c022a8535742b2eea691737f863af5ddef1e8df08b415b8139ecd02a79052a5
  name: strimzi-kafka-280
- image: quay.io/strimzi/kafka@sha256:bd22a134b0c351ddfc78a3263850c2f16733c52f57ac92984cbe0ffff477c724
  name: strimzi-kafka-281
- image: quay.io/strimzi/kaniko-executor@sha256:b0ca0b4fb16822e55ea1250c54c73c7c4248282908065422ededa49fa400436a
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:663eb81388ae8f824e7920c272f6d2e2274cf6c140d61416607261cdce9d50e2
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:5d90caa66f57939ba62a9a50efa00fce319ba596e719a3f8a42170d7635ee3f4
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:459503b883f79ec27613726c9ff22fde92c59aa0e4056cdf97b28814354164c5
name: strimzi-cluster-operator.v0.27.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.27.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:459503b883f79ec27613726c9ff22fde92c59aa0e4056cdf97b28814354164c5
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:d7138d40abc50b1d03f8e218ad9f55a32838827f4cd224d523d0ad25e536dbf1
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:ac81ad37d05bf9542784c3e2be16a6dedc827bf4d68ea60c8a79496e0237ff7b
  name: ""
- image: quay.io/strimzi/kafka@sha256:2fb9ba5654915f924de78081dc30dc69311a764e5646c4c1993761a7d5aef126
  name: ""
- image: quay.io/strimzi/kafka@sha256:ab741ae467693c54265cafcee93a7c4e9dd1afe47e4d6b15887c9727f20f1b11
  name: ""
- image: quay.io/strimzi/kafka@sha256:e15d1247f4e60f89bc912867f530eb723380470fa2bd7ae8e9fdd68c5a7ac7f7
  name: ""
- image: quay.io/strimzi/kaniko-executor@sha256:a07ebe6600d6baba09980abdde2931b3b6abd2f75aeb2cac5c6a2d22a37aa807
  name: ""
- image: quay.io/strimzi/maven-builder@sha256:4fa1aad6740cfcc09c8f93773d32c00bd62aa13f2230fc9fd2d29c605d45aa11
  name: ""
- image: quay.io/strimzi/operator@sha256:b8ec0cf995659c417e0b849991f66adc31cf0f2484306fe9d07f382074f4fb7b
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:71eb38e1cdc50a18a81d0005f5d27f620afc4d98055739212f28eb0b832895b9
name: strimzi-cluster-operator.v0.27.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.27.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.0.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "log.message.format.version":"3.0",
                    "inter.broker.protocol.version":"3.0"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.0.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.0.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.0.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:9ea49407a04006d0bddfaaee822adfb95f5857af32ffcee81ba60ce891b07ba8
      createdAt: "2022-01-14 20:00:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.27 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.27 is done!  For more details about the CRD upgrades, see the documentation.
      ### New in 0.27.1
      * Updated Log4j2 to version 2.17.1 and Fabric8 Kubernetes Client to 5.10.2
      ### New in 0.27.0
      * Updated Log4j2 to version 2.17.0 (adresses CVE-2021-44228, CVE-2021-45046, CVE-2021-45105)
      * (Experimental) support for AArch64 / ARM64 architecture
      * `ControlPlaneListener` and `ServiceAccountPatching` feature gates are now in the beta phase and are enabled by default
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:71eb38e1cdc50a18a81d0005f5d27f620afc4d98055739212f28eb0b832895b9
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:d2d2477517eb1ac98b51ad6d64d8c1c578141637afa8d46037076f0013183c0b
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:55a52316aead02efa2004174e11ad4728bb8b6f1c1415f725f597f1d2f2da188
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:5682a6bfcc4ee13d53a30d587c8f96bc40abe3618880989336c5af274ea3cefa
  name: strimzi-kafka-300
- image: quay.io/strimzi/kafka@sha256:a3ec567ca529df2fa41f8986d21e86dde66be94aa4baa56faa66db4dcb3b258e
  name: strimzi-kafka-281
- image: quay.io/strimzi/kafka@sha256:f4d68bb94447c6612f70de7f6587e9e7ef712c83769ea1f11a8dbda0d241a059
  name: strimzi-kafka-280
- image: quay.io/strimzi/kaniko-executor@sha256:a07ebe6600d6baba09980abdde2931b3b6abd2f75aeb2cac5c6a2d22a37aa807
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:9acd178cc504be8acaa70a39f3c17830aae1f0e93a656110790f9476b09260d5
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:9ea49407a04006d0bddfaaee822adfb95f5857af32ffcee81ba60ce891b07ba8
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:01860dba1282eb2fcace36151fab3a09195a3b476156edcb2c8e5ffa588033df
name: strimzi-cluster-operator.v0.28.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.28.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.1.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.1"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.1.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.1.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.1.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:8b010c5fb8244b742a37f264feefc116d75bb2abd2d6895375cbeea250727b39
      createdAt: "2022-02-12 23:02:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.28 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.28 is done!  For more details about the CRD upgrades, see the documentation.
      ### New in 0.28.0
      * Support for Kafka 3.1.0
      * Support for `StrimziPodSet` resources (disabled by default through the `UseStrimziPodSets` feature gate)
      * Support custom authentication mechanisms in Kafka listeners
      * Intra-broker disk balancing using Cruise Control
      * Add support for disabling the FIPS mode in OpenJDK
      * Fix renewing your own CA certificates
      * Added the option `createBootstrapService` to disable the creation of the bootstrap service for the Load Balancer Type Listener
      * Dependency updates (Strimzi Kafka Bridge, Strimzi OAuth, Open Policy Agent Authroizer plugin and others)
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi

      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.

      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.

      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.

      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:01860dba1282eb2fcace36151fab3a09195a3b476156edcb2c8e5ffa588033df
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:3a55a81790dc88b90d1bf858e2cfd7e591ad0e79f763c6d1667b2d3eb0d0c79d
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:c345c783d8fbbee4edeca2ebc47e7c454fcc2e26686820b8037de97369280ba0
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:06e9bda15495feb2b92d9950e834cdeed6ef20064f021a879610f1b59dd46950
  name: strimzi-kafka-310
- image: quay.io/strimzi/kafka@sha256:7c04f65e216bb941458aeadffb85e9eeee43d5ca67da566017c2c93a0664c98e
  name: strimzi-kafka-300
- image: quay.io/strimzi/kaniko-executor@sha256:a07ebe6600d6baba09980abdde2931b3b6abd2f75aeb2cac5c6a2d22a37aa807
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:3d5d664e089651944712361a6d8ba42b578dbd9bb3dfd9972f614520c9cfab75
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:8b010c5fb8244b742a37f264feefc116d75bb2abd2d6895375cbeea250727b39
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:64f24c76491eed9ca4fc21ea94d90c11dac6127ec78d37a86d366937a7cb2422
name: strimzi-cluster-operator.v0.29.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.29.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.2.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.2"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.2.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.2.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.2.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:afde94c6d2544207cb7f3c94b54455643558a9d5daaa13b9f736cc8da20e319c
      createdAt: "2022-05-15 00:01:07"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy", "proxy-aware"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.29 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.29 is done!  For more details about the CRD upgrades, see the documentation.
      ### New in 0.29.0
      * Add support for Apache Kafka 3.0.1, 3.1.1 and 3.2.0
      * Renew user certificates in User Operator only during maintenance windows
      * Remove TLS sidecar from Cruise Control pod. Cruise Control is now configured to not using ZooKeeper, so the TLS sidecar is not needed anymore.
      * Allow Cruise Control topic names to be configured
      * Add support for `spec.rack.topologyKey` property in Mirror Maker 2 to enable "fetch from the closest replica" feature.
      * Experiemntal support for the s390x platform
      * Added new rebalancing modes on the `KafkaRebalance` custom resource to add or remove brokers
      * Experimental KRaft mode (ZooKeeper-less Kafka). Use it for development and testing only!
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:64f24c76491eed9ca4fc21ea94d90c11dac6127ec78d37a86d366937a7cb2422
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:f89e3c9618430908a8b390f2490f5aa43687b12889b434472a962ce0170c6463
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:b7bc3dd90e87223766f608a0087b521f0bba79d1c21eaa833bc2708c71148b7f
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:284cde40784b6ff7bfb81b6dd28928e1e8c598fe6a72504f025592e5b43fa94c
  name: strimzi-kafka-301
- image: quay.io/strimzi/kafka@sha256:935caab03f1d0365b47ddefec0c1d8fa449fc3de715ccdd298aedef5ce968c73
  name: strimzi-kafka-300
- image: quay.io/strimzi/kafka@sha256:95678e843bc87cbe571f3f299045dd075725816b59e1b87821cd6025876ec559
  name: strimzi-kafka-310
- image: quay.io/strimzi/kafka@sha256:9dfc09273ad8fc4bdc75cbe93b4a061a05a5defb5884a221ae1e178ba602787f
  name: strimzi-kafka-320
- image: quay.io/strimzi/kafka@sha256:ac190141120c1800cc7131d3a1f701e64efdcd4a5d87f0b2e0e2cadfdef8b438
  name: strimzi-kafka-311
- image: quay.io/strimzi/kaniko-executor@sha256:544c4987f7f3ca558b04e9ef4357be204f088212b7b5b9ed0f909401a8bc5238
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:0c096a59faf8fd224298c01415a895043db4647534c060cb7e53207e9448bf65
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:afde94c6d2544207cb7f3c94b54455643558a9d5daaa13b9f736cc8da20e319c
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:06f673e3353ac4c704bf07b9f9bfd390e6c2a34f5c3af6f96089ecbc8feed084
name: strimzi-cluster-operator.v0.30.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.30.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.2.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.2"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.2.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.2.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.2.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:587db6f4389f56209f48853beedbfe249f6d590a4cb0000be2c42b57e43c2adb
      createdAt: "2022-07-16 00:00:10"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy", "proxy-aware"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: "Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org)
      cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/)
      in various deployment configurations. See our [website](https://strimzi.io)
      for more details about the project.\n### CRD Upgrades\n**!!! IMPORTANT !!!**
      \ This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.
      \ If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed
      for all Strimzi CRDs and CRs before the upgrade to 0.30 is done!  If upgrading
      from Strimzi version earlier than 0.22, you need to first install the CRDs from
      Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and
      CRs before the upgrade to 0.30 is done!  For more details about the CRD upgrades,
      see the documentation.\n### New in 0.30.0\n* The `UseStrimziPodSets` feature
      gate moves to beta stage. By default, StrimziPodSets are used instead of StatefulSets.
      If needed, `UseStrimziPodSets` can be disabled in the feature gates configuration
      in the Cluster Operator.\n* The `ServiceAccountPatching` feature gate moves
      to GA. It cannot be disabled anymore and will be permanently enabled.\n* Remove
      support for Kafka 3.0.0 and 3.0.1\n* Add support for `simple` authorization
      and for the User Operator to the experimental `UseKRaft` feature gate. _(Note:
      Due to [KAFKA-13909](https://issues.apache.org/jira/browse/KAFKA-13909), broker
      restarts currently don't work when authorization is enabled.)_\n* Add CPU and
      network capacity overrides for Cruise Control capacity config\n* Use better
      encryption and digest algorithms when creating the PKCS12 stores. For existing
      clusters, the certificates will not be updated during upgrade but only next
      time the PKCS12 store is created. \n* Operator emits Kafka events to explain
      why it restarted a Kafka broker\n* Better configurability of the Kafka Admin
      client in the User Operator\n* Update Strimzi Kafka Bridge to 0.21.6\n### Supported
      Features\n* **Manages the Kafka Cluster** - Deploys and manages all of the components
      of this complex application, including dependencies like Apache ZooKeeper® that
      are traditionally hard to administer.\n* **Includes Kafka Connect** - Allows
      for configuration of common data sources and sinks to move data into and out
      of the Kafka cluster.\n* **Topic Management** - Creates and manages Kafka Topics
      within the cluster.\n* **User Management** - Creates and manages Kafka Users
      within the cluster.\n* **Connector Management** - Creates and manages Kafka
      Connect connectors.\n* **Includes Kafka Mirror Maker 1 and 2** - Allows for
      mirroring data between different Apache Kafka® clusters.\n* **Includes HTTP
      Kafka Bridge** - Allows clients to send and receive messages through an Apache
      Kafka® cluster via HTTP protocol.\n* **Cluster Rebalancing** - Uses built-in
      Cruise Control for redistributing partition replicas according to specified
      goals in order to achieve the best cluster performance.\n* **Monitoring** -
      Built-in support for monitoring using Prometheus and provided Grafana dashboards\n###
      Upgrading your Clusters\nThe Strimzi Operator understands how to run and upgrade
      between a set of Kafka versions. When specifying a new version in your config,
      check to make sure you aren't using any features that may have been removed.
      See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str)
      for more information.\n### Storage\nAn efficient data storage infrastructure
      is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed
      via Strimzi requires block storage. The use of file storage (for example, NFS)
      is not recommended.\nThe Strimzi Operator supports three types of data storage:\n*
      Ephemeral (Recommended for development only!)\n* Persistent\n* JBOD (Just a
      Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)\nStrimzi
      also supports advanced operations such as adding or removing disks in Apache
      Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).\n###
      Documentation\nDocumentation to the current _main_ branch as well as all releases
      can be found on our [website](https://strimzi.io/documentation).\n### Getting
      help\nIf you encounter any issues while using Strimzi, you can get help using:\n*
      [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n*
      [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
      Contributing\nYou can contribute by:\n* Raising any issues you find using Strimzi\n*
      Fixing issues by opening Pull Requests\n* Improving documentation\n* Talking
      about Strimzi\nAll bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues).
      Issues which  might be a good start for new contributors are marked with [\"good-start\"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start)
      label.\nThe [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md)
      describes how to build Strimzi and how to  test your changes before submitting
      a patch or opening a PR.\nThe [Documentation Contributor Guide](https://strimzi.io/contributing/guide/)
      describes how to contribute to Strimzi documentation.\nIf you want to get in
      touch with us first before contributing, you can use:\n* [Strimzi mailing list
      on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)\n* [Strimzi Slack
      channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)\n###
      License\nStrimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).\n"
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:06f673e3353ac4c704bf07b9f9bfd390e6c2a34f5c3af6f96089ecbc8feed084
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:de1ca88b713b926b72df535aca2cfad24fb1b2bf40481065d6fa0c421b872320
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:77fc68da171c74d3a4b75b1030eaaa5eae12e200002f7aa2ee1969385eba1d66
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:5d881605425ab0b37d0b9cac6957d00ba904df0db185ca6181c810151bdab8e7
  name: strimzi-kafka-320
- image: quay.io/strimzi/kafka@sha256:68d6f4cb5cc5ccad44de799bd9cf417c469a09e1024dbe42298942f25a09e004
  name: strimzi-kafka-310
- image: quay.io/strimzi/kafka@sha256:d9258ddd453c3a53ca8e737b989d27725818da95f7a4fc879c9f07fe743c0cef
  name: strimzi-kafka-311
- image: quay.io/strimzi/kaniko-executor@sha256:544c4987f7f3ca558b04e9ef4357be204f088212b7b5b9ed0f909401a8bc5238
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:f2cb45234f3a7a010824a370d03032b706271cd0d1d260da929f046f9259d7e0
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:587db6f4389f56209f48853beedbfe249f6d590a4cb0000be2c42b57e43c2adb
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:47ae2c103bb7b2b665039a0ca7b28693ae84a08625d3ac4c4afcb7862dc06dff
name: strimzi-cluster-operator.v0.31.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.31.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:47ae2c103bb7b2b665039a0ca7b28693ae84a08625d3ac4c4afcb7862dc06dff
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:1b9ce4a0088723dc3c389ef2f59965d63dcadf84bb6a9802a0840a7755a0bb5e
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:f0dd1518bfb464c94e49ae80216eebad82a124cd11dfc4c1dc8d66c3716d4aeb
  name: ""
- image: quay.io/strimzi/kafka@sha256:b09840964ebfaaf051f8263a9f7e16b73ba86821aa040fd06c6750d69a1bc0dd
  name: ""
- image: quay.io/strimzi/kafka@sha256:bb0a62beb71881103548619fe437e3cd75ac24d6c398121d864d03fd19ad0268
  name: ""
- image: quay.io/strimzi/kafka@sha256:bb0d0a562b8eb6f2c9fd22090d2b8beefa70b3d92a3346e87c2f89a24f1decb6
  name: ""
- image: quay.io/strimzi/kafka@sha256:c877796e3a4ae3821787155e891b29b65cf85b72488f2daeefe2ab3b3db72ccf
  name: ""
- image: quay.io/strimzi/kaniko-executor@sha256:06581fb615f0b13ddfe27fae26ba5836b12c6e28afd55a81cba7685c9ca4bf79
  name: ""
- image: quay.io/strimzi/maven-builder@sha256:b4c3263131056efe7478a820a2391eee2e40981e2c35af27bcc9a25418078e32
  name: ""
- image: quay.io/strimzi/operator@sha256:40187016f0491be1a5aaacb96842ae2e715ea5b97848100a137deac564a61ca5
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:5f5db27932d29ecd9ef8905ee3658f1e8f90c3d8f67c292ee57412734aa90e97
name: strimzi-cluster-operator.v0.31.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.31.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.2.3",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.2"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.2.3",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.2.3",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.2.3",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:6e5e207c70c25c595d3ce60268c0214c7518e95836c9b1212ef1eb2f008c7a76
      createdAt: "2022-09-20 21:07:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy", "proxy-aware"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      **This is the last version of Strimzi with support for Kubernetes 1.16, 1.17 and 1.18!**
      ### CRD Upgrades
      **!!! IMPORTANT !!!**  This release supports only the API version `v1beta2` and CRD version `apiextensions.k8s.io/v1`.  If upgrading from Strimzi 0.22, migration to `v1beta2` needs to be completed for all Strimzi CRDs and CRs before the upgrade to 0.31 is done!  If upgrading from Strimzi version earlier than 0.22, you need to first install the CRDs from Strimzi 0.22 and complete the migration to `v1beta2` for all Strimzi CRDs and CRs before the upgrade to 0.31 is done!  For more details about the CRD upgrades, see the documentation.
      ### New in 0.31.1
      * Kafka 3.1.2 and 3.2.3 (fixes CVE-2022-34917)
      * Make `sasl.server.max.receive.size` broker option user configurable
      * Update Strimzi Kafka Bridge to 0.22.1
      ### New in 0.31.0
      * Support for Apache Kafka 3.2.1
      * Pluggable Pod Security Profiles with built-in support for _restricted_ Kubernetes Security Profile
      * Support for leader election and running multiple operator replicas (1 active leader replicas and one or more stand-by replicas)
      * Support for IPv6 addresses being used in Strimzi issued certificates
      * `StrimziPodSet` reconciliation metrics
      * Updated Strimzi Kafka Bridge to 0.22.0 and Kafka Exporter to 1.6.0
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.16.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:5f5db27932d29ecd9ef8905ee3658f1e8f90c3d8f67c292ee57412734aa90e97
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:52dd107062d78c29bb58c905ac654c39df72bbe3c25613023aa33e834930606d
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:3ddac62a4f8c8a3ebb72d5841d3826f7fd3fbb0e00eb75fb40bced0a576b86a9
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:03cc48bc5cf367f898338665b253855bed7d6096fe577adfe344da2f2cddcfe4
  name: strimzi-kafka-323
- image: quay.io/strimzi/kafka@sha256:430b3eb70e47a91d7b5b6f230d5be024c2de853099cc0437e219b443e0ead9f5
  name: strimzi-kafka-320
- image: quay.io/strimzi/kafka@sha256:652924a1dba46aa716caba8381f1e791c09035e31ce62fdcc81f9b69af36cd02
  name: strimzi-kafka-321
- image: quay.io/strimzi/kafka@sha256:83acc1e2cc1e64a88bdbb54b9818a6ad3658c3da60e72c4be365f824c5fcf57c
  name: strimzi-kafka-312
- image: quay.io/strimzi/kafka@sha256:9553aae22d35448681cbbf7a831a28149fb159f3df58ccf8c8ec4ca7eb9c1fdf
  name: strimzi-kafka-310
- image: quay.io/strimzi/kafka@sha256:b7c059bd72d8b063a96dde788d91d1ad87498bad3e73acba600929d595aeb7d6
  name: strimzi-kafka-311
- image: quay.io/strimzi/kaniko-executor@sha256:06581fb615f0b13ddfe27fae26ba5836b12c6e28afd55a81cba7685c9ca4bf79
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:670ca70900f2229ef140a592b77f2107934601f8b050b79250eab17ff62099b6
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:6e5e207c70c25c595d3ce60268c0214c7518e95836c9b1212ef1eb2f008c7a76
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:0d4ac0ed10d815b30dca6521d3ceab5dfc150cddda22e9ca83e97462dbcfeff4
name: strimzi-cluster-operator.v0.32.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.32.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.3.1",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.3"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.3.1",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.3.1",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.3.1",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
      createdAt: "2022-10-31 17:05:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["Disconnected", "Proxy", "proxy-aware"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.

      **From the 0.32.0 release, Strimzi supports only Kubernetes 1.19 and newer! Kubernetes 1.16, 1.17 and 1.18 are not supported anymore.**
      ### Upgrades
      **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.32.0/deploying.html#assembly-upgrade-str).
      ### New in 0.32.0
      * Add support for Kafka 3.3.1 and remove support for Kafka 3.1.0, 3.1.1, and 3.1.2
      * Update KafkaConnector CR status so the 'NotReady' condition is added if the connector or any tasks are reporting a 'FAILED' state.
      * Add auto-approval mechanism on KafkaRebalance resource when an optimization proposal is ready
      * The ControlPlaneListener feature gate moves to GA
      * Add client rack-awareness support to Strimzi Bridge pods
      * Add support for OpenTelemetry for distributed tracing
      * ZookeeperRoller considers unready pods
      * Support multiple operations per ACLRule
      * Add new listener type "cluster-ip" which is using per-broker services instead of the pod DNS names
      * Update Strimzi OAuth library to 0.11.0
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.19.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:0d4ac0ed10d815b30dca6521d3ceab5dfc150cddda22e9ca83e97462dbcfeff4
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:208928133b2854f60bb34912e07561a3511de895b815960e73d565be2d553918
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:aad0cee4381cc1c8c6638ab5732b135acd271b5889486ca9a33312cce67e4a02
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:4bacf5b54041bd0ab9199c8c5d51e8058758139db4b7abc380cf0400737716ef
  name: strimzi-kafka-323
- image: quay.io/strimzi/kafka@sha256:680ae1958dbcb9da8ee4128a67c1163a6ee2744221f7d29f73d8bcc237fd0173
  name: strimzi-kafka-331
- image: quay.io/strimzi/kafka@sha256:8c9f38b45dd814e617c9c51cc90fd51e23d7dd23e8efe7e9eff013522bd6a5a0
  name: strimzi-kafka-321
- image: quay.io/strimzi/kafka@sha256:bb97008b7f928ed98939b2008a7baf8909c88e726a59aaf607f2eeba55375cc0
  name: strimzi-kafka-320
- image: quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:593e9980b786ca8ad3223151c3e17f16c7652ee0e86d722af4c34b023038ecc2
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:c5e0e5dca7503a8371b8d366db0f49e3fc68f62ea480262e39b6cc277991c97c
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:57dd74160a539927501d7825bc3121f8d098a09775331f7d08801a5a92f7fef1
name: strimzi-cluster-operator.v0.33.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.33.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:57dd74160a539927501d7825bc3121f8d098a09775331f7d08801a5a92f7fef1
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:c27db1cb6ea4b433d6b502cfed9c41a902b5b4694d3ecff000eda77312d65465
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:3a380d5f3ea509f90cdf95280d83b42f5de4f86ee3a512e02234e7639f50c9eb
  name: ""
- image: quay.io/strimzi/kafka@sha256:4f0e4c363d5074af0bf1ed7dd0dcd69269503e554424de14c72d2c9e3a77bda3
  name: ""
- image: quay.io/strimzi/kafka@sha256:5a76f5216db2a017c2ba33a84be2317612664f8ca655a977d60c58150005bcbe
  name: ""
- image: quay.io/strimzi/kafka@sha256:8ae6166cb981730364ee77f8e724d2ea9be85f332b664329cde674a4c8bb6e86
  name: ""
- image: quay.io/strimzi/kafka@sha256:b19d6de71954adc59fbb95b40699dcaea0ef8c977c9777dc40dfa3044dc4a926
  name: ""
- image: quay.io/strimzi/kafka@sha256:d093816368c708967b97cb53616c5c245f4e6a76503d40cedd0a2f0baaa548ab
  name: ""
- image: quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27
  name: ""
- image: quay.io/strimzi/maven-builder@sha256:a17828bcef4c787d1cad3fc1b3abf11c64e4e22482a97380a2a2170dc6f8f6d1
  name: ""
- image: quay.io/strimzi/operator@sha256:8dbb8c2611400433287cab55999f98dfb1fb3ce0c71ac37bdf9670840a67d0a7
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:4d09a47bec740965f9a73ff966559754126c4c0c7635e1f3da777408016b879a
name: strimzi-cluster-operator.v0.33.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.33.1
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:4d09a47bec740965f9a73ff966559754126c4c0c7635e1f3da777408016b879a
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:4add253bf7f1c7c70423862220b87c5d734a16029cd60f70d959ae38e68e6836
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:3a380d5f3ea509f90cdf95280d83b42f5de4f86ee3a512e02234e7639f50c9eb
  name: ""
- image: quay.io/strimzi/kafka@sha256:0165be8e61de3981874c6300c693ab231baf4ddae9ae9b4c8a79bd21433abe8c
  name: ""
- image: quay.io/strimzi/kafka@sha256:2ff945530df1deab54ae77896e2124271543537920678cb9fdc17f5572db87c9
  name: ""
- image: quay.io/strimzi/kafka@sha256:3fab661b30eb15371cb6cc785fa6894e29daf1cacf20ce07c3a4648587736215
  name: ""
- image: quay.io/strimzi/kafka@sha256:5e1009de1037f0cfb50a6441d3142bdb32216f8f5c9ed8fd24573885b7cdbfb6
  name: ""
- image: quay.io/strimzi/kafka@sha256:620f8f517a34ae60e8221002ca53a11874638ca98097c37ec445c8c7bc5e782e
  name: ""
- image: quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27
  name: ""
- image: quay.io/strimzi/maven-builder@sha256:4b64501c6902533a9a44ac0ccedff3deb7e39124253917bd78ff92cb5a685aec
  name: ""
- image: quay.io/strimzi/operator@sha256:b4e8e36656b9547c963a311b23cb3575d43dcd37eb4a9c03ab827aacdaa18189
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:4d953d5fd719ea61a7009daaa7e37c948073132f231c2d2d1b07bf3d0d5d6e3b
name: strimzi-cluster-operator.v0.33.2
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.33.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.4.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.4"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.4.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.4.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.4.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:cf0d41fdb99b20e91063e23eb1d664817c18866c9a2f5c4430eac897e78d5d53
      createdAt: "2023-02-18 21:21:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["disconnected", "Proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.

      **Strimzi 0.33 supports only Kubernetes 1.19 and newer! Kubernetes versions 1.16, 1.17 and 1.18 are not supported anymore since Strimzi 0.32.**
      ### Upgrades
      **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.33.2/deploying.html#assembly-upgrade-str).
      ### New in 0.33
      _Note: Strimzi 0.33.2 add support for Kafka 3.4.0 which fixes CVE-2023-25194._
      * Add support for Kafka 3.3.2
      * Automatic restarts of failed Connect or Mirror Maker 2 connectors
      * Redesign of Strimzi User Operator to improve its scalability
      * Move to Java 17
      * Improved FIPS support
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.19.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:4d953d5fd719ea61a7009daaa7e37c948073132f231c2d2d1b07bf3d0d5d6e3b
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:5ebdafa7a5e3718ed3274d6254c9e655613c272340094b997b1c97fde2598b4a
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:3a380d5f3ea509f90cdf95280d83b42f5de4f86ee3a512e02234e7639f50c9eb
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:116cf543fbadadd0b45007ce24d44a0c79a62280e8faa1fc80df40291fbdf05d
  name: strimzi-kafka-320
- image: quay.io/strimzi/kafka@sha256:301dc52ed5891ed4fa33e79ca3c344b1ac0eec7469dd46a5a7ac22064e053fc2
  name: strimzi-kafka-323
- image: quay.io/strimzi/kafka@sha256:30945aecb9d63cf8863c672222f130469c89aefa07078c95aaed52c40fd16146
  name: strimzi-kafka-332
- image: quay.io/strimzi/kafka@sha256:40a847f8455ec6ea9ff9fe1fff20b1ed01f848326dc13977d13ac911f0cb40b7
  name: strimzi-kafka-340
- image: quay.io/strimzi/kafka@sha256:9eca149cfc436580e3cdd6cee0ca318366b8d0ec53c2cf007e4e2c614b988921
  name: strimzi-kafka-331
- image: quay.io/strimzi/kafka@sha256:fe9d3f8b029ff32d5d725e57384592914957314d63e92fda3abf4028fe4e66f6
  name: strimzi-kafka-321
- image: quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:de9e51365e7acc63feae745618804e6286fd730f41c3b31582cbb7319a93b483
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:cf0d41fdb99b20e91063e23eb1d664817c18866c9a2f5c4430eac897e78d5d53
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:42a3dce711492fae22f2d919299a0594f152396f6c2fef65ffc47226ba9c786e
name: strimzi-cluster-operator.v0.34.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.34.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.4.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.4"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.4.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.4.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operation":"Read",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Write",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Create",
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operation":"Describe",
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.4.0",
              "replicas": 1,
              "connectCluster": "my-cluster-target",
              "clusters": [
                {
                  "alias": "my-cluster-source",
                  "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
                },
                {
                  "alias": "my-cluster-target",
                  "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "my-cluster-source",
                  "targetCluster": "my-cluster-target",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "heartbeatConnector": {
                    "config": {
                      "heartbeats.topic.replication.factor": 1
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:f4ee3ca482a2dd19785f59634578a0850273444c1173a5699a99cf02f3a018fe
      createdAt: "2023-03-17 13:02:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["disconnected", "Proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.

      **Strimzi 0.34 supports only Kubernetes 1.19 and newer! Kubernetes versions 1.16, 1.17 and 1.18 are not supported anymore since Strimzi 0.32.**
      ### Upgrades
      **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.34.0/deploying.html#assembly-upgrade-str).
      ### New in 0.34
      * Add support for Apache Kafka 3.4.0 (fixes CVE-2023-25194) and remove support for Apache Kafka 3.2.x
      * Stable Pod identities for Kafka Connect and MirrorMaker 2 (disabled by default)
      * Use JDK HTTP client in the Kubernetes client instead of the OkHttp client
      * Add truststore configuration for HTTPS connections to Open Policy Agent server
      * Update Strimzi HTTP Bridge to 0.25.0 and strimzi Oauth to 0.12.0
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.19.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:42a3dce711492fae22f2d919299a0594f152396f6c2fef65ffc47226ba9c786e
  name: ""
- image: quay.io/strimzi/jmxtrans@sha256:62272e8a03da2144340bd7267f7a824d1ed70f4f3e30dc7aadfba9ee1b9baf76
  name: strimzi-jmxtrans
- image: quay.io/strimzi/kafka-bridge@sha256:51babca0f7a328f4db005c6a16daa8ac4a4306c46fe3ca89382919134aa09179
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:1ace2cc0db9653ac1b388477fa56c3c1cd97c7b3846eba3c7824dc58ea179476
  name: strimzi-kafka-332
- image: quay.io/strimzi/kafka@sha256:1da35fd7b36b113d1343e254fdc6efd97ca8660cc7977d8985aa3a3547d5ebb1
  name: strimzi-kafka-331
- image: quay.io/strimzi/kafka@sha256:37cf8d0fea1d2078511920190a72b49977ff4047b6ecbfed6b394c6f9e1e2ff0
  name: strimzi-kafka-340
- image: quay.io/strimzi/kaniko-executor@sha256:dc27d8aeb851245c79fb7276febe98769cc098d678bea096b338caaaf111dd27
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:f781b6b857d437c2de62585462e97b9fae357912c9f6711c1df39f431278878d
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:f4ee3ca482a2dd19785f59634578a0850273444c1173a5699a99cf02f3a018fe
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:fd0ad5a0f66939a1410173698cb284797580e36d1298dbc1d3f5fadbf6f22f03
name: strimzi-cluster-operator.v0.35.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.35.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:fd0ad5a0f66939a1410173698cb284797580e36d1298dbc1d3f5fadbf6f22f03
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:d6be183e492f8f88157ab9fe0af53950df8b6711a8a8c33da465de6064f6f86e
  name: ""
- image: quay.io/strimzi/kafka@sha256:2249dad688c10237cbaad20ad5575561ac844429acba2a85cd526f11ee6707c6
  name: ""
- image: quay.io/strimzi/kafka@sha256:56e2fc1c2a4c8aaa517478f228ab9ea81c9a8f990b86bac2c0896338e3f4656c
  name: ""
- image: quay.io/strimzi/kafka@sha256:cab70fa2bb9b731209ed1c4829e1e8a6ac37bff62b6443b79c9ec744b02c9256
  name: ""
- image: quay.io/strimzi/kaniko-executor@sha256:39778b90c2b2afc30261e4ad5135805e1a10a2b60e2e53108fb9f80487f1208a
  name: ""
- image: quay.io/strimzi/maven-builder@sha256:2ee5d1a63dc56c31f9c30755bb7564952752bcd39c45d00dfea42c09673eaa0e
  name: ""
- image: quay.io/strimzi/operator@sha256:59df996575607fc4fe348c54904b782a5691688a66c71abeca2bf127a2433180
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:fdd7b12ccc5e381c18bf237504155792203a3485dfb139af0881f9468fa7e5df
name: strimzi-cluster-operator.v0.35.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.35.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.4.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.4"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.4.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.4.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.4.0",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": 1,
                      "offset-syncs.topic.replication.factor": 1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": 1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:06a94a3021cf028ccc1a49271f35f79216029e344536e664f196c1725ff2c663
      createdAt: "2023-06-07 16:19:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: StatefulSet
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.

      **Strimzi 0.35 is the last version with support for Kubernetes 1.19 and 1.20. From Strimzi 0.36, only Kubernetes 1.21 and newer will be supported.**
      ### Upgrades
      **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.35.1/deploying.html#assembly-upgrade-str).
      ### New in 0.35
      * Move feature gate `UseStrimziPodSets` to GA and remove support for StatefulSets
      * Remove support for JMX Trans
      * Redesigned the Cluster and User Operator configuration to make it more efficient and flexible
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.19.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:fdd7b12ccc5e381c18bf237504155792203a3485dfb139af0881f9468fa7e5df
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:d6be183e492f8f88157ab9fe0af53950df8b6711a8a8c33da465de6064f6f86e
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:0d910e7138cb49e1cd8cd84cef88bce35698b93ddd683a3398f1d485a3162693
  name: strimzi-kafka-332
- image: quay.io/strimzi/kafka@sha256:4de4874a7b722ad813f4dcc58acf509527bca0609999b81e70d81e3b38534d9d
  name: strimzi-kafka-331
- image: quay.io/strimzi/kafka@sha256:54c6b25b31f51ef401c1b6e2a1b27432911e819bf3e502e05186f01be3f798e5
  name: strimzi-kafka-340
- image: quay.io/strimzi/kaniko-executor@sha256:39778b90c2b2afc30261e4ad5135805e1a10a2b60e2e53108fb9f80487f1208a
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:88a79eff3b3a386880a630658964b7754caed9e99dd6e645a4c0d23d0fdb47ee
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:06a94a3021cf028ccc1a49271f35f79216029e344536e664f196c1725ff2c663
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:ffd081890df91346c4ef18f8cb5e6e17a0ca651288381f6ed5a4db74f7585b6f
name: strimzi-cluster-operator.v0.36.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.36.0
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:ffd081890df91346c4ef18f8cb5e6e17a0ca651288381f6ed5a4db74f7585b6f
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:3c10093c460f91f39d77a301c6f66698c7c3833b0fa69262e4114e6293d50e77
  name: ""
- image: quay.io/strimzi/kafka@sha256:0241d35e31c1116d5b0b81d611a50546990703e00ebfaadbe6f5af7c2fd6a9bd
  name: ""
- image: quay.io/strimzi/kafka@sha256:03e59830d18b7816be25ca83b09542b1215b251eee281609d10fe137737ee6da
  name: ""
- image: quay.io/strimzi/kafka@sha256:85865eb4403d0e8644cd04f3dba9f9527f56f546822ce0bed370260167490951
  name: ""
- image: quay.io/strimzi/kaniko-executor@sha256:5ff9fc7d0b7b694875ad0150fc787c582d42da3b4864d807ee8a6524e47b0e4e
  name: ""
- image: quay.io/strimzi/maven-builder@sha256:78ca90e6903ec44b2d2bfbc8c73c44aa7bf7007b7659622d38e1191d28a0d037
  name: ""
- image: quay.io/strimzi/operator@sha256:e18d4a9c4b6d91ddac2207bedd792f695c054ed3692727872b36b6435cd95f7b
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:c6bc0280cc2efc50bc6b2652e56c2370da9952db0b68bc92e3cfc32cc9d5aab0
name: strimzi-cluster-operator.v0.36.1
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.36.1
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.5.1",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.5"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.5.1",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.5.1",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.4.0",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:e9e03b31007c0f9b67a6a33e6b644e8c1ba35bd9976804ee3d22a04e4bf511b1
      createdAt: "2023-07-10 21:47:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.

      **!!! IMPORTANT !!! Strimzi 0.36.1 supports only Kubernetes 1.21 and newer! Kubernetes versions 1.19 and 1.20 are not supported anymore since Strimzi 0.36.**
      ### Upgrades
      **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.35.1/deploying.html#assembly-upgrade-str).
      ### New in 0.36
      * Add support for Apache Kafka 3.4.1, 3.5.0, and 3.5.1
      * Remove support for 3.3.1 and 3.3.2
      * Add support for _Kafka node pools_
      * Add support for _Unidirectional Topic Operator_
      * Enable SCRAM-SHA authentication in KRaft mode (supported in Apache Kafka 3.5.0 and newer)
      * Add support for insecure flag in Maven artifacts in Kafka Connect Build
      * Improve Kafka rolling update to avoid rolling broker in log recovery
      * Added support for Kafka Exporter topic exclude and consumer group exclude parameters
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.21.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:c6bc0280cc2efc50bc6b2652e56c2370da9952db0b68bc92e3cfc32cc9d5aab0
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:fefee252895e9f94756ed5c9ea71749e3fa89281df01bc55878a244ca7d17697
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:67c2b563a65c85c9393608f9af7eaf12ea48dcc0ef5f726d51f27273a3845186
  name: strimzi-kafka-350
- image: quay.io/strimzi/kafka@sha256:9f35f40be3d47b0cb1f6628f7ffd9c6a687ab9f564829f341dd66fd0759c064f
  name: strimzi-kafka-341
- image: quay.io/strimzi/kafka@sha256:a0da6a48b5bcbff355365f07df2d99ef6443d22c5690495f10a6417e761b3799
  name: strimzi-kafka-340
- image: quay.io/strimzi/kafka@sha256:ea35817ff1ef295c682d70562f209ef658fcd87c61f467a4549d7a2f39e71700
  name: strimzi-kafka-351
- image: quay.io/strimzi/kaniko-executor@sha256:5ff9fc7d0b7b694875ad0150fc787c582d42da3b4864d807ee8a6524e47b0e4e
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:2a469b40122027b981914db5b5c102be48280e039c3089963422c181174af226
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:e9e03b31007c0f9b67a6a33e6b644e8c1ba35bd9976804ee3d22a04e4bf511b1
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:b461d36d7c8805e7dab9932ecfc90a1407f082fb6c8f5123ccc3c7245b37e6b8
name: strimzi-cluster-operator.v0.37.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.37.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.5.1",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.5"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.5.1",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.5.1",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.4.0",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:52f376e64b9b31d74162e26248c278e9bd301d2d8b4240ee5bcf780dfe2f8ef8
      createdAt: "2023-09-03 17:45:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### Upgrades
      **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.37.0/deploying.html#assembly-upgrade-str).
      ### New in 0.37
      * The StableConnectIdentites feature gate moves to a beta stage.
      * Support for the ppc64le platform
      * Version fields to the Kafka custom resource status to track installation and upgrade state
      * Infinite auto-restarts of Kafka Connect and Kafka Mirror Maker 2 connectors
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.21.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:b461d36d7c8805e7dab9932ecfc90a1407f082fb6c8f5123ccc3c7245b37e6b8
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:5b821f6f3396002ffa7c5804391b627ff9da3b494b2777dde518c55c2b73cefc
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:1de6e073e8625a193fcfd11dd1a6717cc17596911c10bcebd792c00b08a7ebaf
  name: strimzi-kafka-341
- image: quay.io/strimzi/kafka@sha256:2997ba1c169eb792a6004d7a41b674560515f3ea6e62ab8b9a1fdb747eab40c1
  name: strimzi-kafka-350
- image: quay.io/strimzi/kafka@sha256:38bbadcdb196a373e1698be890caa1dc01134ce91763d8f95c71768a117e1932
  name: strimzi-kafka-340
- image: quay.io/strimzi/kafka@sha256:dfeb1eb7b94107c443b6bc82fcfee7fcf782516c83c6fc64451fb6a7e2de74a6
  name: strimzi-kafka-351
- image: quay.io/strimzi/kaniko-executor@sha256:5729f1f0511da95e64e358cfabb3980ad9a660af2968118a87d6755f5d652a67
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:995be06a50b86c992fcee9f00e44f6a21c3406975e4e35802f10e88b72ffb9df
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:52f376e64b9b31d74162e26248c278e9bd301d2d8b4240ee5bcf780dfe2f8ef8
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:4e80f314b660414ec3d37c752b2e72382ec0a1e3076821192818ea9abc0a69d0
name: strimzi-cluster-operator.v0.38.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.38.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.6.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.6"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.6.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.6.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.4.0",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:aee45bbe439335e45a0423e6565bae0d0727d85c7b807812949bfa127d467fe6
      createdAt: "2023-10-14 18:18:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### Upgrades
      **!!! IMPORTANT !!!** **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.38.0/deploying.html#assembly-upgrade-str).
      ### New in 0.38
      * Add support for Apache Kafka 3.6.0 and remove support for 3.4.0 and 3.4.1
      * Container signing and SBOMs
      * Stopping Connect and MirrorMaker 2 connectors
      * Manual rolling updates of Kafka Connect and Kafka Mirror Maker 2 pods using annotation
      * Prevent scale-down of brokers that still contain any replicas
      * Run ZooKeeper- and KRaft-based clusters in parallel
      * Unidirectional Topic Operator improvements
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.21.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:4e80f314b660414ec3d37c752b2e72382ec0a1e3076821192818ea9abc0a69d0
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:13838889cc20a3a382ea64e749cad94f997c0b928840588f2d1befcf19247bea
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:0cc01438e8596643407b6b8ff05fafcea7ef54fa9410d4ae2492a9dbf41118b1
  name: strimzi-kafka-351
- image: quay.io/strimzi/kafka@sha256:20d451fb32ec82eab3c16891198ace46bb9b9193f1f5511bb60ce249080dd7d4
  name: strimzi-kafka-360
- image: quay.io/strimzi/kafka@sha256:50e24c797455f9cdbb3cdde8e4f26bb8e1f0503469456da5d179017fd3e03ffe
  name: strimzi-kafka-350
- image: quay.io/strimzi/kaniko-executor@sha256:4fe7a3f3f78e93369284a5ab456873c911230926ca071d1d88167e63d8ce376c
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:922d91dab9e2b8e14b6db25d8b48d7f4e3521bedd435468cc22039599ac4f888
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:aee45bbe439335e45a0423e6565bae0d0727d85c7b807812949bfa127d467fe6
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:63fcf9010e75445db2823c22dfdbd09f3f13715d1864bf7ddb45c74bd48b84e2
name: strimzi-cluster-operator.v0.39.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.39.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.6.1",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.6"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.6.1",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.6.1",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.6.1",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:50b49f9b5e554cca517fc2794e11319d5aaba1676494b285baa3a74fc79eb501
      createdAt: "2023-12-14 20:28:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      features.operators.openshift.io/disconnected: “true”
      features.operators.openshift.io/fips-compliant: “true”
      features.operators.openshift.io/proxy-aware: “true”
      features.operators.openshift.io/tls-profiles: “false”
      features.operators.openshift.io/token-auth-aws: “false”
      features.operators.openshift.io/token-auth-azure: “false”
      features.operators.openshift.io/token-auth-gcp: “false”
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### Upgrades
      **!!! IMPORTANT !!!**

      **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.39.0/deploying.html#assembly-upgrade-str).

      **Strimzi 0.39 is the last minor release with support for Kubernetes 1.21 and 1.22.** From Strimzi 0.40 on, only Kubernetes 1.23 and newer will be supported.
      ### New in 0.39
      * Add support for Apache Kafka 3.5.2 and 3.6.1
      * The `StableConnectIdentities` feature gate moves to GA stage and is now permanently enabled without the possibility to disable it.
        All Connect and Mirror Maker 2 operands will now use StrimziPodSets.

      * The `KafkaNodePools` feature gate moves to the beta stage and is enabled by default.
        If needed, `KafkaNodePools` can be disabled in the feature gates configuration in the Cluster Operator.

      * The `UnidirectionalTopicOperator` feature gate moves to the beta stage and is enabled by default.
        If needed, `UnidirectionalTopicOperator` can be disabled in the feature gates configuration in the Cluster Operator.

      * Improved Kafka Connect metrics and dashboard example files
      * Allow specifying and managing KRaft metadata version
      * Add support for KRaft to KRaft upgrades (Apache Kafka upgrades for the KRaft-based clusters)
      * Improved Kafka Mirror Maker 2 dashboard example file
      * Support for rolling updates of KRaft controller nodes
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.21.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:63fcf9010e75445db2823c22dfdbd09f3f13715d1864bf7ddb45c74bd48b84e2
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:13838889cc20a3a382ea64e749cad94f997c0b928840588f2d1befcf19247bea
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:2badc65532b483bba6c1f6a8b0c9895e993ce24e9ebd3cd953d0d17fbe36d27a
  name: strimzi-kafka-361
- image: quay.io/strimzi/kafka@sha256:49b7530ada1175750ad5a706e545ba3594d85e1e3a90f98b0200a73fa9875057
  name: strimzi-kafka-350
- image: quay.io/strimzi/kafka@sha256:53b960411e852f5cb182ecc5d395a3562865f83e15e6251f3a9af0eb413feeed
  name: strimzi-kafka-352
- image: quay.io/strimzi/kafka@sha256:84691b3afb67b312400e01572ff08b64c1e1b1d32a4276e0c21bba10c71c36fe
  name: strimzi-kafka-351
- image: quay.io/strimzi/kafka@sha256:dd1706f36031c96dfcd0da7b3f804168e5f076220caa302973455fdcd76bd03e
  name: strimzi-kafka-360
- image: quay.io/strimzi/kaniko-executor@sha256:723b7add2473e73c45c81361e1708af4971c321b0391c1298a0557fb8ca4f7f6
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:6ce3c16284379d5db9e42a6f3e2b765c981091164a28fdd6bf927b6c5d4ab557
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:50b49f9b5e554cca517fc2794e11319d5aaba1676494b285baa3a74fc79eb501
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:1aa9596fc619872a1d4090b4a87d6d97d1ff2a95593925f66605fdcdbe8b1165
name: strimzi-cluster-operator.v0.40.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.40.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.7.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.7"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.7.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.7.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.7.0",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:2228d89b53e3524e69d1bcf5c2cd373884ce696d9005389a6c78dad23310e837
      createdAt: "2024-03-09 21:27:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      features.operators.openshift.io/disconnected: “true”
      features.operators.openshift.io/fips-compliant: “true”
      features.operators.openshift.io/proxy-aware: “true”
      features.operators.openshift.io/tls-profiles: “false”
      features.operators.openshift.io/token-auth-aws: “false”
      features.operators.openshift.io/token-auth-azure: “false”
      features.operators.openshift.io/token-auth-gcp: “false”
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### Upgrades
      **!!! IMPORTANT !!!**

      **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.40.0/deploying.html#assembly-upgrade-str).

      **From Strimzi 0.40 on, we support only Kubernetes 1.23 and newer.** Kubernetes versions 1.21 and 1.22 are no longer supported.
      ### New in 0.40
      * Add support for Apache Kafka 3.7.0. Remove support for Apache Kafka 3.5.0, 3.5.1, and 3.5.2.
      * The `UseKRaft` feature gate moves to beta stage and is enabled by default. If needed, `UseKRaft` can be disabled in the feature gates configuration in the Cluster Operator.
      * Add support for ZooKeeper to KRaft migration by enabling the users to move from using ZooKeeper to store metadata to KRaft.
      * Add support for moving from dedicated controller-only KRaft nodes to mixed KRaft nodes
      * Added support for Kafka Exporter `offset.show-all` parameter
      * Prevent removal of the `broker` process role from KRaft mixed-nodes that have assigned partition-replicas
      * Improve broker scale-down prevention to continue in reconciliation when scale-down cannot be executed
      * Added support for Tiered Storage by enabling the configuration of custom storage plugins through the Kafka custom resource.
      * Update HTTP bridge to the latest 0.28.0 release
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Supports KRaft** - You can run your Apache Kafka clusters without Aapche ZooKeeper.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.23.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:1aa9596fc619872a1d4090b4a87d6d97d1ff2a95593925f66605fdcdbe8b1165
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:73deb1af0d93e9fa8955a5a412d0e7138384bdc80e7574e815d21796e446b636
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:2c143eb10b66037ef877311eb767457e4b877d5ff2c47d393c76babec155caff
  name: strimzi-kafka-360
- image: quay.io/strimzi/kafka@sha256:c491a95f9b9b58f406461faf222ef612ad8d2f4d7b53f7f3645b20c99d7d1583
  name: strimzi-kafka-370
- image: quay.io/strimzi/kafka@sha256:e2b9f2835498831bbf30ac2d651de143d57088bcb23943101b066e941db92aca
  name: strimzi-kafka-361
- image: quay.io/strimzi/kaniko-executor@sha256:3fb4ace22589fcf8d3f01b74c37b10b32d87e15d103ea59e0933b61c4e46ff4a
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:d02a9b48c77a44eeab6426c9af4adf75405217994bcb01ce0196e616041350d8
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:2228d89b53e3524e69d1bcf5c2cd373884ce696d9005389a6c78dad23310e837
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:c6143b49717213d51ccae2f0e59f04d381a5bc74df58bf16a36968f00568872b
name: strimzi-cluster-operator.v0.41.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.41.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.7.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.7"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.7.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "certificate":"ca.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.7.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.7.0",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:4c687a4fac96ffc22433ca6d00fb1bd31722767b44c9d87c465f95b57fb70089
      createdAt: "2024-05-09 22:23:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      features.operators.openshift.io/disconnected: “true”
      features.operators.openshift.io/fips-compliant: “true”
      features.operators.openshift.io/proxy-aware: “true”
      features.operators.openshift.io/tls-profiles: “false”
      features.operators.openshift.io/token-auth-aws: “false”
      features.operators.openshift.io/token-auth-azure: “false”
      features.operators.openshift.io/token-auth-gcp: “false”
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on  [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### Upgrades
      **!!! IMPORTANT !!!**

      **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!**  You have to upgrade first to one of the previous versions of Strimzi.  You will also need to convert the CRD resources.  For more details, see the [documentation](https://strimzi.io/docs/operators/0.41.0/deploying.html#assembly-upgrade-str).

      **Strimzi 0.41 supports only Kubernetes 1.23 and newer.** Kubernetes versions 1.21 and 1.22 are no longer supported.
      ### New in 0.41
      * Support for Apache Kafka 3.6.2
      * Metrics to monitor CA expiration
      * Support for JBOD storage in KRaft mode. (Note: JBOD support in KRaft mode is considered early access in Apache Kafka 3.7.x)
      * Support for changing topic replication factor by changing the `KafkaTopic` resources.
      * The `KafkaNodePools` feature gate moves to GA stage and is permanently enabled without the possibility to disable it. To use the Kafka Node Pool resources, you still need to use the `strimzi.io/node-pools: enabled` annotation on the `Kafka` custom resources.
      * Support for configuring the `externalIPs` field in node port type services.
      * The `UnidirectionalTopicOperator` feature gate moves to GA stage and is permanently enabled without the possibility to disable it. If the topics whose names start with `strimzi-store-topic` and `strimzi-topic-operator` still exist, you can delete them.
      * Improve validation of `KafkaMirrorMaker2` resource to make sure the Connect cluster is set to the target cluster
      * Continue reconciliation after failed manual rolling update using the `strimzi.io/manual-rolling-update` annotation (when the `ContinueReconciliationOnManualRollingUpdateFailure` feature gate is enabled)
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Supports KRaft** - You can run your Apache Kafka clusters without Aapche ZooKeeper.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which  might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to  test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.23.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:c6143b49717213d51ccae2f0e59f04d381a5bc74df58bf16a36968f00568872b
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:c833f930ead2d1e9054912a20689ee979d335f5e5ca8769e3c6b8a5514a0df96
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:41811bb106d6182978a889eaedffeadffaa5ab1599c4cd8e4f5015b131c7ac30
  name: strimzi-kafka-362
- image: quay.io/strimzi/kafka@sha256:6243d98890c665ef65b5f5fa2ffd046412281ffef31bc7a07cac37bd77b2579d
  name: strimzi-kafka-370
- image: quay.io/strimzi/kafka@sha256:bf49499980bbe5d4dd399de0dd396089b0fd9dd29bc46e14d39b20f1e826aec1
  name: strimzi-kafka-361
- image: quay.io/strimzi/kafka@sha256:c3a346235ce4dea42986648ca07f2482d8fc0bf654c1d441b1301a23999304db
  name: strimzi-kafka-360
- image: quay.io/strimzi/kaniko-executor@sha256:9404037bd5431b012c8c633ec3345907667453c5532e5bfaaedc78286de22c62
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:17f09b07fc41a059e6a048cb766046d43a072cfd3a8266c97388a37543dadee8
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:4c687a4fac96ffc22433ca6d00fb1bd31722767b44c9d87c465f95b57fb70089
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:91a14b8459819d294c9ec74326472718d9d670b3c9a9824a8e537eacf7cbf89e
name: strimzi-cluster-operator.v0.42.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.42.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.7.1",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.7"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.7.1",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "pattern":"*.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.7.1",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.7.1",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:ca5c1b70e1196deec4bf519921bfa55a967aa1ea15bd4c182bc56bea08d2e114
      createdAt: "2024-07-03 12:34:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      features.operators.openshift.io/disconnected: “true”
      features.operators.openshift.io/fips-compliant: “true”
      features.operators.openshift.io/proxy-aware: “true”
      features.operators.openshift.io/tls-profiles: “false”
      features.operators.openshift.io/token-auth-aws: “false”
      features.operators.openshift.io/token-auth-azure: “false”
      features.operators.openshift.io/token-auth-gcp: “false”
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### Upgrades
      **!!! IMPORTANT !!!**

      **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!** You have to upgrade first to one of the previous versions of Strimzi. You will also need to convert the CRD resources. For more details, see the [documentation](https://strimzi.io/docs/operators/0.42.0/deploying.html#assembly-upgrade-str).

      **From version 0.40.0, Strimzi supports only Kubernetes 1.23 and newer.** Kubernetes versions 1.21 and 1.22 are no longer supported.
      ### New in 0.42
      * Support for Apache Kafka 3.7.1
      * The UseKRaft feature gate moves to GA stage and is permanently enabled without the possibility of disabling it. To use KRaft (ZooKeeper-less Apache Kafka), you still need to use the strimzi.io/kraft: enabled annotation on the Kafka custom resources or migrate from an existing ZooKeeper-based cluster.
      * Update the base image used by Strimzi containers from UBI8 to UBI9
      * Add support for filename patterns when configuring trusted certificates
      * Enhance KafkaBridge resource with consumer inactivity timeout and HTTP consumer/producer enablement.
      * Add support for setting publishNotReadyAddresses on services for listener types other than internal.
      * Added support for configuring the quotas plugin with type strimzi or kafka in the Kafka custom resource. The Strimzi Quotas plugin version was updated to 0.3.1.
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Supports KRaft** - You can run your Apache Kafka clusters without Aapche ZooKeeper.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.23.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:91a14b8459819d294c9ec74326472718d9d670b3c9a9824a8e537eacf7cbf89e
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:fdddffb3de59ba48c05964bb0e760593088d24d1ee35b090112fe6cc6b553cd8
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:6527c426f753521c07f3a3df2ee432273a41b109594096b4c6cae2e8e609d669
  name: strimzi-kafka-361
- image: quay.io/strimzi/kafka@sha256:6c519531cdd5f40f326b295d8827344140efe2607a1826f7f1cab8c3427f43f7
  name: strimzi-kafka-371
- image: quay.io/strimzi/kafka@sha256:841a46e9c10481df3ef702412caf362b55ae07c30a3a5927073356cd36dc049f
  name: strimzi-kafka-362
- image: quay.io/strimzi/kafka@sha256:bc49c10b3e839e161e515c3a1e411d1f8df9de5e2c8d71aa7b63ccdbbae9e8d2
  name: strimzi-kafka-370
- image: quay.io/strimzi/kafka@sha256:c56c5abf94897f20f976603cba0678a33cdfbbcd6f9030a193f7684cb9894a6c
  name: strimzi-kafka-360
- image: quay.io/strimzi/kaniko-executor@sha256:11821b0078a270612f1bcc37f5dc716ab273c974648c40f95fa4804352e647a7
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:342e8d0086c53cf7334127798e5bd3764b28f5e4909ba67d65f6d937dc3dba05
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:ca5c1b70e1196deec4bf519921bfa55a967aa1ea15bd4c182bc56bea08d2e114
  name: strimzi-cluster-operator
schema: olm.bundle
---
image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:ba574bdcceb2f8c20d61506e2905b8545048f8c236179e11e253ef365a552d19
name: strimzi-cluster-operator.v0.43.0
package: strimzi-kafka-operator
properties:
- type: olm.gvk
  value:
    group: core.strimzi.io
    kind: StrimziPodSet
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: Kafka
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaBridge
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnect
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaConnector
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaMirrorMaker2
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaNodePool
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaRebalance
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaTopic
    version: v1beta2
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1alpha1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta1
- type: olm.gvk
  value:
    group: kafka.strimzi.io
    kind: KafkaUser
    version: v1beta2
- type: olm.package
  value:
    packageName: strimzi-kafka-operator
    version: 0.43.0
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"Kafka",
            "metadata":{
              "name":"my-cluster"
            },
            "spec":{
              "kafka":{
                  "version":"3.8.0",
                  "replicas":3,
                  "listeners": [
                    {
                      "name": "plain",
                      "port": 9092,
                      "type": "internal",
                      "tls": false
                    },
                    {
                      "name": "tls",
                      "port": 9093,
                      "type": "internal",
                      "tls": true
                    }
                  ],
                  "config":{
                    "offsets.topic.replication.factor":3,
                    "transaction.state.log.replication.factor":3,
                    "transaction.state.log.min.isr":2,
                    "default.replication.factor":3,
                    "min.insync.replicas":2,
                    "inter.broker.protocol.version":"3.8"
                  },
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "zookeeper":{
                  "replicas":3,
                  "storage":{
                    "type":"ephemeral"
                  }
              },
              "entityOperator":{
                  "topicOperator":{
                    },
                  "userOperator":{
                    }
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaConnect",
            "metadata":{
              "name":"my-connect-cluster"
            },
            "spec":{
              "version":"3.8.0",
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
              "tls":{
                  "trustedCertificates":[
                    {
                        "secretName":"my-cluster-cluster-ca-cert",
                        "pattern":"*.crt"
                    }
                  ]
              },
              "config": {
                  "group.id": "connect-cluster",
                  "offset.storage.topic": "connect-cluster-offsets",
                  "config.storage.topic": "connect-cluster-configs",
                  "status.storage.topic": "connect-cluster-status",
                  "config.storage.replication.factor": -1,
                  "offset.storage.replication.factor": -1,
                  "status.storage.replication.factor": -1
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaMirrorMaker",
            "metadata":{
              "name":"my-mirror-maker"
            },
            "spec":{
              "version":"3.8.0",
              "replicas":1,
              "consumer":{
                  "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                  "groupId":"my-source-group-id"
              },
              "producer":{
                  "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
              },
              "include":".*"
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaBridge",
            "metadata":{
              "name":"my-bridge"
            },
            "spec":{
              "replicas":1,
              "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
              "http":{
                  "port":8080
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaTopic",
            "metadata":{
              "name":"my-topic",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "partitions":10,
              "replicas":3,
              "config":{
                  "retention.ms":604800000,
                  "segment.bytes":1073741824
              }
            }
          },
          {
            "apiVersion":"kafka.strimzi.io/v1beta2",
            "kind":"KafkaUser",
            "metadata":{
              "name":"my-user",
              "labels":{
                  "strimzi.io/cluster":"my-cluster"
              }
            },
            "spec":{
              "authentication":{
                  "type":"tls"
              },
              "authorization":{
                  "type":"simple",
                  "acls":[
                    {
                        "resource":{
                          "type":"topic",
                          "name":"my-topic",
                          "patternType":"literal"
                        },
                        "operations":["Read", "Describe", "Write", "Create"],
                        "host":"*"
                    },
                    {
                        "resource":{
                          "type":"group",
                          "name":"my-group",
                          "patternType":"literal"
                        },
                        "operations":["Read"],
                        "host":"*"
                    }
                  ]
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaConnector",
            "metadata": {
              "name": "my-source-connector",
              "labels": {
                "strimzi.io/cluster": "my-connect-cluster"
              }
            },
            "spec": {
              "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
              "tasksMax": 1,
              "config": {
                "file": "/opt/kafka/LICENSE",
                "topic": "my-topic"
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaMirrorMaker2",
            "metadata": {
              "name": "my-mm2-cluster"
            },
            "spec": {
              "version":"3.8.0",
              "replicas": 1,
              "connectCluster": "cluster-b",
              "clusters": [
                {
                  "alias": "cluster-a",
                  "bootstrapServers": "cluster-a-kafka-bootstrap:9092"
                },
                {
                  "alias": "cluster-b",
                  "bootstrapServers": "cluster-b-kafka-bootstrap:9092",
                  "config": {
                    "config.storage.replication.factor": -1,
                    "offset.storage.replication.factor": -1,
                    "status.storage.replication.factor": -1
                  }
                }
              ],
              "mirrors": [
                {
                  "sourceCluster": "cluster-a",
                  "targetCluster": "cluster-b",
                  "sourceConnector": {
                    "config": {
                      "replication.factor": -1,
                      "offset-syncs.topic.replication.factor": -1,
                      "sync.topic.acls.enabled": "false"
                    }
                  },
                  "checkpointConnector": {
                    "config": {
                      "checkpoints.topic.replication.factor": -1
                    }
                  },
                  "topicsPattern": ".*",
                  "groupsPattern": ".*"
                }
              ]
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaRebalance",
            "metadata": {
              "name": "my-rebalance",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "goals": [
                "CpuCapacityGoal",
                "NetworkInboundCapacityGoal",
                "DiskCapacityGoal",
                "RackAwareGoal",
                "MinTopicLeadersPerBrokerGoal",
                "NetworkOutboundCapacityGoal",
                "ReplicaCapacityGoal"
              ]
            }
          },
          {
            "apiVersion": "core.strimzi.io/v1beta2",
            "kind": "StrimziPodSet",
            "metadata": {
              "name": "strimzi-pod-set-example"
            },
            "spec": {
              "pods": [
                {
                  "apiVersion": "v1",
                  "kind": "Pod",
                  "metadata": {
                    "labels": {
                      "app": "strimzi-pod-set-example"
                    },
                    "name": "example-pod"
                  },
                  "spec": {
                    "containers": [
                      {
                        "command": [
                          "sleep",
                          3600
                        ],
                        "image": "busybox:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "busybox"
                      }
                    ]
                  }
                }
              ],
              "selector": {
                "matchLabels": {
                  "app": "strimzi-pod-set-example"
                }
              }
            }
          },
          {
            "apiVersion": "kafka.strimzi.io/v1beta2",
            "kind": "KafkaNodePool",
            "metadata": {
              "name": "my-pool",
              "labels": {
                "strimzi.io/cluster": "my-cluster"
              }
            },
            "spec": {
              "replicas": 3,
              "roles": [
                "broker"
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "100Gi",
                    "deleteClaim": false
                  }
                ]
              }
            }
          }
        ]
      alm-examples-metadata: |-
        {
          "my-cluster": {
            "description": "Example Kafka cluster with Ephemeral storage"
          },
          "my-connect-cluster": {
            "description": "Example Kafka Connect cluster"
          },
          "my-mirror-maker": {
            "description": "Example Kafka Mirror Maker 1 deployment"
          },
          "my-mm2-cluster": {
            "description": "Example Kafka Mirror Maker 2 deployment"
          },
          "my-bridge": {
            "description": "Example Strimzi Kafka HTTP Bridge deployment"
          },
          "my-topic": {
            "description": "Example KafkaTopic custom resource"
          },
          "my-user": {
            "description": "Example KafkaUser custom resource"
          },
          "my-source-connector": {
            "description": "Example Kafka Connect source connector"
          },
          "my-rebalance": {
            "description": "Example Cruise Control rebalance request"
          },
          "my-pool": {
            "description": "Example KafkaNodePool custom resource"
          }
        }
      capabilities: Deep Insights
      categories: Streaming & Messaging
      certified: "false"
      containerImage: quay.io/strimzi/operator@sha256:d3732245f34afaa6b571f1f912e1cd017891b22003d6367ae8ca059b2a5cb13c
      createdAt: "2024-08-22 15:19:00"
      description: Strimzi provides a way to run an Apache Kafka cluster on Kubernetes
        or OpenShift in various deployment configurations.
      features.operators.openshift.io/disconnected: “true”
      features.operators.openshift.io/fips-compliant: “true”
      features.operators.openshift.io/proxy-aware: “true”
      features.operators.openshift.io/tls-profiles: “false”
      features.operators.openshift.io/token-auth-aws: “false”
      features.operators.openshift.io/token-auth-azure: “false”
      features.operators.openshift.io/token-auth-gcp: “false”
      operators.openshift.io/infrastructure-features: '["disconnected", "proxy", "proxy-aware",
        "fips"]'
      operators.operatorframework.io/internal-objects: '["strimzipodsets.core.strimzi.io"]'
      repository: https://github.com/strimzi/strimzi-kafka-operator
      support: Strimzi
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: Represents a Kafka cluster
        displayName: Kafka
        kind: Kafka
        name: kafkas.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Kafka version
          displayName: Version
          path: kafka.version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The desired number of Kafka brokers.
          displayName: Kafka Brokers
          path: kafka.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Kafka brokers
          displayName: Kafka storage
          path: kafka.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: kafka.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        - description: The desired number of Zookeeper nodes.
          displayName: Zookeeper Nodes
          path: zookeeper.replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by Zookeeper nodes
          displayName: Zookeeper storage
          path: zookeeper.storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Zookeeper Resource Requirements
          path: zookeeper.resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a pool of Kafka brokers
        displayName: Kafka Node Pool
        kind: KafkaNodePool
        name: kafkanodepools.kafka.strimzi.io
        resources:
        - kind: Route
          name: ""
          version: route.openshift.io/v1
        - kind: Service
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: ConfigMap
          name: ""
          version: v1
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka brokers in this pool.
          displayName: Kafka Brokers
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The type of storage used by this pool of Kafka nodes
          displayName: Kafka storage
          path: storage.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Kafka Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Cluster ID
          displayName: Cluster ID
          path: clusterId
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: List of node IDs in this Node Pool
          displayName: Node IDs
          path: nodeIds
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Kafka cluster conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Connect cluster
        displayName: Kafka Connect
        kind: KafkaConnect
        name: kafkaconnects.kafka.strimzi.io
        resources:
        - kind: Service
          name: ""
          version: v1
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Connect nodes.
          displayName: Connect nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Connect version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The address of the bootstrap server
          displayName: Bootstrap server
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Connect conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker cluster
        displayName: Kafka Mirror Maker
        kind: KafkaMirrorMaker
        name: kafkamirrormakers.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker nodes.
          displayName: MirrorMaker nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka Mirror Maker version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Source cluster
          displayName: Source cluster
          path: consumer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The bootstrap address of the Target cluster
          displayName: Target cluster
          path: producer.bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Expression specifying the topics which should be mirrored
          displayName: Mirrored topics
          path: include
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka Bridge cluster
        displayName: Kafka Bridge
        kind: KafkaBridge
        name: kafkabridges.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        - kind: Service
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka Bridge nodes.
          displayName: Bridge nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: The bootstrap address of the Kafka cluster
          displayName: Kafka cluster
          path: bootstrapServers
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The port where the HTTP Bridge is listening
          displayName: HTTP port
          path: http.port
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:number
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka Bridge conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a topic inside a Kafka cluster
        displayName: Kafka Topic
        kind: KafkaTopic
        name: kafkatopics.kafka.strimzi.io
        specDescriptors:
        - description: The number of partitions
          displayName: Partitions
          path: partitions
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The number of replicas
          displayName: Replication factor
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Kafka topic conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a user inside a Kafka cluster
        displayName: Kafka User
        kind: KafkaUser
        name: kafkausers.kafka.strimzi.io
        resources:
        - kind: Secret
          name: ""
          version: v1
        specDescriptors:
        - description: Authentication type
          displayName: Authentication type
          path: authentication.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:tls
          - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
        - description: Authorization type
          displayName: Authorization type
          path: authorization.type
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:simple
        statusDescriptors:
        - description: Kafka user conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Connector inside a Kafka Connect cluster
        displayName: Kafka Connector
        kind: KafkaConnector
        name: kafkaconnectors.kafka.strimzi.io
        specDescriptors:
        - description: Class of the Kafka Connect connector
          displayName: Class
          path: class
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Maximum number of tasks used by the connector
          displayName: Max number of tasks
          path: tasksMax
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        statusDescriptors:
        - description: Connector conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Represents a Kafka MirrorMaker 2 cluster
        displayName: Kafka MirrorMaker 2
        kind: KafkaMirrorMaker2
        name: kafkamirrormaker2s.kafka.strimzi.io
        resources:
        - kind: Deployment
          name: ""
          version: v1
        - kind: ReplicaSet
          name: ""
          version: v1
        - kind: Pod
          name: ""
          version: v1
        specDescriptors:
        - description: The desired number of Kafka MirrorMaker 2 nodes.
          displayName: MirrorMaker2 nodes
          path: replicas
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Kafka MirrorMaker 2 version
          displayName: Version
          path: version
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: The Kafka cluster where the underlying Kafka Connect connects
          displayName: Connect cluster
          path: connectCluster
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:text
        - description: Limits describes the minimum/maximum amount of compute resources
            required/allowed
          displayName: Resource Requirements
          path: resources
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
        statusDescriptors:
        - description: Kafka MirrorMaker conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Triggeres rebalance of replicas in a Kafka cluster
        displayName: Kafka Rebalance
        kind: KafkaRebalance
        name: kafkarebalances.kafka.strimzi.io
        specDescriptors:
        - description: Skip hard Cruise Cotnrol goals
          displayName: Skip hard goals
          path: skipHardGoalCheck
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
        statusDescriptors:
        - description: Kafka Rebalance conditions
          displayName: Conditions
          path: conditions
          x-descriptors:
          - urn:alm:descriptor:io.kubernetes.conditions
        version: v1beta2
      - description: Internal custom resource used to manage Strimzi pods
        displayName: Strimzi Pod Set
        kind: StrimziPodSet
        name: strimzipodsets.core.strimzi.io
        specDescriptors:
        - description: Selector used to match pods managed by this resource
          displayName: Pod Selector
          path: selector
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:selector:core:v1:Pod
        statusDescriptors:
        - description: Number of desired pods
          displayName: Pods
          path: pods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are ready
          displayName: Ready Pods
          path: readyPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        - description: Number of pods which are up-to-date
          displayName: Up-to-date Pods
          path: currentPods
          x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:podCount
        version: v1beta2
    description: |
      Strimzi provides a way to run an [Apache Kafka®](https://kafka.apache.org) cluster on [Kubernetes](https://kubernetes.io/) or [OpenShift](https://www.openshift.com/) in various deployment configurations. See our [website](https://strimzi.io) for more details about the project.
      ### Upgrades
      **!!! IMPORTANT !!!**

      **Direct upgrade from Strimzi 0.22 or earlier is not supported anymore!** You have to upgrade first to one of the previous versions of Strimzi. You will also need to convert the CRD resources. For more details, see the [documentation](https://strimzi.io/docs/operators/0.43.0/deploying.html#assembly-upgrade-str).

      **Strimzi 0.43 is the last version with support for Kubernetes 1.23 and 1.24.** From Strimzi 0.44, only Kubernetes versions 1.25 and newer will be supported.
      ### New in 0.43
      * Support for Apache Kafka 3.8.0
      * Removed support for Apache Kafka 3.6.0, 3.6.1, and 3.6.2
      * Specifying additional volumes and volume mounts in Strimzi custom resources
      * Support for custom Cruise Control API users
      * Unregistration of KRaft nodes after scale-down
      * Kafka Exporter updated to 1.8.0 (and the Grafana dashboard updated to work with it)
      * Service account based authentication
      ### Supported Features
      * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeper® that are traditionally hard to administer.
      * **Supports KRaft** - You can run your Apache Kafka clusters without Apache ZooKeeper.
      * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.
      * **Topic Management** - Creates and manages Kafka Topics within the cluster.
      * **User Management** - Creates and manages Kafka Users within the cluster.
      * **Connector Management** - Creates and manages Kafka Connect connectors.
      * **Includes Kafka Mirror Maker 1 and 2** - Allows for mirroring data between different Apache Kafka® clusters.
      * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache Kafka® cluster via HTTP protocol.
      * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributing partition replicas according to specified goals in order to achieve the best cluster performance.
      * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashboards
      ### Upgrading your Clusters
      The Strimzi Operator understands how to run and upgrade between a set of Kafka versions. When specifying a new version in your config, check to make sure you aren't using any features that may have been removed. See [the upgrade guide](https://strimzi.io/docs/operators/latest/deploying.html#assembly-upgrading-kafka-versions-str) for more information.
      ### Storage
      An efficient data storage infrastructure is essential to the optimal performance of Apache Kafka®. Apache Kafka® deployed via Strimzi requires block storage. The use of file storage (for example, NFS) is not recommended.
      The Strimzi Operator supports three types of data storage:
      * Ephemeral (Recommended for development only!)
      * Persistent
      * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)
      Strimzi also supports advanced operations such as adding or removing disks in Apache Kafka® brokers or resizing the persistent volumes (where supported by the infrastructure).
      ### Documentation
      Documentation to the current _main_ branch as well as all releases can be found on our [website](https://strimzi.io/documentation).
      ### Getting help
      If you encounter any issues while using Strimzi, you can get help using:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### Contributing
      You can contribute by:
      * Raising any issues you find using Strimzi
      * Fixing issues by opening Pull Requests
      * Improving documentation
      * Talking about Strimzi
      All bugs, tasks or enhancements are tracked as [GitHub issues](https://github.com/strimzi/strimzi-kafka-operator/issues). Issues which might be a good start for new contributors are marked with ["good-start"](https://github.com/strimzi/strimzi-kafka-operator/labels/good-start) label.
      The [Development guide](https://github.com/strimzi/strimzi-kafka-operator/blob/main/development-docs/DEV_GUIDE.md) describes how to build Strimzi and how to test your changes before submitting a patch or opening a PR.
      The [Documentation Contributor Guide](https://strimzi.io/contributing/guide/) describes how to contribute to Strimzi documentation.
      If you want to get in touch with us first before contributing, you can use:
      * [Strimzi mailing list on CNCF](https://lists.cncf.io/g/cncf-strimzi-users/topics)
      * [Strimzi Slack channel on CNCF workspace](https://cloud-native.slack.com/messages/strimzi)
      ### License
      Strimzi is licensed under the [Apache License, Version 2.0](https://github.com/strimzi/strimzi-kafka-operator/blob/main/LICENSE).
    displayName: Strimzi
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: true
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - kafka
    - messaging
    - kafka-connect
    - kafka-streams
    - data-streaming
    - data-streams
    - streaming
    - streams
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
      operatorframework.io/os.linux: supported
    links:
    - name: Website
      url: https://strimzi.io/
    - name: Documentation
      url: https://strimzi.io/documentation/
    - name: Mailing list
      url: https://lists.cncf.io/g/cncf-strimzi-users/topics
    - name: Slack
      url: https://cloud-native.slack.com/messages/strimzi
    - name: GitHub
      url: https://github.com/strimzi/strimzi-kafka-operator
    maintainers:
    - email: cncf-strimzi-users@lists.cncf.io
      name: Strimzi
    maturity: stable
    minKubeVersion: 1.23.0
    provider:
      name: Strimzi
relatedImages:
- image: quay.io/operatorhubio/strimzi-kafka-operator@sha256:ba574bdcceb2f8c20d61506e2905b8545048f8c236179e11e253ef365a552d19
  name: ""
- image: quay.io/strimzi/kafka-bridge@sha256:80f329ecd3ba96fac12e75be874dce0debc8395337737581de34238ce11c8fb1
  name: strimzi-bridge
- image: quay.io/strimzi/kafka@sha256:ad06ead5125bce87498b1582a76e78143a6d21408ac4b12bb7e6007aa4cabd84
  name: strimzi-kafka-371
- image: quay.io/strimzi/kafka@sha256:b2f4e8895e9ed66228512ce14aec685101fa75dc329128d47cb1c15e3aef3c9c
  name: strimzi-kafka-380
- image: quay.io/strimzi/kafka@sha256:d27cf5bf3624e18ba705246b14f92d12b8a15eb8551b13abf027cf71b549baf0
  name: strimzi-kafka-370
- image: quay.io/strimzi/kaniko-executor@sha256:ef1a39c363e145041d80103c3c12da9429ce06cf21dff6fb1fb75d0c0ed9c35b
  name: strimzi-kaniko-executor
- image: quay.io/strimzi/maven-builder@sha256:6414f8f3985f221b0eda53867c00494140108d17579c4dcbbc93934bb00e5d49
  name: strimzi-maven-builder
- image: quay.io/strimzi/operator@sha256:d3732245f34afaa6b571f1f912e1cd017891b22003d6367ae8ca059b2a5cb13c
  name: strimzi-cluster-operator
schema: olm.bundle

---
defaultChannel: alpha
icon:
  base64data: iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAADpklEQVR4nOyYT2hcRRzHvzPvz741abu7TTe2LCvWtLU1S/1TVm2RqqAgqKcKVkGlKAhVEMnBgngo4kFzKEJ78SIeRPRkixAQmqqItoYc2m40Fo3bhK6wzZ/Nn3V333sz8maTHAKuM7NJ3wvkA5OZwPx+7/slmfnNjAkAR/J25q0nrRMP77HuAEAQffhPo27x1EDtA5JJUfLXqc1XQMg9YatSh1+lD/YYmfUpPoD0UgJYYctoBxq2gHbZMBA2psrk6lPfgjtblT9CWANw50GqJdDKKIzyLzD+/gHEqyrnWomSAdibAXuL8kd48MPZBr7pTrDug/B2vQxaHoI59iXM4jkQ7innXELJQPzsIYBo1Dliib8cS+yFv/0wvOzTYOk8Guk83N3H4Px4HHThunreIPWRvLXzizc7/9CK1oRbm+DufR3unlcBaoLUbiJ24SUYlVHlXKEsYuLOwb78EZzzR4HaFLjThfrhT8GcbuVcoe5CxuQw4oMvAPUKeDyN+kP9yjlC30bp7DXELvYBnIsF7mafUYtfM2UKmKXzMCYGxNjd94ZSbCQMBFiF06LnW3rgb71POi4yBozKryAzv4uxv/0x6TilOlDPfwgeFDMVYcVzsMa/kZtb/hleYjf8VE46v5KBoAgFW54KdHpEei6ZHRM978hIx6gdJRYxSt+BzraufV73QfDE3Up5iTe/qKpDOkbLgFn8WrRW8APvw1M0ACPe7P2adEhkFnEA68yKPji1yhItA9sOiJ7OFKRjImPAT+bAUvvF4du8LrdrISoGuKjAx8VRncz8Bjp1RTo2Ega8Xa/AzzwhzkOx4ZMgYNKxoRvwdjyOxr0nxNgc+wpG+ZJSfKgG3LueR/3QGXGpoVNXYQ+fVM6hVQfaxU/0orG/D+z2R8TvdLoA5/tjIP4/yrm0DLCODFiyt+UcHks2eycNv+sB8FgXWLJ5J2bJ3PLd2iieRWzoXRBvQUeKngE397ZoMng9R0VbSbDb2Jf7YZYGdSQsc+v+hdwF0Lk/m88pEwMwbg6tSlotA/ald/632NTvfw/+zudgjpyBXfgYhLm6GluiZYCwBojf+lVt6bEqEL5W4hH2NroabBgImw0DYaO1C3nZZ8ES+1rOUXnbaQctA/6OR0WLAkoGzGufKb0YBKxWxf0vlAzYI6fXTokm634Rr38DHJB/RYog9OIN98b4JLsQthAdxif9QXEtyqRIZ/+Lt70WDMMWJQ3HRN/n1U/+DQAA///cXxHcbqTXhQAAAABJRU5ErkJggg==
  mediatype: image/png
name: parodos-operator
schema: olm.package
---
entries:
- name: parodos-operator.v0.0.1
- name: parodos-operator.v0.0.2
  replaces: parodos-operator.v0.0.1
name: alpha
package: parodos-operator
schema: olm.channel
---
image: quay.io/operatorhubio/parodos-operator@sha256:2ccfd00297e2bd125b2c7499f69a2a1fd25ef890650fea508a9a4a1ad08ee874
name: parodos-operator.v0.0.1
package: parodos-operator
properties:
- type: olm.gvk
  value:
    group: charts.redhat.com
    kind: Parodos
    version: v1alpha1
- type: olm.package
  value:
    packageName: parodos-operator
    version: 0.0.1
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
  name: ""
- image: quay.io/operatorhubio/parodos-operator@sha256:2ccfd00297e2bd125b2c7499f69a2a1fd25ef890650fea508a9a4a1ad08ee874
  name: ""
- image: quay.io/parodos-dev/parodos-operator:v1.0.19
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/parodos-operator@sha256:e858369b836ebda5ddfcb34a6ed0e1c61327d32f9c9c83217e7ede0cb9579f8d
name: parodos-operator.v0.0.2
package: parodos-operator
properties:
- type: olm.gvk
  value:
    group: charts.redhat.com
    kind: Parodos
    version: v1alpha1
- type: olm.package
  value:
    packageName: parodos-operator
    version: 0.0.2
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "charts.redhat.com/v1alpha1",
            "kind": "Parodos",
            "metadata": {
              "name": "parodos-sample"
            },
            "spec": {
              "appConfig4Gh2B9Ghf4": {
                "appConfigYaml": "app:\n  title: Scaffolded Backstage App\n  baseUrl: http://0.0.0.0:3000\nparodos:\n  workflows:\n    assessment: 'onboardingAssessment_ASSESSMENT_WORKFLOW'\n  pollingInterval: 10000\norganization:\n  name: My Company\nbackend:\n  # Used for enabling authentication, secret is shared by all backend plugins\n  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for\n  # information on the format\n  # auth:\n  #   keys:\n  #     - secret: ${BACKEND_SECRET}\n  baseUrl: http://localhost:7007\n  listen:\n    port: 7007\n    # Uncomment the following host directive to bind to specific interfaces\n    # host: 127.0.0.1\n  csp:\n    connect-src: [\"'self'\", 'http:', 'https:']\n    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference\n    # Default Helmet Content-Security-Policy values can be removed by setting the key to false\n  cors:\n    origin: http://localhost:8080\n    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]\n    credentials: true\n  database:\n    client: pg\n    connection:\n      host: ${POSTGRES_SERVICE_HOST}\n      port: 5432\n      user: parodos\n      password: parodos\n  cache:\n    store: memory\n  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir\nintegrations:\n  github:\n    - host: github.com\n      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information\n      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration\n      token: ${GITHUB_TOKEN}\n    ### Example for how to add your GitHub Enterprise instance using the API:\n    # - host: ghe.example.net\n    #   apiBaseUrl: https://ghe.example.net/api/v3\n    #   token: ${GHE_TOKEN}\nproxy:\n  ### Example for how to add a proxy endpoint for the frontend.\n  ### A typical reason to do this is to handle HTTPS and CORS for internal services.\n  # '/test':\n  #   target: 'https://example.com'\n  #   changeOrigin: true\n  '/parodos':\n    target: 'http://workflow-service:8080/api/v1'\n    changeOrigin: true\n    redirect: follow\n    cache: 'no-cache'\n    headers:\n      Content-Type: 'application/json'\n      accept: 'application/json'\n      Authorization: 'Basic dGVzdDp0ZXN0'\n  '/parodos-notifications':\n    target: 'http://notification-service:8080/api/v1'\n    changeOrigin: true\n    redirect: follow\n    cache: 'no-cache'\n    headers:\n      Content-Type: 'application/json'\n      accept: 'application/json'\n      Authorization: 'Basic dGVzdDp0ZXN0'\n# Reference documentation http://backstage.io/docs/features/techdocs/configuration\n# Note: After experimenting with basic setup, use CI/CD to generate docs\n# and an external cloud storage when deploying TechDocs for production use-case.\n# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach\ntechdocs:\n  builder: 'local' # Alternatives - 'external'\n  generator:\n    runIn: 'docker' # Alternatives - 'local'\n  publisher:\n    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.\nauth:\n  # see https://backstage.io/docs/auth/ to learn about auth providers\n  providers: {}\nscaffolder:\n  # see https://backstage.io/docs/features/software-templates/configuration for software template options\ncatalog:\n  import:\n    entityFilename: catalog-info.yaml\n    pullRequestBranchName: backstage-integration\n  rules:\n    - allow: [Component, System, API, Resource, Location]\n  locations:\n    # Local example data, file locations are relative to the backend process, typically `packages/backend`\n    - type: file\n      target: ../../examples/entities.yaml\n    # Local example template\n    - type: file\n      target: ../../examples/template/template.yaml\n      rules:\n        - allow: [Template]\n    # Local example organizational data\n    - type: file\n      target: ../../examples/org.yaml\n      rules:\n        - allow: [User, Group]\n    ## Uncomment these lines to add more example data\n    # - type: url\n    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml\n    ## Uncomment these lines to add an example org\n    # - type: url\n    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml\n    #   rules:\n    #     - allow: [User, Group]"
              },
              "backstage": {
                "backstage": {
                  "image": {
                    "repository": "quay.io/parodos-dev/backstage-parodos",
                    "tag": "v1.0.19-openshift"
                  },
                  "imagePullPolicy": "Always"
                },
                "ports": [
                  {
                    "name": "backend",
                    "port": 7007,
                    "targetPort": "backend"
                  }
                ],
                "replicas": 1,
                "type": "ClusterIP"
              },
              "config": {
                "datasourceDriver": "org.postgresql.Driver",
                "datasourcePassword": "parodos",
                "datasourceUrl": "jdbc:postgresql://postgres:5432/parodos",
                "datasourceUsername": "parodos",
                "notificationServerAddress": "notification-service",
                "springProfilesActive": "local"
              },
              "fullnameOverride": "parodos-v1-0-19",
              "kubernetesClusterDomain": "cluster.local",
              "notificationService": {
                "notificationService": {
                  "image": {
                    "repository": "quay.io/parodos-dev/notification-service",
                    "tag": "v1.0.19"
                  }
                },
                "ports": [
                  {
                    "port": 8080,
                    "protocol": "TCP",
                    "targetPort": 8080
                  }
                ],
                "type": "ClusterIP"
              },
              "notificationServiceConfig": {
                "datasourceDriver": "org.postgresql.Driver",
                "datasourcePassword": "parodos",
                "datasourceUrl": "jdbc:postgresql://postgres:5432/parodos",
                "datasourceUsername": "parodos",
                "springProfilesActive": "local"
              },
              "postgres": {
                "ports": [
                  {
                    "port": 5432,
                    "targetPort": 0
                  }
                ],
                "postgres": {
                  "image": {
                    "repository": "postgres",
                    "tag": "13.2-alpine"
                  },
                  "imagePullPolicy": "IfNotPresent"
                },
                "replicas": 1,
                "type": "ClusterIP"
              },
              "postgresSecretsTh27274644": {
                "pgdata": "/var/lib/postgresql/data/mydata",
                "postgresDb": "parodos",
                "postgresPassword": "parodos",
                "postgresUser": "parodos"
              },
              "pvc": {
                "postgresPvc": {
                  "storageRequest": "8Gi"
                }
              },
              "workflowService": {
                "ports": [
                  {
                    "port": 8080,
                    "protocol": "TCP",
                    "targetPort": 8080
                  }
                ],
                "type": "ClusterIP",
                "workflowService": {
                  "image": {
                    "repository": "quay.io/parodos-dev/workflow-service",
                    "tag": "v1.0.19"
                  },
                  "imagePullPolicy": "Always"
                }
              }
            }
          }
        ]
      capabilities: Basic Install
      categories: Modernization & Migration,Application Runtime,Developer Tools
      containerImage: quay.io/parodos-dev/parodos-operator:v1.0.19
      createdAt: "2023-07-18T08:36:33Z"
      operators.operatorframework.io/builder: operator-sdk-v1.30.0
      operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
      repository: https://github.com/parodos-dev/parodos
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: parodos CRD
        kind: Parodos
        name: parodos.charts.redhat.com
        version: v1alpha1
    description: |
      [Parodos](https://github.com/parodos-dev/parodos) is a Java toolkit to help enterprise's with a legacy footprint build internal developer platforms (IDP) that enable their developers to get access to the tools and environments required to start coding with less time, friction and frustration.
      ## About this Operator
      This Operator is based on a [Helm chart](https://github.com/parodos-dev/parodos-operator) for Parodos. It supports all the parameters from the helm chart.
      ## Using the cluster
      Parodos operator deploys all components needed to have a fully functionnal platform.
      ```
      kubectl get pods
      NAME                                    READY   STATUS    RESTARTS      AGE
      backstage-5468f68f5b-pmfn6              1/1     Running   2 (54s ago)   3m10s
      notification-service-649656d6cb-btv4j   1/1     Running   0             3m10s
      postgres-7857bf5cf-vb2qj                1/1     Running   0             3m10s
      workflow-service-d5c4884c-t8zl4         1/1     Running   2 (50s ago)   3m10s

      kubectl get service
      NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
      backstage              ClusterIP   10.109.227.212   <none>        7007/TCP   3m57s
      notification-service   ClusterIP   10.108.203.52    <none>        8080/TCP   3m57s
      postgres               ClusterIP   10.99.8.76       <none>        5432/TCP   3m57s
      workflow-service       ClusterIP   10.103.97.20     <none>        8080/TCP   3m57s
      ```
    displayName: Parodos Operator
    installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
    keywords:
    - parodos
    - postgresql
    - backstage
    links:
    - name: Parodos Operator
      url: https://parodos-operator.domain
    maintainers:
    - email: gfarache@redhat.com
      name: gabriel
    - email: gciavarr@redhat.com
      name: gloria
    - email: ricwang@redhat.com
      name: richard
    - email: aketcha@redhat.com
      name: annel
    maturity: alpha
    minKubeVersion: v1.18.0
    provider:
      name: parodos-dev
      url: https://github.com/parodos-dev
relatedImages:
- image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
  name: ""
- image: quay.io/operatorhubio/parodos-operator@sha256:e858369b836ebda5ddfcb34a6ed0e1c61327d32f9c9c83217e7ede0cb9579f8d
  name: ""
- image: quay.io/parodos-dev/parodos-operator:v1.0.19
  name: ""
schema: olm.bundle

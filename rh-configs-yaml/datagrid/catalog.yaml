{
  "schema": "olm.package",
  "name": "datagrid",
  "defaultChannel": "stable",
  "icon": {
    "base64data": "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDAgMTAwIj48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2Q3MWUwMDt9LmNscy0ye2ZpbGw6I2MyMWEwMDt9LmNscy0ze2ZpbGw6I2VhZWFlYTt9LmNscy00e2ZpbGw6I2ZmZjt9LmNscy01e2ZpbGw6I2I3YjdiNzt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPnByb2R1Y3RpY29uc18xMDE3X1JHQl9EYXRhR3JpZCBmaW5hbCBjb2xvcjwvdGl0bGU+PGcgaWQ9IkxheWVyXzEiIGRhdGEtbmFtZT0iTGF5ZXIgMSI+PGNpcmNsZSBjbGFzcz0iY2xzLTEiIGN4PSI1MCIgY3k9IjUwIiByPSI1MCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIwLjcxIDUwKSByb3RhdGUoLTQ1KSIvPjxwYXRoIGNsYXNzPSJjbHMtMiIgZD0iTTg1LjM2LDE0LjY0QTUwLDUwLDAsMCwxLDE0LjY0LDg1LjM2WiIvPjxwYXRoIGNsYXNzPSJjbHMtMyIgZD0iTTc0LjUzLDU2Ljc1QzU0LjI2LDU2LDUzLjgzLDc2LjUxLDMyLjgsNzQuMzgsMjIsNzMuMjksMTQsNjEuOSwxNi4xNyw1NC41OGw2LTE4LjU4Yy0uOTQsOC42LDEyLjM0LDIyLjU2LDIzLjExLDIzLjY1LDEyLjUyLDEuMjcsMTUuNTctNC4yOCwyOS4yLTIuOSIvPjxwYXRoIGNsYXNzPSJjbHMtNCIgZD0iTTgwLjQ3LDM5LjIxQzY5LjQ3LDM4LjEsNjEuNzksNDkuMzQsNTQsNTkuNDJjNi4zNS0xLjA2LDEwLjY3LTMuNjYsMjAuNS0yLjY3aC4wNmM0Ljc2LjQ4LDQuOTUsMy41Nyw0LjczLDVsNi40Ni0xOEM4Niw0Mi4yOSw4NSwzOS42Nyw4MC40NywzOS4yMVoiLz48cGF0aCBjbGFzcz0iY2xzLTUiIGQ9Ik03NC41OSw1Ni43NmgtLjA4YTIyLjM5LDIyLjM5LDAsMCwwLTE0LjM2LDQuMTYsMTcuNjEsMTcuNjEsMCwwLDAsMTAuMyw1YzMuNTIuMzYsNy43OS0xLjY4LDguODctNC4yMkM3OS41NCw2MC4zMiw3OS4zNSw1Ny4yNCw3NC41OSw1Ni43NloiLz48cGF0aCBjbGFzcz0iY2xzLTUiIGQ9Ik02OC41LDQzLjA2QzYwLjY4LDM2Ljg1LDU3LjA3LDI1LDQzLjIsMjMuNjEsMjguODUsMjIuMTYsMjMuNzksMzEuNSwyMi4yOCwzNS42N2wtLjA3LjMzYy0uMjYsMi40LjU5LDUuMjMsMi4xOCw4LjA3LDMuMjEtMS43MSw3LjU3LTIuNTcsMTMuNi0yLDguMi44MywxMi44Myw4LjE5LDE4LjE0LDE0LjUzQzYwLjA2LDUxLjUzLDY0LDQ2LjQzLDY4LjUsNDMuMDZaIi8+PC9nPjwvc3ZnPg==",
    "mediatype": "image/svg+xml"
  }
}
{
  "schema": "olm.channel",
  "name": "8.2.x",
  "package": "datagrid",
  "entries": [
    {
      "name": "datagrid-operator.v8.2.4",
      "replaces": "datagrid-operator.v8.2.3",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.5",
      "replaces": "datagrid-operator.v8.2.4",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.6",
      "replaces": "datagrid-operator.v8.2.5",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.7",
      "replaces": "datagrid-operator.v8.2.6",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.8",
      "replaces": "datagrid-operator.v8.2.7",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    }
  ]
}
{
  "schema": "olm.channel",
  "name": "8.3.x",
  "package": "datagrid",
  "entries": [
    {
      "name": "datagrid-operator.v8.2.4",
      "replaces": "datagrid-operator.v8.2.3",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.5",
      "replaces": "datagrid-operator.v8.2.4",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.6",
      "replaces": "datagrid-operator.v8.2.5",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.7",
      "replaces": "datagrid-operator.v8.2.6",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.8",
      "replaces": "datagrid-operator.v8.2.7",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.0"
    },
    {
      "name": "datagrid-operator.v8.3.1"
    },
    {
      "name": "datagrid-operator.v8.3.2"
    },
    {
      "name": "datagrid-operator.v8.3.3",
      "replaces": "datagrid-operator.v8.2.8",
      "skips": [
        "datagrid-operator.v8.3.0",
        "datagrid-operator.v8.3.1",
        "datagrid-operator.v8.3.2"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.4"
    },
    {
      "name": "datagrid-operator.v8.3.5"
    },
    {
      "name": "datagrid-operator.v8.3.6",
      "replaces": "datagrid-operator.v8.3.3",
      "skips": [
        "datagrid-operator.v8.3.4",
        "datagrid-operator.v8.3.5"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.7"
    },
    {
      "name": "datagrid-operator.v8.3.8"
    },
    {
      "name": "datagrid-operator.v8.3.9",
      "replaces": "datagrid-operator.v8.3.6",
      "skips": [
        "datagrid-operator.v8.3.7",
        "datagrid-operator.v8.3.8"
      ]
    }
  ]
}
{
  "schema": "olm.channel",
  "name": "8.4.x",
  "package": "datagrid",
  "entries": [
    {
      "name": "datagrid-operator.v8.2.4",
      "replaces": "datagrid-operator.v8.2.3",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.5",
      "replaces": "datagrid-operator.v8.2.4",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.6",
      "replaces": "datagrid-operator.v8.2.5",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.7",
      "replaces": "datagrid-operator.v8.2.6",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.8",
      "replaces": "datagrid-operator.v8.2.7",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.0"
    },
    {
      "name": "datagrid-operator.v8.3.1"
    },
    {
      "name": "datagrid-operator.v8.3.2"
    },
    {
      "name": "datagrid-operator.v8.3.3",
      "replaces": "datagrid-operator.v8.2.8",
      "skips": [
        "datagrid-operator.v8.3.0",
        "datagrid-operator.v8.3.1",
        "datagrid-operator.v8.3.2"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.4"
    },
    {
      "name": "datagrid-operator.v8.3.5"
    },
    {
      "name": "datagrid-operator.v8.3.6",
      "replaces": "datagrid-operator.v8.3.3",
      "skips": [
        "datagrid-operator.v8.3.4",
        "datagrid-operator.v8.3.5"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.7"
    },
    {
      "name": "datagrid-operator.v8.3.8"
    },
    {
      "name": "datagrid-operator.v8.3.9",
      "replaces": "datagrid-operator.v8.3.6",
      "skips": [
        "datagrid-operator.v8.3.7",
        "datagrid-operator.v8.3.8"
      ]
    },
    {
      "name": "datagrid-operator.v8.4.0"
    },
    {
      "name": "datagrid-operator.v8.4.1",
      "replaces": "datagrid-operator.v8.3.9",
      "skips": [
        "datagrid-operator.v8.4.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.4.10",
      "replaces": "datagrid-operator.v8.4.8"
    },
    {
      "name": "datagrid-operator.v8.4.11",
      "replaces": "datagrid-operator.v8.4.10"
    },
    {
      "name": "datagrid-operator.v8.4.12",
      "replaces": "datagrid-operator.v8.4.11"
    },
    {
      "name": "datagrid-operator.v8.4.13",
      "replaces": "datagrid-operator.v8.4.12"
    },
    {
      "name": "datagrid-operator.v8.4.14",
      "replaces": "datagrid-operator.v8.4.13"
    },
    {
      "name": "datagrid-operator.v8.4.15",
      "replaces": "datagrid-operator.v8.4.14"
    },
    {
      "name": "datagrid-operator.v8.4.16",
      "replaces": "datagrid-operator.v8.4.15"
    },
    {
      "name": "datagrid-operator.v8.4.2"
    },
    {
      "name": "datagrid-operator.v8.4.3",
      "replaces": "datagrid-operator.v8.4.1",
      "skips": [
        "datagrid-operator.v8.4.2"
      ]
    },
    {
      "name": "datagrid-operator.v8.4.4",
      "replaces": "datagrid-operator.v8.4.3"
    },
    {
      "name": "datagrid-operator.v8.4.5",
      "replaces": "datagrid-operator.v8.4.4"
    },
    {
      "name": "datagrid-operator.v8.4.6",
      "replaces": "datagrid-operator.v8.4.5"
    },
    {
      "name": "datagrid-operator.v8.4.7",
      "replaces": "datagrid-operator.v8.4.6"
    },
    {
      "name": "datagrid-operator.v8.4.8",
      "replaces": "datagrid-operator.v8.4.7"
    }
  ]
}
{
  "schema": "olm.channel",
  "name": "stable",
  "package": "datagrid",
  "entries": [
    {
      "name": "datagrid-operator.v8.2.4",
      "replaces": "datagrid-operator.v8.2.3",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.5",
      "replaces": "datagrid-operator.v8.2.4",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.6",
      "replaces": "datagrid-operator.v8.2.5",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.7",
      "replaces": "datagrid-operator.v8.2.6",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.2.8",
      "replaces": "datagrid-operator.v8.2.7",
      "skips": [
        "datagrid-operator.v8.2.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.0"
    },
    {
      "name": "datagrid-operator.v8.3.1"
    },
    {
      "name": "datagrid-operator.v8.3.2"
    },
    {
      "name": "datagrid-operator.v8.3.3",
      "replaces": "datagrid-operator.v8.2.8",
      "skips": [
        "datagrid-operator.v8.3.0",
        "datagrid-operator.v8.3.1",
        "datagrid-operator.v8.3.2"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.4"
    },
    {
      "name": "datagrid-operator.v8.3.5"
    },
    {
      "name": "datagrid-operator.v8.3.6",
      "replaces": "datagrid-operator.v8.3.3",
      "skips": [
        "datagrid-operator.v8.3.4",
        "datagrid-operator.v8.3.5"
      ]
    },
    {
      "name": "datagrid-operator.v8.3.7"
    },
    {
      "name": "datagrid-operator.v8.3.8"
    },
    {
      "name": "datagrid-operator.v8.3.9",
      "replaces": "datagrid-operator.v8.3.6",
      "skips": [
        "datagrid-operator.v8.3.7",
        "datagrid-operator.v8.3.8"
      ]
    },
    {
      "name": "datagrid-operator.v8.4.0"
    },
    {
      "name": "datagrid-operator.v8.4.1",
      "replaces": "datagrid-operator.v8.3.9",
      "skips": [
        "datagrid-operator.v8.4.0"
      ]
    },
    {
      "name": "datagrid-operator.v8.4.10",
      "replaces": "datagrid-operator.v8.4.8"
    },
    {
      "name": "datagrid-operator.v8.4.11",
      "replaces": "datagrid-operator.v8.4.10"
    },
    {
      "name": "datagrid-operator.v8.4.12",
      "replaces": "datagrid-operator.v8.4.11"
    },
    {
      "name": "datagrid-operator.v8.4.13",
      "replaces": "datagrid-operator.v8.4.12"
    },
    {
      "name": "datagrid-operator.v8.4.14",
      "replaces": "datagrid-operator.v8.4.13"
    },
    {
      "name": "datagrid-operator.v8.4.15",
      "replaces": "datagrid-operator.v8.4.14"
    },
    {
      "name": "datagrid-operator.v8.4.16",
      "replaces": "datagrid-operator.v8.4.15"
    },
    {
      "name": "datagrid-operator.v8.4.2"
    },
    {
      "name": "datagrid-operator.v8.4.3",
      "replaces": "datagrid-operator.v8.4.1",
      "skips": [
        "datagrid-operator.v8.4.2"
      ]
    },
    {
      "name": "datagrid-operator.v8.4.4",
      "replaces": "datagrid-operator.v8.4.3"
    },
    {
      "name": "datagrid-operator.v8.4.5",
      "replaces": "datagrid-operator.v8.4.4"
    },
    {
      "name": "datagrid-operator.v8.4.6",
      "replaces": "datagrid-operator.v8.4.5"
    },
    {
      "name": "datagrid-operator.v8.4.7",
      "replaces": "datagrid-operator.v8.4.6"
    },
    {
      "name": "datagrid-operator.v8.4.8",
      "replaces": "datagrid-operator.v8.4.7"
    },
    {
      "name": "datagrid-operator.v8.5.0",
      "replaces": "datagrid-operator.v8.4.16"
    },
    {
      "name": "datagrid-operator.v8.5.1",
      "replaces": "datagrid-operator.v8.5.0"
    },
    {
      "name": "datagrid-operator.v8.5.2",
      "replaces": "datagrid-operator.v8.5.1"
    },
    {
      "name": "datagrid-operator.v8.5.3",
      "replaces": "datagrid-operator.v8.5.2"
    },
    {
      "name": "datagrid-operator.v8.5.4",
      "replaces": "datagrid-operator.v8.5.3"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.2.4",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:e604315b9e87ac692da59b9355f58b58bd5c09c813d5c32fbf97b9f65ef15a3c",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.2.4"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453",
          "createdAt": "2021-08-24T17:39:11Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2/html/data_grid_operator_8.2_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "openj9",
      "image": "registry.redhat.io/datagrid/datagrid-8-openj9-11-rhel8@sha256:979c66922f1ca37559f3e48668cd4c3dbbf3a124cc491d59170d00d79546dd8e"
    },
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:e604315b9e87ac692da59b9355f58b58bd5c09c813d5c32fbf97b9f65ef15a3c"
    },
    {
      "name": "datagrid-8-rhel8-operator-1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:e4f1862e798442a905a9b70bc5db7d9603f040d0f938d32cb137e4274487b6ed"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.2.5",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:1ee48038ec73204947a948f5aefee59f8e11ed3f1863a2a101eb58f37100c1cf",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.2.5"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453",
          "createdAt": "2021-08-24T17:39:44Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2/html/data_grid_operator_8.2_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "openj9",
      "image": "registry.redhat.io/datagrid/datagrid-8-openj9-11-rhel8@sha256:979c66922f1ca37559f3e48668cd4c3dbbf3a124cc491d59170d00d79546dd8e"
    },
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:1ee48038ec73204947a948f5aefee59f8e11ed3f1863a2a101eb58f37100c1cf"
    },
    {
      "name": "datagrid-8-rhel8-operator-1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:cdeb1dc9c3a75db87666da9975cc3de36aec14e68093294c2d61350f12f1ab6d"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.2.6",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:68a218a1dd178e267dc2a499aafbadf2f571f1f888562e2f1586ff06635b12cb",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.2.6"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453",
          "createdAt": "2021-08-24T17:39:44Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2/html/data_grid_operator_8.2_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "openj9",
      "image": "registry.redhat.io/datagrid/datagrid-8-openj9-11-rhel8@sha256:979c66922f1ca37559f3e48668cd4c3dbbf3a124cc491d59170d00d79546dd8e"
    },
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:68a218a1dd178e267dc2a499aafbadf2f571f1f888562e2f1586ff06635b12cb"
    },
    {
      "name": "datagrid-8-rhel8-operator-1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:c977c5e835a22c6849b0ce9ccd0c33c3ede0d435af8954bc32ef1602b1501391"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.2.7",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:67b99bc2f5e78a02449d70cf36a08eccc2c1e37fcf09df76452ac62117e973ac",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.2.7"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453",
          "createdAt": "2021-08-24T17:39:44Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2/html/data_grid_operator_8.2_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "openj9",
      "image": "registry.redhat.io/datagrid/datagrid-8-openj9-11-rhel8@sha256:1beeb18cf9af6795074342c88b17454b6c3f80739539b1bf6e2d17773041823c"
    },
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:67b99bc2f5e78a02449d70cf36a08eccc2c1e37fcf09df76452ac62117e973ac"
    },
    {
      "name": "datagrid-8-rhel8-operator-1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4cf858a473f8233ad4778ac2566bfdb8ac1f7841c28082ce32848694b7a9d016"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.2.8",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:a7641fc5f4c7aed4b73d7d98ccb58ef64cf14ab16d72378f56dba3ad4b8714c6",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.2.8"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453",
          "createdAt": "2021-08-24T17:39:44Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2/html/data_grid_operator_8.2_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.2"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "openj9",
      "image": "registry.redhat.io/datagrid/datagrid-8-openj9-11-rhel8@sha256:c8607d6538a7528e27e6ecb138e0a93a03b3c9fa1f8a9a5aad3fd9f4a6814448"
    },
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:a7641fc5f4c7aed4b73d7d98ccb58ef64cf14ab16d72378f56dba3ad4b8714c6"
    },
    {
      "name": "datagrid-8-rhel8-operator-1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:1435aa60e8ab4d25c86daae68dcb93d14999f50d7c1e11a3c5726a86d3d30453"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4d8057709958ef60bcabdcec52f05eae8df121fd3f4762c3218abca38130f638"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.0",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:7326ddcb3e8357e9bd3de35ace21a645f38c504cff04cd2bc30b831de06e45e0",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.0"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:2ad28953ec16c02f13c74c400026e37a4dade0558d9d931b88f9b393423c99a3",
          "createdAt": "2022-02-01T07:34:05Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:7326ddcb3e8357e9bd3de35ace21a645f38c504cff04cd2bc30b831de06e45e0"
    },
    {
      "name": "datagrid-8-rhel8-operator-2ad28953ec16c02f13c74c400026e37a4dade0558d9d931b88f9b393423c99a3-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:2ad28953ec16c02f13c74c400026e37a4dade0558d9d931b88f9b393423c99a3"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:2ad28953ec16c02f13c74c400026e37a4dade0558d9d931b88f9b393423c99a3"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:e78338a9548ab39a3f2c43d1367b7a129c0684f48556285288be3b4c0d6578f3"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.1",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8949eb9dbf4ad1792c4fa8ac85ccc03d7cf930e0405e49d8d84cea28a82f9ad0",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.1"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5",
          "createdAt": "2022-03-04T08:21:32Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8949eb9dbf4ad1792c4fa8ac85ccc03d7cf930e0405e49d8d84cea28a82f9ad0"
    },
    {
      "name": "datagrid-8-rhel8-operator-80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fece483d511100d5daabf24ccf001f86c7eb09a704b9c021e584343f07deed1d"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.2",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:20a429adad087fef7f6aacfc6c4bea728e5a43f04baf5b3ec504dbf93ee22b04",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5",
          "createdAt": "2022-03-04T08:23:45Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:20a429adad087fef7f6aacfc6c4bea728e5a43f04baf5b3ec504dbf93ee22b04"
    },
    {
      "name": "datagrid-8-rhel8-operator-80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:80ae6a877ca3aee16b0d1bd9ea94441067864b4077c8db397370d9e0570be9b5"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b1595bd7f5e942d37536d54aee7ce9397160d25c3a4133cc5bc28ecfdad97c3a"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.3",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:5a3916083bd6aa1acaae81ffd1646ede9e7f305f557416de8323424395c7ef65",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"adminAuth\": {\n        \"secretName\": \"basic-auth\"\n      },\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC batch-cache\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8aa8c21c3b1a134fe63ad0614b2c8da2ca5904e6569d33660be94342ee260a17",
          "createdAt": "2022-03-28T11:47:24Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Specifies target Infinispan cluster to be backed up.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore API schema.",
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "backup",
                  "displayName": "Backup name",
                  "description": "Specifies an Infinispan backup to restore.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "clusterName",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Batch Status",
                  "description": "Current state of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Batch reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config command",
                  "description": "List of commands to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap name",
                  "description": "Name if the ConfigMap containing th List of commands to be executed",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The current pods",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console location",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "Controls the number of nodes in your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle authentication",
                  "description": "Enable or disable user authentication.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption secret",
                  "description": "Name of the secret that contains TLS certificates.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption service",
                  "description": "Names the service that encrypts client traffic.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication secret",
                  "description": "Name of the secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service type",
                  "description": "Configures the service type.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                },
                {
                  "path": "service.sites.locations[].secretName",
                  "displayName": "Backup location secret",
                  "description": "Names the access secret that allows backups to a remote site.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.sites.local.expose.nodePort",
                  "displayName": "Node port",
                  "description": "Specifies the node port that accepts traffic from a load balancer service.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of owners",
                  "description": "Controls cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container ephemeral storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage size",
                  "description": "Sets the amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage class name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route hostname",
                  "description": "Defines the network hostname for your Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent volume claim (PVC) name",
                  "description": "Names the PVC that holds custom libraries.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Interoperability:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Data Grid Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request `0.25` (limit `0.50`) CPUs, 512MiB of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\nRed Hat Data Grid is a distributed, in-memory data store that increases application performance and delivers open-source capabilities to handle demanding use cases.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:5a3916083bd6aa1acaae81ffd1646ede9e7f305f557416de8323424395c7ef65"
    },
    {
      "name": "datagrid-8-rhel8-operator-8aa8c21c3b1a134fe63ad0614b2c8da2ca5904e6569d33660be94342ee260a17-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8aa8c21c3b1a134fe63ad0614b2c8da2ca5904e6569d33660be94342ee260a17"
    },
    {
      "name": "infinispan-operator",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8aa8c21c3b1a134fe63ad0614b2c8da2ca5904e6569d33660be94342ee260a17"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:872de31bcdf515f1e340e94cef10924dc0504bea6fe93727f5e71ede1ba1d71e"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.4",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8bc7da7eae9203792488ff05eaabd39ade16b473d4305d8f038991ff46a2b51c",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.4"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651",
          "createdAt": "2022-05-04T07:13:33Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8bc7da7eae9203792488ff05eaabd39ade16b473d4305d8f038991ff46a2b51c"
    },
    {
      "name": "datagrid-8-rhel8-operator-af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b2529eb6af0579148185834deac1dcb33e4cfabeafb30b98882cb6378b537fd9"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.5",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:f56ace2f4521cbf2c45eab351ee88a05b5404ffb87d71f8fb42f2bc3f200d0c2",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.5"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651",
          "createdAt": "2022-05-04T07:13:33Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:f56ace2f4521cbf2c45eab351ee88a05b5404ffb87d71f8fb42f2bc3f200d0c2"
    },
    {
      "name": "datagrid-8-rhel8-operator-af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:af9479f4f2c9a6f494e6684d5f7e399c463da2ebcf7f5534fc3c8c6ae2fa1651"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:0fd12545763aab8907747382ab47d5df40b27e3121175e1b20eebfca306eb8ce"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.6",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:a29708737148bee978dfe612759e834b6efb61fb52c68e6a657c7f723dc66bb2",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.6"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8040361398886e639ee4e83d1c637e7d4cdfbe128dda0ebc276d7fc65b0ef4d5",
          "createdAt": "2022-06-17T13:14:16Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:a29708737148bee978dfe612759e834b6efb61fb52c68e6a657c7f723dc66bb2"
    },
    {
      "name": "datagrid-8-rhel8-operator-8040361398886e639ee4e83d1c637e7d4cdfbe128dda0ebc276d7fc65b0ef4d5-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8040361398886e639ee4e83d1c637e7d4cdfbe128dda0ebc276d7fc65b0ef4d5"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8040361398886e639ee4e83d1c637e7d4cdfbe128dda0ebc276d7fc65b0ef4d5"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ec0185d369c661f0da8a477e7bd60437f32a2aabba21a7a89f8aeefba19cc895"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.7",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:73da17804e7bfcf4a18547b92d4d918a233f1052fc47c9d3bb068d3dce4ab12c",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.7"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:0c72a89e5492b059b5c96fc89e6b6ab0fbc4e09a961feab3958b59b6e3b914c2",
          "createdAt": "2022-08-02T12:58:37Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:73da17804e7bfcf4a18547b92d4d918a233f1052fc47c9d3bb068d3dce4ab12c"
    },
    {
      "name": "datagrid-8-rhel8-operator-0c72a89e5492b059b5c96fc89e6b6ab0fbc4e09a961feab3958b59b6e3b914c2-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:0c72a89e5492b059b5c96fc89e6b6ab0fbc4e09a961feab3958b59b6e3b914c2"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:0c72a89e5492b059b5c96fc89e6b6ab0fbc4e09a961feab3958b59b6e3b914c2"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:6bf330a70a8a2ba0700b43dbe813e52af115db79bfd1cf278ff340e69da3aa6c"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.8",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:0b09af229ca5ecee29ac4b88a3a0d1c0b0a17e86980f487d1a9f71d5fd9f778d",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.8"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:18ab00d95d9bde8da95447b8bd8ba4159cf9bf20eb1fb317ea1a6e2605b63034",
          "createdAt": "2022-08-29T18:22:13Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:0b09af229ca5ecee29ac4b88a3a0d1c0b0a17e86980f487d1a9f71d5fd9f778d"
    },
    {
      "name": "datagrid-8-rhel8-operator-18ab00d95d9bde8da95447b8bd8ba4159cf9bf20eb1fb317ea1a6e2605b63034-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:18ab00d95d9bde8da95447b8bd8ba4159cf9bf20eb1fb317ea1a6e2605b63034"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:18ab00d95d9bde8da95447b8bd8ba4159cf9bf20eb1fb317ea1a6e2605b63034"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:327f3e446d36968275f30b193c32546cb15a91fe621eaac40947e62dbbde0147"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.3.9",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:7dffd170b9b7d021b1615e6d746cbdfcbd819a1306ecdbaf042bcaf2202f7daa",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.3.9"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:4d9d7221b029866837add5f3cb52dd0b7956f57996ce2d8b76344ce2de678716",
          "createdAt": "2022-11-03T08:40:57Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3/html/data_grid_operator_8.3_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.3"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:7dffd170b9b7d021b1615e6d746cbdfcbd819a1306ecdbaf042bcaf2202f7daa"
    },
    {
      "name": "datagrid-8-rhel8-operator-4d9d7221b029866837add5f3cb52dd0b7956f57996ce2d8b76344ce2de678716-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:4d9d7221b029866837add5f3cb52dd0b7956f57996ce2d8b76344ce2de678716"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:4d9d7221b029866837add5f3cb52dd0b7956f57996ce2d8b76344ce2de678716"
    },
    {
      "name": "openjdk",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.0",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:b00117ea247e95385e60da4b8ec664db61e15bd718d241f61454acf3cc5166e5",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.0"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:3ccb20ab75afd33407bbe541da57d127b9fb33f0c5c11c022e43e82d16ace1e6",
          "createdAt": "2022-10-26T13:28:12Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:b00117ea247e95385e60da4b8ec664db61e15bd718d241f61454acf3cc5166e5"
    },
    {
      "name": "datagrid-8-rhel8-operator-3ccb20ab75afd33407bbe541da57d127b9fb33f0c5c11c022e43e82d16ace1e6-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:3ccb20ab75afd33407bbe541da57d127b9fb33f0c5c11c022e43e82d16ace1e6"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:3ccb20ab75afd33407bbe541da57d127b9fb33f0c5c11c022e43e82d16ace1e6"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.1",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:71e9536e3b82782c2847808abed5e3e715d5eef66607ba3fb501c1bdb95dbd96",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.1"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:be74a700d7fe322929e2268446a8198889be520afe215c6e05288926ef9b2cc4",
          "createdAt": "2022-11-30T18:42:34Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:71e9536e3b82782c2847808abed5e3e715d5eef66607ba3fb501c1bdb95dbd96"
    },
    {
      "name": "datagrid-8-rhel8-operator-be74a700d7fe322929e2268446a8198889be520afe215c6e05288926ef9b2cc4-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:be74a700d7fe322929e2268446a8198889be520afe215c6e05288926ef9b2cc4"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:be74a700d7fe322929e2268446a8198889be520afe215c6e05288926ef9b2cc4"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.10",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:ca127d700e0440a4b895ebfa07e7ef88690e756a01535405b3e5b45d9129f636",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.9"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e2f924b10c9069686b557371fc301f03bab3a7d8e4f246611560c951c19af948",
          "createdAt": "2023-10-13T09:13:38Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"fips\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:ca127d700e0440a4b895ebfa07e7ef88690e756a01535405b3e5b45d9129f636"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e2f924b10c9069686b557371fc301f03bab3a7d8e4f246611560c951c19af948"
    },
    {
      "name": "datagrid-8-rhel8-operator-e2f924b10c9069686b557371fc301f03bab3a7d8e4f246611560c951c19af948-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e2f924b10c9069686b557371fc301f03bab3a7d8e4f246611560c951c19af948"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.11",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:2a97fa5f83b7fdb3bbfdf3992be5fe999d75244ff18713161071725d7600b520",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.11"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:0637dc342394e8419c6c99bd25e345f55d54a3bd876cbac816daddef7044bdec",
          "createdAt": "2023-11-09T11:05:09Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"fips\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:2a97fa5f83b7fdb3bbfdf3992be5fe999d75244ff18713161071725d7600b520"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:0637dc342394e8419c6c99bd25e345f55d54a3bd876cbac816daddef7044bdec"
    },
    {
      "name": "datagrid-8-rhel8-operator-0637dc342394e8419c6c99bd25e345f55d54a3bd876cbac816daddef7044bdec-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:0637dc342394e8419c6c99bd25e345f55d54a3bd876cbac816daddef7044bdec"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.12",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:64e0e661c20042585a40f73dacec49e8de8bdabb296836b4c993c1267a23bf75",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.12"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47",
          "createdAt": "2023-11-22T11:38:27Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"fips\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:64e0e661c20042585a40f73dacec49e8de8bdabb296836b4c993c1267a23bf75"
    },
    {
      "name": "datagrid-8-rhel8-operator-8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.13",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:92ae324424ef9b63ed0df60a2372b4aafa24e4942361888e7fdba1340dc2a635",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.13"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47",
          "createdAt": "2023-11-22T11:38:27Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"fips\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:92ae324424ef9b63ed0df60a2372b4aafa24e4942361888e7fdba1340dc2a635"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47"
    },
    {
      "name": "datagrid-8-rhel8-operator-8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8beb6a4d174dc42b5aef723fe2fbc2260ce8708940f7cf73561a07a713864f47"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.14",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8930d49758905a723857840a5f6409dae03517df42061af2b2b5089eb1180a23",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.14"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:a1c653468e04562fe75afe4109fdcb4b1d5ab17c61157146671a0fcb30d20fb1",
          "createdAt": "2024-03-19T10:44:08Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8930d49758905a723857840a5f6409dae03517df42061af2b2b5089eb1180a23"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:a1c653468e04562fe75afe4109fdcb4b1d5ab17c61157146671a0fcb30d20fb1"
    },
    {
      "name": "datagrid-8-rhel8-operator-a1c653468e04562fe75afe4109fdcb4b1d5ab17c61157146671a0fcb30d20fb1-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:a1c653468e04562fe75afe4109fdcb4b1d5ab17c61157146671a0fcb30d20fb1"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.15",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:b603b552f60a287f23cd6cc62b13f45b96f17cbbceb5eb209999cb7275123bb5",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.15"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8954822619d9be16ab8ae2bcf52d0a22d6295b4f39bfc286ad36512ddc2f5b86",
          "createdAt": "2024-04-22T03:29:12 EDT",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "operator",
                  "displayName": "Operator Status",
                  "description": "The Operator status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:b603b552f60a287f23cd6cc62b13f45b96f17cbbceb5eb209999cb7275123bb5"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8954822619d9be16ab8ae2bcf52d0a22d6295b4f39bfc286ad36512ddc2f5b86"
    },
    {
      "name": "datagrid-8-rhel8-operator-8954822619d9be16ab8ae2bcf52d0a22d6295b4f39bfc286ad36512ddc2f5b86-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8954822619d9be16ab8ae2bcf52d0a22d6295b4f39bfc286ad36512ddc2f5b86"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_8_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b56269cb849afca34e7f82cc8e01a44bb32af6126f24db28019a58e556d4cb3c"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.16",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:111d1f4ab8f006386102d1bec4cd6a41b446d9ae401a43c821b2f318c8ba74c8",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.16"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e5315682869de72514e3e027bfb02bf0bb64919453ca738c7ecfa1e34634ac2b",
          "createdAt": "2024-05-30T08:05:19 EDT",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "operator",
                  "displayName": "Operator Status",
                  "description": "The Operator status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:111d1f4ab8f006386102d1bec4cd6a41b446d9ae401a43c821b2f318c8ba74c8"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e5315682869de72514e3e027bfb02bf0bb64919453ca738c7ecfa1e34634ac2b"
    },
    {
      "name": "datagrid-8-rhel8-operator-e5315682869de72514e3e027bfb02bf0bb64919453ca738c7ecfa1e34634ac2b-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e5315682869de72514e3e027bfb02bf0bb64919453ca738c7ecfa1e34634ac2b"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_8_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b56269cb849afca34e7f82cc8e01a44bb32af6126f24db28019a58e556d4cb3c"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_8_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:c15d4fd827f554291c14851f187947f4109c0e20257fa2f1e141b32669569358"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.2",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:df2c2b88de93675358a80ef0b093de7cf08d593795355ed802911754b03fc235",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:434c600e78bfdb101178db8c69747302f827441ceb98321e672a4cd85448576e",
          "createdAt": "2023-02-02T13:22:25Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:df2c2b88de93675358a80ef0b093de7cf08d593795355ed802911754b03fc235"
    },
    {
      "name": "datagrid-8-rhel8-operator-434c600e78bfdb101178db8c69747302f827441ceb98321e672a4cd85448576e-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:434c600e78bfdb101178db8c69747302f827441ceb98321e672a4cd85448576e"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:434c600e78bfdb101178db8c69747302f827441ceb98321e672a4cd85448576e"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.3",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:27cd7671acd0d955a08689c7c133a594c0694b74a96ffa61a09b090e95a908ce",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8b99837eee6364a166e263e7894a0b668eb6ad5f832b8a9507ad6f2195b3ccc1",
          "createdAt": "2023-02-21T09:54:08Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:27cd7671acd0d955a08689c7c133a594c0694b74a96ffa61a09b090e95a908ce"
    },
    {
      "name": "datagrid-8-rhel8-operator-8b99837eee6364a166e263e7894a0b668eb6ad5f832b8a9507ad6f2195b3ccc1-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8b99837eee6364a166e263e7894a0b668eb6ad5f832b8a9507ad6f2195b3ccc1"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:8b99837eee6364a166e263e7894a0b668eb6ad5f832b8a9507ad6f2195b3ccc1"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.4",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:65432a48a8e1b4fec1ab8fa05979f881cb9ccb8ee8ee1a0fa22dbc0a08e79ad7",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.4"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e3a74938f4f687c8f555c9bb2f76d7eaba01d4e8d45b66f04f5dc1787af9edc8",
          "createdAt": "2023-03-22T11:28:44Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:65432a48a8e1b4fec1ab8fa05979f881cb9ccb8ee8ee1a0fa22dbc0a08e79ad7"
    },
    {
      "name": "datagrid-8-rhel8-operator-e3a74938f4f687c8f555c9bb2f76d7eaba01d4e8d45b66f04f5dc1787af9edc8-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e3a74938f4f687c8f555c9bb2f76d7eaba01d4e8d45b66f04f5dc1787af9edc8"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:e3a74938f4f687c8f555c9bb2f76d7eaba01d4e8d45b66f04f5dc1787af9edc8"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.5",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:6fade134ce3f2e3a25836cb953a15ddc28b5d64040a7ce9ca2eecf738dde7ca0",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.5"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:c64f2b0b08f793698c1e1d2e41edbeb4bc0544d0ab25e986f4287f75c4bc5663",
          "createdAt": "2023-05-04T07:27:40Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:6fade134ce3f2e3a25836cb953a15ddc28b5d64040a7ce9ca2eecf738dde7ca0"
    },
    {
      "name": "datagrid-8-rhel8-operator-c64f2b0b08f793698c1e1d2e41edbeb4bc0544d0ab25e986f4287f75c4bc5663-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:c64f2b0b08f793698c1e1d2e41edbeb4bc0544d0ab25e986f4287f75c4bc5663"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:c64f2b0b08f793698c1e1d2e41edbeb4bc0544d0ab25e986f4287f75c4bc5663"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.6",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8f132d5fe266934c3868458861de48842cc92585cb4f88782d7ec69a81d0b802",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.6"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:4109bd377cdb886644cce21a19958dfb150b838ed05385d0a6c88392f4ee5d9c",
          "createdAt": "2023-06-20T12:17:39Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"fips\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:8f132d5fe266934c3868458861de48842cc92585cb4f88782d7ec69a81d0b802"
    },
    {
      "name": "datagrid-8-rhel8-operator-4109bd377cdb886644cce21a19958dfb150b838ed05385d0a6c88392f4ee5d9c-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:4109bd377cdb886644cce21a19958dfb150b838ed05385d0a6c88392f4ee5d9c"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:4109bd377cdb886644cce21a19958dfb150b838ed05385d0a6c88392f4ee5d9c"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.7",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:67f38b4f9ae5bc84aa6301247a63e089d35a0c30fb17177044832b2a4355b10f",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.7"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:b137437e8ef17e00b04428e5283f8f3438913421f33b19e0dd427d19a5501c8e",
          "createdAt": "2023-08-23T08:50:22Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"fips\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:67f38b4f9ae5bc84aa6301247a63e089d35a0c30fb17177044832b2a4355b10f"
    },
    {
      "name": "datagrid-8-rhel8-operator-b137437e8ef17e00b04428e5283f8f3438913421f33b19e0dd427d19a5501c8e-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:b137437e8ef17e00b04428e5283f8f3438913421f33b19e0dd427d19a5501c8e"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:b137437e8ef17e00b04428e5283f8f3438913421f33b19e0dd427d19a5501c8e"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.4.8",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:803afaa2160d58ec908148d3d1d6ca8b55306568b6287d04d83616e496a4e3de",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.4.8"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:2398043c5b1f6077f4fd37cff58494eb3574c0411766e7368f26b504308db46a",
          "createdAt": "2023-09-15T09:13:51Z",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "operators.openshift.io/infrastructure-features": "[\"Disconnected\", \"fips\"]",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4/html/data_grid_operator_8.4_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.4"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.11.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:803afaa2160d58ec908148d3d1d6ca8b55306568b6287d04d83616e496a4e3de"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:2398043c5b1f6077f4fd37cff58494eb3574c0411766e7368f26b504308db46a"
    },
    {
      "name": "datagrid-8-rhel8-operator-2398043c5b1f6077f4fd37cff58494eb3574c0411766e7368f26b504308db46a-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8-operator@sha256:2398043c5b1f6077f4fd37cff58494eb3574c0411766e7368f26b504308db46a"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_3_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:fef9789befa5796a9bec23023c9dfda27810846dc4406b126e0c344a656611a2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.5.0",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:3e4a8df97d131faf137d01f45eb23d83c7f8c071275aeeced77e393d68603eab",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.5.0"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576",
          "createdAt": "2024-06-25T06:32:17 EDT",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "operator",
                  "displayName": "Operator Status",
                  "description": "The Operator status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5/html/data_grid_operator_8.5_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:3e4a8df97d131faf137d01f45eb23d83c7f8c071275aeeced77e393d68603eab"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_8_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b56269cb849afca34e7f82cc8e01a44bb32af6126f24db28019a58e556d4cb3c"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_8_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:c15d4fd827f554291c14851f187947f4109c0e20257fa2f1e141b32669569358"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "datagrid-8-rhel9-operator-2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576"
    },
    {
      "name": "openjdk_8_5_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:f59ae21773dfc207454a709ac5f7aad2be6a6a20ac88da26c379edeed54537b8"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.5.1",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:fb47ce8af1c466b09d1528c9c0caf0d83a1a9f091a0358135190051410f33d0a",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.5.1"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576",
          "createdAt": "2024-06-25T06:32:17 EDT",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "operator",
                  "displayName": "Operator Status",
                  "description": "The Operator status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5/html/data_grid_operator_8.5_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:fb47ce8af1c466b09d1528c9c0caf0d83a1a9f091a0358135190051410f33d0a"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_8_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b56269cb849afca34e7f82cc8e01a44bb32af6126f24db28019a58e556d4cb3c"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_8_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:c15d4fd827f554291c14851f187947f4109c0e20257fa2f1e141b32669569358"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "datagrid-8-rhel9-operator-2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:2c21abe5b2a36776ba562c89229c278533e3d09ae820df73b359b24b5ef21576"
    },
    {
      "name": "openjdk_8_5_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:5656cd188d054551489d45be996266d03e3faa8814b8bfc0f360cf0dceb83cbe"
    },
    {
      "name": "openjdk_8_5_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:f59ae21773dfc207454a709ac5f7aad2be6a6a20ac88da26c379edeed54537b8"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.5.2",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:31f1b99c38c9334ca44517b12d4ad496a18c67e45f44c488efa60f1003c80d89",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.5.2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:9dea960fe33d0f4dd07017d2cbcb7e6725d127f3ff0c8ae40cb914a81a88529b",
          "createdAt": "2024-08-13T06:45:14 EDT",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "operator",
                  "displayName": "Operator Status",
                  "description": "The Operator status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5/html/data_grid_operator_8.5_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:31f1b99c38c9334ca44517b12d4ad496a18c67e45f44c488efa60f1003c80d89"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_8_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b56269cb849afca34e7f82cc8e01a44bb32af6126f24db28019a58e556d4cb3c"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_8_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:c15d4fd827f554291c14851f187947f4109c0e20257fa2f1e141b32669569358"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "datagrid-8-rhel9-operator-9dea960fe33d0f4dd07017d2cbcb7e6725d127f3ff0c8ae40cb914a81a88529b-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:9dea960fe33d0f4dd07017d2cbcb7e6725d127f3ff0c8ae40cb914a81a88529b"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:9dea960fe33d0f4dd07017d2cbcb7e6725d127f3ff0c8ae40cb914a81a88529b"
    },
    {
      "name": "openjdk_8_5_0_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:48cf13e71953cea6f62354289f0d8ece7a8a481ee0bb2c76eb9352d438db9ca3"
    },
    {
      "name": "openjdk_8_5_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:5656cd188d054551489d45be996266d03e3faa8814b8bfc0f360cf0dceb83cbe"
    },
    {
      "name": "openjdk_8_5_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:f59ae21773dfc207454a709ac5f7aad2be6a6a20ac88da26c379edeed54537b8"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.5.3",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:815ecdac2f33f65e5eea58c91def29261116de8094aa1932f835f97a1821db66",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.5.3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:e987d2ba67131e6c79daa03727b6929b494dce7ae3fff747994fd261663b21c1",
          "createdAt": "2024-09-16T05:06:56 EDT",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "operator",
                  "displayName": "Operator Status",
                  "description": "The Operator status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5/html/data_grid_operator_8.5_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:815ecdac2f33f65e5eea58c91def29261116de8094aa1932f835f97a1821db66"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_8_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b56269cb849afca34e7f82cc8e01a44bb32af6126f24db28019a58e556d4cb3c"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_8_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:c15d4fd827f554291c14851f187947f4109c0e20257fa2f1e141b32669569358"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "datagrid-8-rhel9-operator-e987d2ba67131e6c79daa03727b6929b494dce7ae3fff747994fd261663b21c1-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:e987d2ba67131e6c79daa03727b6929b494dce7ae3fff747994fd261663b21c1"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:e987d2ba67131e6c79daa03727b6929b494dce7ae3fff747994fd261663b21c1"
    },
    {
      "name": "openjdk_8_5_0_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:48cf13e71953cea6f62354289f0d8ece7a8a481ee0bb2c76eb9352d438db9ca3"
    },
    {
      "name": "openjdk_8_5_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:5656cd188d054551489d45be996266d03e3faa8814b8bfc0f360cf0dceb83cbe"
    },
    {
      "name": "openjdk_8_5_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:c25e3152d6a6b6d5cd86d311bf567e594b9948440785209cd8d7986076a5a10d"
    },
    {
      "name": "openjdk_8_5_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:f59ae21773dfc207454a709ac5f7aad2be6a6a20ac88da26c379edeed54537b8"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "datagrid-operator.v8.5.4",
  "package": "datagrid",
  "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:1b65d97db0ddf8740932cf4afad6bc3015325e2d1034c2661af97b99fe00e266",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Backup",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Batch",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Cache",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Infinispan",
        "version": "v1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "infinispan.org",
        "kind": "Restore",
        "version": "v2alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "datagrid",
        "version": "8.5.4"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"infinispan.org/v1\",\n    \"kind\": \"Infinispan\",\n    \"metadata\": {\n      \"name\": \"example-infinispan\"\n    },\n    \"spec\": {\n      \"replicas\": 1\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Backup\",\n    \"metadata\": {\n      \"name\": \"example-backup\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Batch\",\n    \"metadata\": {\n      \"name\": \"example-batch-inline\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"config\": \"create cache --template=org.infinispan.DIST_SYNC mycache\\nput --cache=mycache hello world\\nput --cache=mycache hola mundo\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Cache\",\n    \"metadata\": {\n      \"name\": \"example-cache\"\n    },\n    \"spec\": {\n      \"clusterName\": \"example-infinispan\",\n      \"name\": \"mycache\",\n      \"templateName\": \"org.infinispan.DIST_SYNC\"\n    }\n  },\n  {\n    \"apiVersion\": \"infinispan.org/v2alpha1\",\n    \"kind\": \"Restore\",\n    \"metadata\": {\n      \"name\": \"example-restore\"\n    },\n    \"spec\": {\n      \"cluster\": \"example-infinispan\",\n      \"container\": {\n        \"cpu\": \"1000m\",\n        \"extraJvmOpts\": \"-Djava.property=me\",\n        \"memory\": \"1Gi\"\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Database",
          "certified": "false",
          "containerImage": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:60786dd91f9019d25ab5e271f27eb94bffd4c41d4a8ebb7399440d28f547a4e9",
          "createdAt": "2024-11-18T12:14:57 UTC",
          "description": "Create and manage Red Hat Data Grid clusters.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operators.openshift.io/valid-subscription": "[\"Red Hat Data Grid\", \"Red Hat Runtimes\", \"Red Hat Integration\", \"Red Hat Process Automation\"]",
          "operators.operatorframework.io/builder": "operator-sdk-v1.24.1",
          "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
          "repository": "https://github.com/infinispan/infinispan-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "backups.infinispan.org",
              "version": "v2alpha1",
              "kind": "Backup",
              "displayName": "Backup",
              "description": "Backup is the Schema for the backups API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the backup operation"
                },
                {
                  "path": "pvc",
                  "displayName": "Persistent Volume Claim",
                  "description": "The name of the created PersistentVolumeClaim used to store the backup"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any backup related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "volume.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "Names the storage class object for persistent volume claims.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass"
                  ]
                }
              ]
            },
            {
              "name": "batches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Batch",
              "displayName": "Batch",
              "description": "Batch is the Schema for the batches API",
              "statusDescriptors": [
                {
                  "path": "clusterUID",
                  "displayName": "Cluster UUID",
                  "description": "The UUID of the Infinispan instance that the Batch is associated with"
                },
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the batch operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "The reason for any batch related failures"
                }
              ],
              "specDescriptors": [
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "config",
                  "displayName": "Config Command",
                  "description": "Batch string to be executed"
                },
                {
                  "path": "configMap",
                  "displayName": "ConfigMap Name",
                  "description": "Name of the ConfigMap containing the batch and resource files to be executed"
                },
                {
                  "path": "container",
                  "displayName": "Container Spec",
                  "description": "Specify resource requirements per container"
                }
              ]
            },
            {
              "name": "caches.infinispan.org",
              "version": "v2alpha1",
              "kind": "Cache",
              "displayName": "Cache",
              "description": "Cache is the Schema for the caches API",
              "specDescriptors": [
                {
                  "path": "adminAuth.secretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "clusterName",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                },
                {
                  "path": "updates.strategy",
                  "displayName": "Update Strategy",
                  "description": "How updates to Cache CR template should be applied on the Infinispan server",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:recreate",
                    "urn:alm:descriptor:com.tectonic.ui:select:retain"
                  ]
                }
              ]
            },
            {
              "name": "infinispans.infinispan.org",
              "version": "v1",
              "kind": "Infinispan",
              "displayName": "Infinispan Cluster",
              "description": "Infinispan is the Schema for the infinispans API",
              "statusDescriptors": [
                {
                  "path": "consoleUrl",
                  "displayName": "Infinispan Console URL",
                  "description": "Infinispan Console URL",
                  "x-descriptors": [
                    "urn:alm:descriptor:org.w3:link"
                  ]
                },
                {
                  "path": "operand",
                  "displayName": "Operand Status",
                  "description": "The Operand status"
                },
                {
                  "path": "operator",
                  "displayName": "Operator Status",
                  "description": "The Operator status"
                },
                {
                  "path": "podStatus",
                  "displayName": "Pod Status",
                  "description": "The Pod's currently in the cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "configListener.enabled",
                  "displayName": "Toggle Config Listener",
                  "description": "If true, a dedicated pod is used to ensure that all config resources created on the Infinispan server have a matching CR resource",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "configListener.logging.level",
                  "displayName": "Logging Level",
                  "description": "The logging level to be used by the ConfigListener pod",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:debug",
                    "urn:alm:descriptor:com.tectonic.ui:select:info",
                    "urn:alm:descriptor:com.tectonic.ui:select:error"
                  ]
                },
                {
                  "path": "dependencies.volumeClaimName",
                  "displayName": "Persistent Volume Claim Name",
                  "description": "The Persistent Volume Claim that holds custom libraries",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:PersistentVolumeClaim"
                  ]
                },
                {
                  "path": "expose.host",
                  "displayName": "Route Hostname",
                  "description": "The network hostname for your Infinispan cluster",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:expose.type:Route"
                  ]
                },
                {
                  "path": "jmx.enabled",
                  "displayName": "Toggle Jmx",
                  "description": "If true, a JMX endpoint is exposed on the admin service",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "replicas",
                  "displayName": "Replicas",
                  "description": "The number of nodes in the Infinispan cluster.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podCount"
                  ]
                },
                {
                  "path": "security.credentialStoreSecretName",
                  "displayName": "CredentialStore Secret",
                  "description": "A secret that contains CredentialStore alias and password combinations",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "security.endpointAuthentication",
                  "displayName": "Toggle Authentication",
                  "description": "Enable or disable user authentication",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certSecretName",
                  "displayName": "Encryption Secret",
                  "description": "The secret that contains TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Secret"
                  ]
                },
                {
                  "path": "security.endpointEncryption.certServiceName",
                  "displayName": "Encryption Service",
                  "description": "A service that provides TLS certificates",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointEncryption.type:Service"
                  ]
                },
                {
                  "path": "security.endpointEncryption.type",
                  "displayName": "Configure Encryption",
                  "description": "Disable or modify endpoint encryption.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Service",
                    "urn:alm:descriptor:com.tectonic.ui:select:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:select:None"
                  ]
                },
                {
                  "path": "security.endpointSecretName",
                  "displayName": "Authentication Secret",
                  "description": "The secret that contains user credentials.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:security.endpointAuthentication:true"
                  ]
                },
                {
                  "path": "service.container.ephemeralStorage",
                  "displayName": "Container Ephemeral Storage",
                  "description": "Enable/disable container ephemeral storage",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "service.container.storage",
                  "displayName": "Storage Size",
                  "description": "The amount of storage for the persistent volume claim.",
                  "x-descriptors": [
                    "urn:alm:descriptor:text"
                  ]
                },
                {
                  "path": "service.container.storageClassName",
                  "displayName": "Storage Class Name",
                  "description": "The storage class object for persistent volume claims",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:StorageClass",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.container.ephemeralStorage:false"
                  ]
                },
                {
                  "path": "service.replicationFactor",
                  "displayName": "Number of Owners",
                  "description": "Cache replication factor, or number of copies for each entry.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "service.sites.locations[0].port",
                  "displayName": "Node Port",
                  "description": "Deprecated and to be removed on subsequent release. Use .URL with infinispan+xsite schema instead.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number",
                    "urn:alm:descriptor:com.tectonic.ui:fieldDependency:service.sites.local.expose.type:NodePort"
                  ]
                },
                {
                  "path": "service.sites.locations[0].secretName",
                  "displayName": "Backup Location Secret",
                  "description": "The access secret that allows backups to a remote site",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "service.type",
                  "displayName": "Service Type",
                  "description": "The service type",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Cache",
                    "urn:alm:descriptor:com.tectonic.ui:select:DataGrid"
                  ]
                }
              ]
            },
            {
              "name": "restores.infinispan.org",
              "version": "v2alpha1",
              "kind": "Restore",
              "displayName": "Restore",
              "description": "Restore is the Schema for the restores API",
              "statusDescriptors": [
                {
                  "path": "phase",
                  "displayName": "Phase",
                  "description": "Current phase of the restore operation"
                },
                {
                  "path": "reason",
                  "displayName": "Reason",
                  "description": "Reason indicates the reason for any restore related failures."
                }
              ],
              "specDescriptors": [
                {
                  "path": "backup",
                  "displayName": "Backup Name",
                  "description": "The Infinispan Backup to restore",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v2alpha1:Backup"
                  ]
                },
                {
                  "path": "cluster",
                  "displayName": "Cluster Name",
                  "description": "Infinispan cluster name",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:infinispan.org:v1:Infinispan"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat Data Grid is a distributed, in-memory data store built from tried and trusted open-source technology.\n\n### Data Grid\n* **Schemaless structure:** Store objects in key/value pairs.\n* **Grid storage:** Distribute and replicate data across clusters.\n* **Elasticity:** Scale to meet workload demands without service disruption.\n* **Polyglot access:** Read, write, and query from multiple client languages with different endpoints.\n* **Continuous availability:** Create a fault-tolerant caching service that guarantees business continuity.\n\n### Operator capabilities\n* Built-in intelligence to automate Data Grid cluster deployment.\n* Infinispan CR for service configuration.\n* Cross site configuration and management.\n* Deployment of Grafana and Prometheus resources.\n* Cache CR for fully configurable caches.\n* Batch CR for scripting bulk resource creation.\n* REST and Hot Rod endpoints available at port `11222`.\n* Default application user: `developer`. Infinispan Operator generates credentials in an authentication secret at startup.\n* Data Grid pods request 1Gi of memory and 1Gi of ReadWriteOnce persistent storage. Data Grid Operator lets you adjust resource allocation to suit your requirements.\n",
        "displayName": "Data Grid",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": true
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "infinispan",
          "key value",
          "database",
          "datagrid",
          "open source"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Release information",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5/html/data_grid_operator_8.5_release_notes/"
          },
          {
            "name": "Documentation",
            "url": "https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.5"
          },
          {
            "name": "Operator source code",
            "url": "https://github.com/infinispan/infinispan-operator"
          },
          {
            "name": "Product page",
            "url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid"
          }
        ],
        "maintainers": [
          {
            "name": "Red Hat",
            "email": "customerservice@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.24.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "",
      "image": "registry.redhat.io/datagrid/datagrid-8-prod-operator-bundle@sha256:1b65d97db0ddf8740932cf4afad6bc3015325e2d1034c2661af97b99fe00e266"
    },
    {
      "name": "openjdk_8_4_1_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:24cf79efa89bbfa495665b1711a27531b7ab0813695a89b2c38c96c2e792eb24"
    },
    {
      "name": "openjdk_8_4_3_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:424b30dccd773f69c079b35a42e8c3e339246c5d490e14e3fcfb8bd8144a9160"
    },
    {
      "name": "openjdk_8_4_6_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:4dbe1b7a1a36990c0a31d5a66f3cc4ca2954c9e1ec3b87431113a4111530277d"
    },
    {
      "name": "openjdk_8_4_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:532dca6facb584c1261c0480c499af9f857c70dc390e0d46e46afec2561468af"
    },
    {
      "name": "openjdk_8_4_7_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:54bc26a0fddc160a4e0d1a813aec78abb3c9cb77db5039b74c23de759faa67f5"
    },
    {
      "name": "openjdk_8_4_3_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:554b831a0803d55a4e3b7022011b5a5f6d2b4b65009065a9b28bc8e55fc3ad46"
    },
    {
      "name": "openjdk_8_4_6_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:78a6bed6fcb6962e5689b92806789b72a66db21b7c607b392a573c98593f2c09"
    },
    {
      "name": "openjdk_8_4_4_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9223b4b5c1c866a91033dac40f30a4caae0f6946cdb64935a3fdfffdb9ede660"
    },
    {
      "name": "openjdk_8_4_1_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:985193caf9bc3698c4d85aeedd1cfea09bccda881636d67885387b2a83c65ebd"
    },
    {
      "name": "openjdk_8_4_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:9d9e466b7c367d0406406550c74bc790aa68f3f875ea4f652eb28f2e25a05458"
    },
    {
      "name": "openjdk_8_4_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:ae852e4679978725bb7d24c1bdfe25b40bd883130ed04a36d4fca49dbea024ef"
    },
    {
      "name": "openjdk_8_4_8_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:b56269cb849afca34e7f82cc8e01a44bb32af6126f24db28019a58e556d4cb3c"
    },
    {
      "name": "openjdk_8_4_5_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bcb040bf640691568a93a4c71c8072c37ffb76b4296ade83186f279862b7f197"
    },
    {
      "name": "openjdk_8_4_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:bf7760520f5bea151a531d538d525c4591c47166995aefb4d77fef138de11544"
    },
    {
      "name": "openjdk_8_4_8_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:c15d4fd827f554291c14851f187947f4109c0e20257fa2f1e141b32669569358"
    },
    {
      "name": "openjdk_8_4_5_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel8@sha256:d522a20ca6909bd464f85967d8b86fe42b83f773478a80785f9a85a0cb87dfed"
    },
    {
      "name": "datagrid-8-rhel9-operator-60786dd91f9019d25ab5e271f27eb94bffd4c41d4a8ebb7399440d28f547a4e9-annotation",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:60786dd91f9019d25ab5e271f27eb94bffd4c41d4a8ebb7399440d28f547a4e9"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9-operator@sha256:60786dd91f9019d25ab5e271f27eb94bffd4c41d4a8ebb7399440d28f547a4e9"
    },
    {
      "name": "openjdk_8_5_2_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:11bfe5c8109d26164cff428232b2001ab8df464f14a382661b936543336e2960"
    },
    {
      "name": "openjdk_8_5_0_3",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:48cf13e71953cea6f62354289f0d8ece7a8a481ee0bb2c76eb9352d438db9ca3"
    },
    {
      "name": "openjdk_8_5_0_2",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:5656cd188d054551489d45be996266d03e3faa8814b8bfc0f360cf0dceb83cbe"
    },
    {
      "name": "openjdk_8_5_1_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:c25e3152d6a6b6d5cd86d311bf567e594b9948440785209cd8d7986076a5a10d"
    },
    {
      "name": "openjdk_8_5_0_1",
      "image": "registry.redhat.io/datagrid/datagrid-8-rhel9@sha256:f59ae21773dfc207454a709ac5f7aad2be6a6a20ac88da26c379edeed54537b8"
    }
  ]
}

{
  "schema": "olm.package",
  "name": "tempo-product",
  "defaultChannel": "stable",
  "icon": {
    "base64data": "",
    "mediatype": "image/png"
  }
}
{
  "schema": "olm.channel",
  "name": "stable",
  "package": "tempo-product",
  "entries": [
    {
      "name": "tempo-operator.v0.1.0-6"
    },
    {
      "name": "tempo-operator.v0.1.0-6-0.1687199947.p",
      "skips": [
        "tempo-operator.v0.1.0-6"
      ]
    },
    {
      "name": "tempo-operator.v0.10.0-6",
      "replaces": "tempo-operator.v0.8.0-3",
      "skipRange": ">=0.6.0 <0.10.0-6"
    },
    {
      "name": "tempo-operator.v0.10.0-7",
      "replaces": "tempo-operator.v0.10.0-6",
      "skipRange": ">=0.6.0 <0.10.0-7"
    },
    {
      "name": "tempo-operator.v0.10.0-8",
      "replaces": "tempo-operator.v0.10.0-7",
      "skipRange": ">=0.6.0 <0.10.0-8"
    },
    {
      "name": "tempo-operator.v0.13.0-1",
      "skipRange": ">=0.6.0 <0.13.0-1"
    },
    {
      "name": "tempo-operator.v0.13.0-1-0.1730817419.p",
      "replaces": "tempo-operator.v0.10.0-8",
      "skips": [
        "tempo-operator.v0.13.0-1"
      ],
      "skipRange": ">=0.6.0 <0.13.0-1"
    },
    {
      "name": "tempo-operator.v0.3.1-3",
      "replaces": "tempo-operator.v0.1.0-6-0.1687199947.p"
    },
    {
      "name": "tempo-operator.v0.6.0-2",
      "replaces": "tempo-operator.v0.3.1-3"
    },
    {
      "name": "tempo-operator.v0.8.0-2",
      "replaces": "tempo-operator.v0.6.0-2"
    },
    {
      "name": "tempo-operator.v0.8.0-3",
      "replaces": "tempo-operator.v0.8.0-2"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.1.0-6",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ff86c632e7eadeae0c2f50f7b9ef1d5cb2d05ed69ec618494bf164a980a5c54e",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.1.0-6"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Logging & Tracing",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0",
          "createdAt": "2023-04-27 14:06:52.655555",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack is the Schema for the tempostacks API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Query Frontend",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "NOTE: currently this field is not considered. ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are “s”, “m” and “h”. example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are “s”, “m” and “h”. example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the tempo TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap Name",
                  "description": "CA is the name of a ConfigMap containing a CA certificate. It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuerySpec defines Jaeger Query specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled is used to define if Jaeger Query component should be created."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines Jaeger Query Ingress options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines OpenShift Route specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination specifies the termination type. By default \"edge\" is used."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines the id of the tenant."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines the name of the tenant. The value of this field should be sent in X-Scope-OrgID header to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:dynamic"
                  ]
                }
              ]
            }
          ]
        },
        "description": "OpenShift Operator for Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Before you start\nMake that your system has an S3-compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n## Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\n\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription. This operator is at the moment tech-preview.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tempo",
          "tracing",
          "database"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://tempo-operator.domain"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4564ca3dc5bac80d6faddaf94c817fbbc270698a9399d8a21ee1005d85ceda56"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ff86c632e7eadeae0c2f50f7b9ef1d5cb2d05ed69ec618494bf164a980a5c54e"
    },
    {
      "name": "tempo-rhel8-operator-cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:cf9fd7d22321218a57498e787cf15be23fd47036120463fafea877bffd97fee0"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.1.0-6-0.1687199947.p",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:0f66fffabab48f6084cbdd1495c70825b6cc411d3447bee20cb41a437b8d394a",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.1.0-6+0.1687199947.p"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Logging & Tracing",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f",
          "createdAt": "2023-04-27 14:06:52.655555",
          "olm.substitutesFor": "tempo-operator.v0.1.0-6",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack is the Schema for the tempostacks API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Query Frontend",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "NOTE: currently this field is not considered. ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are “s”, “m” and “h”. example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are “s”, “m” and “h”. example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the tempo TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap Name",
                  "description": "CA is the name of a ConfigMap containing a CA certificate. It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuerySpec defines Jaeger Query specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled is used to define if Jaeger Query component should be created."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines Jaeger Query Ingress options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines OpenShift Route specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination specifies the termination type. By default \"edge\" is used."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines the id of the tenant."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines the name of the tenant. The value of this field should be sent in X-Scope-OrgID header to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:dynamic"
                  ]
                }
              ]
            }
          ]
        },
        "description": "OpenShift Operator for Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Before you start\nMake that your system has an S3-compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n## Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\n\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription. This operator is at the moment tech-preview.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tempo",
          "tracing",
          "database"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://tempo-operator.domain"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4564ca3dc5bac80d6faddaf94c817fbbc270698a9399d8a21ee1005d85ceda56"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:0f66fffabab48f6084cbdd1495c70825b6cc411d3447bee20cb41a437b8d394a"
    },
    {
      "name": "tempo-rhel8-operator-0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0b78c42253e6a036892e3c04b97c4ed5a1f4d15bfd5cd8e563c61df71469bf6f"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.10.0-6",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b983271f0f7c78154bb832360c6713f58f038831a4eae3fc2d909cca44e7cf66",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoMonolithic",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.10.0-6"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoMonolithic\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"jaegerui\": {\n        \"enabled\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2\",\n            \"memory\": \"2Gi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2\",\n          \"memory\": \"2Gi\"\n        }\n      },\n      \"storage\": {\n        \"traces\": {\n          \"backend\": \"memory\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665",
          "createdAt": "2024-05-30 10:43:36.643259",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.6.0 <0.10.0-6",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempomonolithics.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoMonolithic",
              "displayName": "TempoMonolithic",
              "description": "TempoMonolithic manages a Tempo deployment in monolithic mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.tempo",
                  "displayName": "Tempo",
                  "description": "Tempo is a map of the pod status of the Tempo pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "ingestion.otlp.grpc.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over gRPC is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over HTTP is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if the Jaeger UI component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if an Ingress object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.route.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Route object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.grafana.dataSource.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Grafana data source should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.prometheusRules.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if PrometheusRule objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.serviceMonitors.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if ServiceMonitor objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage",
                  "displayName": "Storage",
                  "description": "Storage defines the storage configuration."
                },
                {
                  "path": "storage.traces.backend",
                  "displayName": "Storage Backend",
                  "description": "Backend defines the backend for storing traces. Default: memory."
                },
                {
                  "path": "storage.traces.s3.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion",
                  "displayName": "Ingestion",
                  "description": "Ingestion defines the trace ingestion configuration."
                },
                {
                  "path": "jaegerui.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Jaeger UI container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "storage.traces.size",
                  "displayName": "Size",
                  "description": "Size defines the size of the volume where traces are stored. For in-memory storage, this defines the size of the tmpfs volume. For persistent volume storage, this defines the size of the persistent volume. For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for all other backends.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "jaegerui",
                  "displayName": "Jaeger UI",
                  "description": "JaegerUI defines the Jaeger UI configuration."
                },
                {
                  "path": "jaegerui.ingress",
                  "displayName": "Ingress",
                  "description": "Ingress defines the Ingress configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.route",
                  "displayName": "Route",
                  "description": "Route defines the OpenShift route configuration for the Jaeger UI."
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "Observability defines the observability configuration of the Tempo deployment."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Tempo container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "affinity",
                  "displayName": "Affinity",
                  "description": "Affinity defines the Affinity rules for scheduling pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configuration",
                  "description": "ExtraConfig defines any extra (overlay) configuration of components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "ingestion.otlp",
                  "displayName": "OTLP",
                  "description": "OTLP defines the ingestion configuration for the OTLP protocol."
                },
                {
                  "path": "ingestion.otlp.grpc",
                  "displayName": "gRPC",
                  "description": "GRPC defines the OTLP over gRPC configuration."
                },
                {
                  "path": "ingestion.otlp.grpc.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/gRPC ingestion."
                },
                {
                  "path": "ingestion.otlp.grpc.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "ingestion.otlp.http",
                  "displayName": "HTTP",
                  "description": "HTTP defines the OTLP over HTTP configuration."
                },
                {
                  "path": "ingestion.otlp.http.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/HTTP ingestion."
                },
                {
                  "path": "ingestion.otlp.http.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "jaegerui.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.ingressClassName",
                  "displayName": "Ingress Class Name",
                  "description": "IngressClassName defines the name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource."
                },
                {
                  "path": "jaegerui.route.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Route object."
                },
                {
                  "path": "jaegerui.route.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Route object."
                },
                {
                  "path": "jaegerui.route.termination",
                  "displayName": "TLS Termination",
                  "description": "Termination specifies the termination type."
                },
                {
                  "path": "management",
                  "displayName": "Management State",
                  "description": "ManagementState defines whether this instance is managed by the operator or self-managed. Default: Managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "multitenancy",
                  "displayName": "Multi-Tenancy",
                  "description": "Multitenancy defines the multi-tenancy configuration."
                },
                {
                  "path": "multitenancy.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "multitenancy.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "multitenancy.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "multitenancy.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "multitenancy.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "multitenancy.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "multitenancy.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                },
                {
                  "path": "multitenancy.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the gateway container. The gateway performs authentication and authorization of incoming requests when multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines which labels are required by a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana",
                  "description": "Grafana defines the Grafana configuration of the Tempo deployment."
                },
                {
                  "path": "observability.grafana.dataSource",
                  "displayName": "Grafana data source",
                  "description": "DataSource defines the Grafana data source configuration."
                },
                {
                  "path": "observability.grafana.dataSource.instanceSelector",
                  "displayName": "Instance Selector",
                  "description": "InstanceSelector defines the Grafana instance where the data source should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana"
                  ]
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics",
                  "description": "Metrics defines the metric configuration of the Tempo deployment."
                },
                {
                  "path": "observability.metrics.prometheusRules",
                  "displayName": "Prometheus Rules",
                  "description": "ServiceMonitors defines the PrometheusRule configuration."
                },
                {
                  "path": "observability.metrics.serviceMonitors",
                  "displayName": "Service Monitors",
                  "description": "ServiceMonitors defines the ServiceMonitor configuration."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the Service Account to use for all Tempo components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "storage.traces",
                  "displayName": "Traces",
                  "description": "Traces defines the storage configuration for traces."
                },
                {
                  "path": "storage.traces.azure",
                  "displayName": "Azure Storage",
                  "description": "Azure defines the configuration for Azure Storage."
                },
                {
                  "path": "storage.traces.azure.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.gcs",
                  "displayName": "Google Cloud Storage",
                  "description": "GCP defines the configuration for Google Cloud Storage."
                },
                {
                  "path": "storage.traces.gcs.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3",
                  "displayName": "Amazon S3",
                  "description": "S3 defines the configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines the tolerations of a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                }
              ]
            },
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack manages a Tempo deployment in microservices mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Gateway",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "storage.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.distributor.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configurations"
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "hashRing",
                  "displayName": "Hash Ring",
                  "description": "HashRing defines the spec for the distributed hash ring configuration.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "hashRing.memberlist",
                  "displayName": "Memberlist Config",
                  "description": "MemberList configuration spec"
                },
                {
                  "path": "hashRing.memberlist.enableIPv6",
                  "displayName": "Enable IPv6",
                  "description": "EnableIPv6 enables IPv6 support for the memberlist based hash ring.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana Config",
                  "description": "Grafana defines the Grafana configuration for operands."
                },
                {
                  "path": "observability.grafana.createDatasource",
                  "displayName": "Create Datasource for Tempo",
                  "description": "CreateDatasource specifies if a Grafana Datasource should be created for Tempo."
                },
                {
                  "path": "observability.grafana.instanceSelector",
                  "displayName": "Create CreateDatasource for Tempo",
                  "description": "InstanceSelector specifies the Grafana instance where the datasource should be created."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.compactor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.distributor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers"
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.enabled",
                  "displayName": "Enabled",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.gateway.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.ingester.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.querier.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuery defines options specific to the Jaeger Query component."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled defines if the Jaeger Query component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines the options for the Jaeger Query ingress."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines the monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables the monitor tab in the Jaeger console. The PrometheusEndpoint must be configured to enable this feature.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.servicesQueryDuration",
                  "displayName": "ServicesQueryDuration",
                  "description": "ServicesQueryDuration defines how long the services will be available in the services list"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.queryFrontend.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\n`TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.\nPlease ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tempo",
          "observability",
          "rhosdt",
          "database",
          "monitoring",
          "tracing"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.25.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b33793126e32e75f4fa02dbb014eaa7458f36c70f316a7383171a02c38509f1"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:a1a5ac36e88fb4bde7929f48c48cc73e6adecbc4d6cf706349a72ced7732d709"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:90271dab36fd2f453fd6f3d19f1fae282b3c277fc1ff957221ba624a3a8909ae"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b983271f0f7c78154bb832360c6713f58f038831a4eae3fc2d909cca44e7cf66"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:e499fd2fd9798770d463974f9664deec37ca4cce3c782caaf9827d76efd74587"
    },
    {
      "name": "tempo-rhel8-operator-fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:fc817f54324540927b6105a247ee03a2b9d11bde8266450d06e0f809e6087665"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:c735ff5038e61567f960d1843e0d231b23aa5a78407acaec60b98fe48f1d74d0"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.10.0-7",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:57cbaada2dce7abcabaf94d441e07d77126a60726adbb829808e157f9d0897cb",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoMonolithic",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.10.0-7"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoMonolithic\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"jaegerui\": {\n        \"enabled\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2\",\n            \"memory\": \"2Gi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2\",\n          \"memory\": \"2Gi\"\n        }\n      },\n      \"storage\": {\n        \"traces\": {\n          \"backend\": \"memory\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555",
          "createdAt": "2024-06-10 19:16:41.677131",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.6.0 <0.10.0-7",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempomonolithics.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoMonolithic",
              "displayName": "TempoMonolithic",
              "description": "TempoMonolithic manages a Tempo deployment in monolithic mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.tempo",
                  "displayName": "Tempo",
                  "description": "Tempo is a map of the pod status of the Tempo pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "ingestion.otlp.grpc.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over gRPC is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over HTTP is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if the Jaeger UI component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if an Ingress object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.route.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Route object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.grafana.dataSource.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Grafana data source should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.prometheusRules.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if PrometheusRule objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.serviceMonitors.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if ServiceMonitor objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage",
                  "displayName": "Storage",
                  "description": "Storage defines the storage configuration."
                },
                {
                  "path": "storage.traces.backend",
                  "displayName": "Storage Backend",
                  "description": "Backend defines the backend for storing traces. Default: memory."
                },
                {
                  "path": "storage.traces.s3.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion",
                  "displayName": "Ingestion",
                  "description": "Ingestion defines the trace ingestion configuration."
                },
                {
                  "path": "jaegerui.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Jaeger UI container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "storage.traces.size",
                  "displayName": "Size",
                  "description": "Size defines the size of the volume where traces are stored. For in-memory storage, this defines the size of the tmpfs volume. For persistent volume storage, this defines the size of the persistent volume. For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for all other backends.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "jaegerui",
                  "displayName": "Jaeger UI",
                  "description": "JaegerUI defines the Jaeger UI configuration."
                },
                {
                  "path": "jaegerui.ingress",
                  "displayName": "Ingress",
                  "description": "Ingress defines the Ingress configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.route",
                  "displayName": "Route",
                  "description": "Route defines the OpenShift route configuration for the Jaeger UI."
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "Observability defines the observability configuration of the Tempo deployment."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Tempo container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "affinity",
                  "displayName": "Affinity",
                  "description": "Affinity defines the Affinity rules for scheduling pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configuration",
                  "description": "ExtraConfig defines any extra (overlay) configuration of components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "ingestion.otlp",
                  "displayName": "OTLP",
                  "description": "OTLP defines the ingestion configuration for the OTLP protocol."
                },
                {
                  "path": "ingestion.otlp.grpc",
                  "displayName": "gRPC",
                  "description": "GRPC defines the OTLP over gRPC configuration."
                },
                {
                  "path": "ingestion.otlp.grpc.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/gRPC ingestion."
                },
                {
                  "path": "ingestion.otlp.grpc.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "ingestion.otlp.http",
                  "displayName": "HTTP",
                  "description": "HTTP defines the OTLP over HTTP configuration."
                },
                {
                  "path": "ingestion.otlp.http.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/HTTP ingestion."
                },
                {
                  "path": "ingestion.otlp.http.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "jaegerui.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.ingressClassName",
                  "displayName": "Ingress Class Name",
                  "description": "IngressClassName defines the name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource."
                },
                {
                  "path": "jaegerui.route.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Route object."
                },
                {
                  "path": "jaegerui.route.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Route object."
                },
                {
                  "path": "jaegerui.route.termination",
                  "displayName": "TLS Termination",
                  "description": "Termination specifies the termination type."
                },
                {
                  "path": "management",
                  "displayName": "Management State",
                  "description": "ManagementState defines whether this instance is managed by the operator or self-managed. Default: Managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "multitenancy",
                  "displayName": "Multi-Tenancy",
                  "description": "Multitenancy defines the multi-tenancy configuration."
                },
                {
                  "path": "multitenancy.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "multitenancy.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "multitenancy.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "multitenancy.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "multitenancy.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "multitenancy.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "multitenancy.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                },
                {
                  "path": "multitenancy.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the gateway container. The gateway performs authentication and authorization of incoming requests when multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines which labels are required by a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana",
                  "description": "Grafana defines the Grafana configuration of the Tempo deployment."
                },
                {
                  "path": "observability.grafana.dataSource",
                  "displayName": "Grafana data source",
                  "description": "DataSource defines the Grafana data source configuration."
                },
                {
                  "path": "observability.grafana.dataSource.instanceSelector",
                  "displayName": "Instance Selector",
                  "description": "InstanceSelector defines the Grafana instance where the data source should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana"
                  ]
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics",
                  "description": "Metrics defines the metric configuration of the Tempo deployment."
                },
                {
                  "path": "observability.metrics.prometheusRules",
                  "displayName": "Prometheus Rules",
                  "description": "ServiceMonitors defines the PrometheusRule configuration."
                },
                {
                  "path": "observability.metrics.serviceMonitors",
                  "displayName": "Service Monitors",
                  "description": "ServiceMonitors defines the ServiceMonitor configuration."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the Service Account to use for all Tempo components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "storage.traces",
                  "displayName": "Traces",
                  "description": "Traces defines the storage configuration for traces."
                },
                {
                  "path": "storage.traces.azure",
                  "displayName": "Azure Storage",
                  "description": "Azure defines the configuration for Azure Storage."
                },
                {
                  "path": "storage.traces.azure.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.gcs",
                  "displayName": "Google Cloud Storage",
                  "description": "GCP defines the configuration for Google Cloud Storage."
                },
                {
                  "path": "storage.traces.gcs.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3",
                  "displayName": "Amazon S3",
                  "description": "S3 defines the configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines the tolerations of a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                }
              ]
            },
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack manages a Tempo deployment in microservices mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Gateway",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "storage.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.distributor.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configurations"
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "hashRing",
                  "displayName": "Hash Ring",
                  "description": "HashRing defines the spec for the distributed hash ring configuration.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "hashRing.memberlist",
                  "displayName": "Memberlist Config",
                  "description": "MemberList configuration spec"
                },
                {
                  "path": "hashRing.memberlist.enableIPv6",
                  "displayName": "Enable IPv6",
                  "description": "EnableIPv6 enables IPv6 support for the memberlist based hash ring.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana Config",
                  "description": "Grafana defines the Grafana configuration for operands."
                },
                {
                  "path": "observability.grafana.createDatasource",
                  "displayName": "Create Datasource for Tempo",
                  "description": "CreateDatasource specifies if a Grafana Datasource should be created for Tempo."
                },
                {
                  "path": "observability.grafana.instanceSelector",
                  "displayName": "Create CreateDatasource for Tempo",
                  "description": "InstanceSelector specifies the Grafana instance where the datasource should be created."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.compactor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.distributor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers"
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.enabled",
                  "displayName": "Enabled",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.gateway.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.ingester.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.querier.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuery defines options specific to the Jaeger Query component."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled defines if the Jaeger Query component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines the options for the Jaeger Query ingress."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines the monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables the monitor tab in the Jaeger console. The PrometheusEndpoint must be configured to enable this feature.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.servicesQueryDuration",
                  "displayName": "ServicesQueryDuration",
                  "description": "ServicesQueryDuration defines how long the services will be available in the services list"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.queryFrontend.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\n`TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.\nPlease ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "observability",
          "rhosdt",
          "database",
          "tracing",
          "monitoring",
          "tempo"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.25.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c2e9805d2c48d3cea7a9e348f0c37de435302e2e244415541c8a6fd75d77132"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:8f0a4b0f01d3ec5dfcbe71fccfd9476b0af972e917325dd14368d4bd788afb45"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:99703dd11895c936a727c8a92f65f2f538bb1338deee12d3399f7359760add80"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:57cbaada2dce7abcabaf94d441e07d77126a60726adbb829808e157f9d0897cb"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:8fb0d3bef904a99434bf026d633a5448947a716136bc7c9f2d0481fe02e270fb"
    },
    {
      "name": "tempo-rhel8-operator-49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:49b24b932421590bab35dab44dae0bb2217af61d64a4b5387002308435840555"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:541c08a6a6816ee954ed2e9de6261fdcd3342f06a4902aa5dd03ad18a6c676d4"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.10.0-8",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:2e24ee74d2cc78c6c11f9a62f9d086e3a7c0b3009cb56734477447ea79aaeb76",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoMonolithic",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.10.0-8"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoMonolithic\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"jaegerui\": {\n        \"enabled\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2\",\n            \"memory\": \"2Gi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2\",\n          \"memory\": \"2Gi\"\n        }\n      },\n      \"storage\": {\n        \"traces\": {\n          \"backend\": \"memory\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c",
          "createdAt": "2024-07-05 18:06:02.299879",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.6.0 <0.10.0-8",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempomonolithics.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoMonolithic",
              "displayName": "TempoMonolithic",
              "description": "TempoMonolithic manages a Tempo deployment in monolithic mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.tempo",
                  "displayName": "Tempo",
                  "description": "Tempo is a map of the pod status of the Tempo pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "ingestion.otlp.grpc.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over gRPC is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over HTTP is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if the Jaeger UI component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if an Ingress object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.route.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Route object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.grafana.dataSource.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Grafana data source should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.prometheusRules.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if PrometheusRule objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.serviceMonitors.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if ServiceMonitor objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage",
                  "displayName": "Storage",
                  "description": "Storage defines the storage configuration."
                },
                {
                  "path": "storage.traces.backend",
                  "displayName": "Storage Backend",
                  "description": "Backend defines the backend for storing traces. Default: memory."
                },
                {
                  "path": "storage.traces.s3.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion",
                  "displayName": "Ingestion",
                  "description": "Ingestion defines the trace ingestion configuration."
                },
                {
                  "path": "jaegerui.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Jaeger UI container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "storage.traces.size",
                  "displayName": "Size",
                  "description": "Size defines the size of the volume where traces are stored. For in-memory storage, this defines the size of the tmpfs volume. For persistent volume storage, this defines the size of the persistent volume. For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for all other backends.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "jaegerui",
                  "displayName": "Jaeger UI",
                  "description": "JaegerUI defines the Jaeger UI configuration."
                },
                {
                  "path": "jaegerui.ingress",
                  "displayName": "Ingress",
                  "description": "Ingress defines the Ingress configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.route",
                  "displayName": "Route",
                  "description": "Route defines the OpenShift route configuration for the Jaeger UI."
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "Observability defines the observability configuration of the Tempo deployment."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Tempo container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "affinity",
                  "displayName": "Affinity",
                  "description": "Affinity defines the Affinity rules for scheduling pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configuration",
                  "description": "ExtraConfig defines any extra (overlay) configuration of components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "ingestion.otlp",
                  "displayName": "OTLP",
                  "description": "OTLP defines the ingestion configuration for the OTLP protocol."
                },
                {
                  "path": "ingestion.otlp.grpc",
                  "displayName": "gRPC",
                  "description": "GRPC defines the OTLP over gRPC configuration."
                },
                {
                  "path": "ingestion.otlp.grpc.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/gRPC ingestion."
                },
                {
                  "path": "ingestion.otlp.grpc.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "ingestion.otlp.http",
                  "displayName": "HTTP",
                  "description": "HTTP defines the OTLP over HTTP configuration."
                },
                {
                  "path": "ingestion.otlp.http.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/HTTP ingestion."
                },
                {
                  "path": "ingestion.otlp.http.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "jaegerui.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.ingressClassName",
                  "displayName": "Ingress Class Name",
                  "description": "IngressClassName defines the name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource."
                },
                {
                  "path": "jaegerui.route.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Route object."
                },
                {
                  "path": "jaegerui.route.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Route object."
                },
                {
                  "path": "jaegerui.route.termination",
                  "displayName": "TLS Termination",
                  "description": "Termination specifies the termination type."
                },
                {
                  "path": "management",
                  "displayName": "Management State",
                  "description": "ManagementState defines whether this instance is managed by the operator or self-managed. Default: Managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "multitenancy",
                  "displayName": "Multi-Tenancy",
                  "description": "Multitenancy defines the multi-tenancy configuration."
                },
                {
                  "path": "multitenancy.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "multitenancy.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "multitenancy.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "multitenancy.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "multitenancy.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "multitenancy.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "multitenancy.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                },
                {
                  "path": "multitenancy.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the gateway container. The gateway performs authentication and authorization of incoming requests when multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines which labels are required by a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana",
                  "description": "Grafana defines the Grafana configuration of the Tempo deployment."
                },
                {
                  "path": "observability.grafana.dataSource",
                  "displayName": "Grafana data source",
                  "description": "DataSource defines the Grafana data source configuration."
                },
                {
                  "path": "observability.grafana.dataSource.instanceSelector",
                  "displayName": "Instance Selector",
                  "description": "InstanceSelector defines the Grafana instance where the data source should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana"
                  ]
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics",
                  "description": "Metrics defines the metric configuration of the Tempo deployment."
                },
                {
                  "path": "observability.metrics.prometheusRules",
                  "displayName": "Prometheus Rules",
                  "description": "ServiceMonitors defines the PrometheusRule configuration."
                },
                {
                  "path": "observability.metrics.serviceMonitors",
                  "displayName": "Service Monitors",
                  "description": "ServiceMonitors defines the ServiceMonitor configuration."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the Service Account to use for all Tempo components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "storage.traces",
                  "displayName": "Traces",
                  "description": "Traces defines the storage configuration for traces."
                },
                {
                  "path": "storage.traces.azure",
                  "displayName": "Azure Storage",
                  "description": "Azure defines the configuration for Azure Storage."
                },
                {
                  "path": "storage.traces.azure.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.gcs",
                  "displayName": "Google Cloud Storage",
                  "description": "GCP defines the configuration for Google Cloud Storage."
                },
                {
                  "path": "storage.traces.gcs.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3",
                  "displayName": "Amazon S3",
                  "description": "S3 defines the configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines the tolerations of a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                }
              ]
            },
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack manages a Tempo deployment in microservices mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Gateway",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "storage.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.distributor.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configurations"
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "hashRing",
                  "displayName": "Hash Ring",
                  "description": "HashRing defines the spec for the distributed hash ring configuration.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "hashRing.memberlist",
                  "displayName": "Memberlist Config",
                  "description": "MemberList configuration spec"
                },
                {
                  "path": "hashRing.memberlist.enableIPv6",
                  "displayName": "Enable IPv6",
                  "description": "EnableIPv6 enables IPv6 support for the memberlist based hash ring.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana Config",
                  "description": "Grafana defines the Grafana configuration for operands."
                },
                {
                  "path": "observability.grafana.createDatasource",
                  "displayName": "Create Datasource for Tempo",
                  "description": "CreateDatasource specifies if a Grafana Datasource should be created for Tempo."
                },
                {
                  "path": "observability.grafana.instanceSelector",
                  "displayName": "Create CreateDatasource for Tempo",
                  "description": "InstanceSelector specifies the Grafana instance where the datasource should be created."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.compactor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.distributor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers"
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.enabled",
                  "displayName": "Enabled",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.gateway.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.ingester.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.querier.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuery defines options specific to the Jaeger Query component."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled defines if the Jaeger Query component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines the options for the Jaeger Query ingress."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines the monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables the monitor tab in the Jaeger console. The PrometheusEndpoint must be configured to enable this feature.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.servicesQueryDuration",
                  "displayName": "ServicesQueryDuration",
                  "description": "ServicesQueryDuration defines how long the services will be available in the services list"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.queryFrontend.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\n`TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.\nPlease ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tempo",
          "tracing",
          "rhosdt",
          "monitoring",
          "observability",
          "database"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.25.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:518691d157b3e3b5031a2b1e4cc3f415839536079bb8570ae8690ac92d302ba0"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:deb0e0697296e026babee0ac51a57ecda856ab217515d3931d5b593efdd092d0"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:ad8a7f62784273e99893db31e53430f179dc142f09e6618bebc33d8bd8a0ef84"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:2e24ee74d2cc78c6c11f9a62f9d086e3a7c0b3009cb56734477447ea79aaeb76"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:afe94eb5fccd2821a4b37d383b5e0b527397c37679756609a5740489c7ff4aab"
    },
    {
      "name": "tempo-rhel8-operator-1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:1aa9114c7688ed320467f165d8344277e51da1bb3c52205fe957ff46dee4ec6c"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:26f66187697c3dbc4b278bed1b26d4ca84d1b42ee0448f7f87476ceb6eb20792"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.13.0-1",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ad1da7f9941a2a887431da733bf7e59ef931ea281cf6c36da49fb1dc1a4c4cfc",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoMonolithic",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.13.0-1"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoMonolithic\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"jaegerui\": {\n        \"enabled\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2\",\n            \"memory\": \"2Gi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2\",\n          \"memory\": \"2Gi\"\n        }\n      },\n      \"storage\": {\n        \"traces\": {\n          \"backend\": \"memory\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc",
          "createdAt": "2024-08-28 14:01:06.880923",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.6.0 <0.13.0-1",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempomonolithics.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoMonolithic",
              "displayName": "TempoMonolithic",
              "description": "TempoMonolithic manages a Tempo deployment in monolithic mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.tempo",
                  "displayName": "Tempo",
                  "description": "Tempo is a map of the pod status of the Tempo pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "ingestion.otlp.grpc.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over gRPC is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over HTTP is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.authentication.enabled",
                  "displayName": "Enabled",
                  "description": "Defines if the authentication will be enabled for jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if the Jaeger UI component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if an Ingress object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.route.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Route object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.grafana.dataSource.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Grafana data source should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.prometheusRules.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if PrometheusRule objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.serviceMonitors.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if ServiceMonitor objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage",
                  "displayName": "Storage",
                  "description": "Storage defines the storage configuration."
                },
                {
                  "path": "storage.traces.backend",
                  "displayName": "Storage Backend",
                  "description": "Backend defines the backend for storing traces. Default: memory."
                },
                {
                  "path": "storage.traces.s3.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion",
                  "displayName": "Ingestion",
                  "description": "Ingestion defines the trace ingestion configuration."
                },
                {
                  "path": "jaegerui.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Jaeger UI container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "storage.traces.size",
                  "displayName": "Size",
                  "description": "Size defines the size of the volume where traces are stored. For in-memory storage, this defines the size of the tmpfs volume. For persistent volume storage, this defines the size of the persistent volume. For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for all other backends.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "jaegerui",
                  "displayName": "Jaeger UI",
                  "description": "JaegerUI defines the Jaeger UI configuration."
                },
                {
                  "path": "jaegerui.ingress",
                  "displayName": "Ingress",
                  "description": "Ingress defines the Ingress configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.route",
                  "displayName": "Route",
                  "description": "Route defines the OpenShift route configuration for the Jaeger UI."
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "Observability defines the observability configuration of the Tempo deployment."
                },
                {
                  "path": "jaegerui.authentication",
                  "displayName": "Jaeger UI authentication configuration",
                  "description": "Authentication defines the options for the oauth proxy used to protect jaeger UI"
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Tempo container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "affinity",
                  "displayName": "Affinity",
                  "description": "Affinity defines the Affinity rules for scheduling pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configuration",
                  "description": "ExtraConfig defines any extra (overlay) configuration of components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "ingestion.otlp",
                  "displayName": "OTLP",
                  "description": "OTLP defines the ingestion configuration for the OTLP protocol."
                },
                {
                  "path": "ingestion.otlp.grpc",
                  "displayName": "gRPC",
                  "description": "GRPC defines the OTLP over gRPC configuration."
                },
                {
                  "path": "ingestion.otlp.grpc.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/gRPC ingestion. \n On OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName` are provided it will use OpenShift serving certificate service."
                },
                {
                  "path": "ingestion.otlp.grpc.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "ingestion.otlp.http",
                  "displayName": "HTTP",
                  "description": "HTTP defines the OTLP over HTTP configuration."
                },
                {
                  "path": "ingestion.otlp.http.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/HTTP ingestion. \n On OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName` are provided it will use OpenShift serving certificate service."
                },
                {
                  "path": "ingestion.otlp.http.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "jaegerui.authentication.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the OAuth Proxy container. The OAuth Proxy performs authentication and authorization of incoming requests to Jaeger UI when multi-tenancy is disabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "jaegerui.authentication.sar",
                  "displayName": "SAR",
                  "description": "SAR defines the SAR to be used in the oauth-proxy default is \"{\"namespace\": \"<tempo_stack_namespace>\", \"resource\": \"pods\", \"verb\": \"get\"}"
                },
                {
                  "path": "jaegerui.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.ingressClassName",
                  "displayName": "Ingress Class Name",
                  "description": "IngressClassName defines the name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource."
                },
                {
                  "path": "jaegerui.route.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Route object."
                },
                {
                  "path": "jaegerui.route.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Route object."
                },
                {
                  "path": "jaegerui.route.termination",
                  "displayName": "TLS Termination",
                  "description": "Termination specifies the termination type."
                },
                {
                  "path": "jaegerui.servicesQueryDuration",
                  "displayName": "ServicesQueryDuration",
                  "description": "ServicesQueryDuration defines how long the services will be available in the services list",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "management",
                  "displayName": "Management State",
                  "description": "ManagementState defines whether this instance is managed by the operator or self-managed. Default: Managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "multitenancy",
                  "displayName": "Multi-Tenancy",
                  "description": "Multitenancy defines the multi-tenancy configuration."
                },
                {
                  "path": "multitenancy.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "multitenancy.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "multitenancy.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "multitenancy.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "multitenancy.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "multitenancy.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "multitenancy.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                },
                {
                  "path": "multitenancy.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the gateway container. The gateway performs authentication and authorization of incoming requests when multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines which labels are required by a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana",
                  "description": "Grafana defines the Grafana configuration of the Tempo deployment."
                },
                {
                  "path": "observability.grafana.dataSource",
                  "displayName": "Grafana data source",
                  "description": "DataSource defines the Grafana data source configuration."
                },
                {
                  "path": "observability.grafana.dataSource.instanceSelector",
                  "displayName": "Instance Selector",
                  "description": "InstanceSelector defines the Grafana instance where the data source should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana"
                  ]
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics",
                  "description": "Metrics defines the metric configuration of the Tempo deployment."
                },
                {
                  "path": "observability.metrics.prometheusRules",
                  "displayName": "Prometheus Rules",
                  "description": "ServiceMonitors defines the PrometheusRule configuration."
                },
                {
                  "path": "observability.metrics.serviceMonitors",
                  "displayName": "Service Monitors",
                  "description": "ServiceMonitors defines the ServiceMonitor configuration."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the Service Account to use for all Tempo components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "storage.traces",
                  "displayName": "Traces",
                  "description": "Traces defines the storage configuration for traces."
                },
                {
                  "path": "storage.traces.azure",
                  "displayName": "Azure Storage",
                  "description": "Azure defines the configuration for Azure Storage."
                },
                {
                  "path": "storage.traces.azure.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.gcs",
                  "displayName": "Google Cloud Storage",
                  "description": "GCP defines the configuration for Google Cloud Storage."
                },
                {
                  "path": "storage.traces.gcs.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3",
                  "displayName": "Amazon S3",
                  "description": "S3 defines the configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines the tolerations of a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                }
              ]
            },
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack manages a Tempo deployment in microservices mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Gateway",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "storage.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.distributor.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication.enabled",
                  "displayName": "Enabled",
                  "description": "Defines if the authentication will be enabled for jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configurations"
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "hashRing",
                  "displayName": "Hash Ring",
                  "description": "HashRing defines the spec for the distributed hash ring configuration.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "hashRing.memberlist",
                  "displayName": "Memberlist Config",
                  "description": "MemberList configuration spec"
                },
                {
                  "path": "hashRing.memberlist.enableIPv6",
                  "displayName": "Enable IPv6",
                  "description": "EnableIPv6 enables IPv6 support for the memberlist based hash ring.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana Config",
                  "description": "Grafana defines the Grafana configuration for operands."
                },
                {
                  "path": "observability.grafana.createDatasource",
                  "displayName": "Create Datasource for Tempo",
                  "description": "CreateDatasource specifies if a Grafana Datasource should be created for Tempo."
                },
                {
                  "path": "observability.grafana.instanceSelector",
                  "displayName": "Create CreateDatasource for Tempo",
                  "description": "InstanceSelector specifies the Grafana instance where the datasource should be created."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.compactor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.distributor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers \n If openshift feature flag `servingCertsService` is enabled and TLS is enabled but no certName or caName is specified, OpenShift service serving certificates will  be used."
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.enabled",
                  "displayName": "Enabled",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.gateway.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.ingester.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.querier.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuery defines options specific to the Jaeger Query component."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication",
                  "displayName": "Jaeger UI authentication configuration",
                  "description": "Authentication defines the options for the oauth proxy used to protect jaeger UI"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the OAuth Proxy container. The OAuth Proxy performs authentication and authorization of incoming requests to Jaeger UI when multi-tenancy is disabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication.sar",
                  "displayName": "SAR",
                  "description": "SAR defines the SAR to be used in the oauth-proxy default is \"{\"namespace\": \"<tempo_stack_namespace>\", \"resource\": \"pods\", \"verb\": \"get\"}"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled defines if the Jaeger Query component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines the options for the Jaeger Query ingress."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines the monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables the monitor tab in the Jaeger console. The PrometheusEndpoint must be configured to enable this feature.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.servicesQueryDuration",
                  "displayName": "ServicesQueryDuration",
                  "description": "ServicesQueryDuration defines how long the services will be available in the services list"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.queryFrontend.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\n`TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.\nPlease ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tracing",
          "monitoring",
          "database",
          "rhosdt",
          "tempo",
          "observability"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.25.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb"
    },
    {
      "name": "oauth_proxy",
      "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5b2ca060dff5d64979497bd8b7144f8e115763984f2ae7d1ddf6ef416d636508"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:08f5e521179e7c6e8b62372e280c4c1063578c864e3e7c6c40523a6373bd1896"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:f04f2523f90a7d0f84f11907bb40bf24e28628acc023e3a19ed35c83cb707719"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:ad1da7f9941a2a887431da733bf7e59ef931ea281cf6c36da49fb1dc1a4c4cfc"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:449150a62412d83df190c2f67a66967ddf424acd0e7b14e992ad9799e736a7fa"
    },
    {
      "name": "tempo-rhel8-operator-00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:00a37371aef28f7cd5273deb8597ee88573b7d01a6bd048c2a155c5021d9d0dc"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:cfa1045be882e55a3b785348572f2adfc476882bedcc0df0afa3b6e8c5037991"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.13.0-1-0.1730817419.p",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c5d81042ce8d2f6e65b2092fb1ccbe45a2845990b54a5a2454bbf8c1eebbf2eb",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoMonolithic",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.13.0-1+0.1730817419.p"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoMonolithic\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"jaegerui\": {\n        \"enabled\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2\",\n            \"memory\": \"2Gi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2\",\n          \"memory\": \"2Gi\"\n        }\n      },\n      \"storage\": {\n        \"traces\": {\n          \"backend\": \"memory\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4",
          "createdAt": "2024-08-28 14:01:06.880923",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.6.0 <0.13.0-1",
          "olm.substitutesFor": "tempo-operator.v0.13.0-1",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempomonolithics.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoMonolithic",
              "displayName": "TempoMonolithic",
              "description": "TempoMonolithic manages a Tempo deployment in monolithic mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.tempo",
                  "displayName": "Tempo",
                  "description": "Tempo is a map of the pod status of the Tempo pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "ingestion.otlp.grpc.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over gRPC is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over HTTP is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.authentication.enabled",
                  "displayName": "Enabled",
                  "description": "Defines if the authentication will be enabled for jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if the Jaeger UI component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if an Ingress object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.route.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Route object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.grafana.dataSource.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Grafana data source should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.prometheusRules.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if PrometheusRule objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "observability.metrics.serviceMonitors.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if ServiceMonitor objects should be created for this Tempo deployment.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage",
                  "displayName": "Storage",
                  "description": "Storage defines the storage configuration."
                },
                {
                  "path": "storage.traces.backend",
                  "displayName": "Storage Backend",
                  "description": "Backend defines the backend for storing traces. Default: memory."
                },
                {
                  "path": "storage.traces.s3.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion",
                  "displayName": "Ingestion",
                  "description": "Ingestion defines the trace ingestion configuration."
                },
                {
                  "path": "jaegerui.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Jaeger UI container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "storage.traces.size",
                  "displayName": "Size",
                  "description": "Size defines the size of the volume where traces are stored. For in-memory storage, this defines the size of the tmpfs volume. For persistent volume storage, this defines the size of the persistent volume. For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo. Default: 2Gi for memory, 10Gi for all other backends.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "jaegerui",
                  "displayName": "Jaeger UI",
                  "description": "JaegerUI defines the Jaeger UI configuration."
                },
                {
                  "path": "jaegerui.ingress",
                  "displayName": "Ingress",
                  "description": "Ingress defines the Ingress configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.route",
                  "displayName": "Route",
                  "description": "Route defines the OpenShift route configuration for the Jaeger UI."
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "Observability defines the observability configuration of the Tempo deployment."
                },
                {
                  "path": "jaegerui.authentication",
                  "displayName": "Jaeger UI authentication configuration",
                  "description": "Authentication defines the options for the oauth proxy used to protect jaeger UI"
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Tempo container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "affinity",
                  "displayName": "Affinity",
                  "description": "Affinity defines the Affinity rules for scheduling pods.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configuration",
                  "description": "ExtraConfig defines any extra (overlay) configuration of components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "ingestion.otlp",
                  "displayName": "OTLP",
                  "description": "OTLP defines the ingestion configuration for the OTLP protocol."
                },
                {
                  "path": "ingestion.otlp.grpc",
                  "displayName": "gRPC",
                  "description": "GRPC defines the OTLP over gRPC configuration."
                },
                {
                  "path": "ingestion.otlp.grpc.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/gRPC ingestion. \n On OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName` are provided it will use OpenShift serving certificate service."
                },
                {
                  "path": "ingestion.otlp.grpc.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "ingestion.otlp.http",
                  "displayName": "HTTP",
                  "description": "HTTP defines the OTLP over HTTP configuration."
                },
                {
                  "path": "ingestion.otlp.http.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/HTTP ingestion. \n On OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName` are provided it will use OpenShift serving certificate service."
                },
                {
                  "path": "ingestion.otlp.http.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "jaegerui.authentication.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the OAuth Proxy container. The OAuth Proxy performs authentication and authorization of incoming requests to Jaeger UI when multi-tenancy is disabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "jaegerui.authentication.sar",
                  "displayName": "SAR",
                  "description": "SAR defines the SAR to be used in the oauth-proxy default is \"{\"namespace\": \"<tempo_stack_namespace>\", \"resource\": \"pods\", \"verb\": \"get\"}"
                },
                {
                  "path": "jaegerui.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.ingressClassName",
                  "displayName": "Ingress Class Name",
                  "description": "IngressClassName defines the name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource."
                },
                {
                  "path": "jaegerui.route.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Route object."
                },
                {
                  "path": "jaegerui.route.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Route object."
                },
                {
                  "path": "jaegerui.route.termination",
                  "displayName": "TLS Termination",
                  "description": "Termination specifies the termination type."
                },
                {
                  "path": "jaegerui.servicesQueryDuration",
                  "displayName": "ServicesQueryDuration",
                  "description": "ServicesQueryDuration defines how long the services will be available in the services list",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "management",
                  "displayName": "Management State",
                  "description": "ManagementState defines whether this instance is managed by the operator or self-managed. Default: Managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "multitenancy",
                  "displayName": "Multi-Tenancy",
                  "description": "Multitenancy defines the multi-tenancy configuration."
                },
                {
                  "path": "multitenancy.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "multitenancy.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "multitenancy.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "multitenancy.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "multitenancy.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "multitenancy.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "multitenancy.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "multitenancy.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "multitenancy.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                },
                {
                  "path": "multitenancy.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the gateway container. The gateway performs authentication and authorization of incoming requests when multi-tenancy is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines which labels are required by a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana",
                  "description": "Grafana defines the Grafana configuration of the Tempo deployment."
                },
                {
                  "path": "observability.grafana.dataSource",
                  "displayName": "Grafana data source",
                  "description": "DataSource defines the Grafana data source configuration."
                },
                {
                  "path": "observability.grafana.dataSource.instanceSelector",
                  "displayName": "Instance Selector",
                  "description": "InstanceSelector defines the Grafana instance where the data source should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:selector:grafana.integreatly.org:v1beta1:Grafana"
                  ]
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics",
                  "description": "Metrics defines the metric configuration of the Tempo deployment."
                },
                {
                  "path": "observability.metrics.prometheusRules",
                  "displayName": "Prometheus Rules",
                  "description": "ServiceMonitors defines the PrometheusRule configuration."
                },
                {
                  "path": "observability.metrics.serviceMonitors",
                  "displayName": "Service Monitors",
                  "description": "ServiceMonitors defines the ServiceMonitor configuration."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the Service Account to use for all Tempo components.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "storage.traces",
                  "displayName": "Traces",
                  "description": "Traces defines the storage configuration for traces."
                },
                {
                  "path": "storage.traces.azure",
                  "displayName": "Azure Storage",
                  "description": "Azure defines the configuration for Azure Storage."
                },
                {
                  "path": "storage.traces.azure.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.gcs",
                  "displayName": "Google Cloud Storage",
                  "description": "GCP defines the configuration for Google Cloud Storage."
                },
                {
                  "path": "storage.traces.gcs.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3",
                  "displayName": "Amazon S3",
                  "description": "S3 defines the configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines the tolerations of a node to schedule the pod onto it.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                }
              ]
            },
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack manages a Tempo deployment in microservices mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Gateway",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "storage.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.distributor.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication.enabled",
                  "displayName": "Enabled",
                  "description": "Defines if the authentication will be enabled for jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configurations"
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "hashRing",
                  "displayName": "Hash Ring",
                  "description": "HashRing defines the spec for the distributed hash ring configuration.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "hashRing.memberlist",
                  "displayName": "Memberlist Config",
                  "description": "MemberList configuration spec"
                },
                {
                  "path": "hashRing.memberlist.enableIPv6",
                  "displayName": "Enable IPv6",
                  "description": "EnableIPv6 enables IPv6 support for the memberlist based hash ring.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana Config",
                  "description": "Grafana defines the Grafana configuration for operands."
                },
                {
                  "path": "observability.grafana.createDatasource",
                  "displayName": "Create Datasource for Tempo",
                  "description": "CreateDatasource specifies if a Grafana Datasource should be created for Tempo."
                },
                {
                  "path": "observability.grafana.instanceSelector",
                  "displayName": "Create CreateDatasource for Tempo",
                  "description": "InstanceSelector specifies the Grafana instance where the datasource should be created."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.compactor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.distributor.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers \n If openshift feature flag `servingCertsService` is enabled and TLS is enabled but no certName or caName is specified, OpenShift service serving certificates will  be used."
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.enabled",
                  "displayName": "Enabled",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.gateway.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.ingester.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.querier.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuery defines options specific to the Jaeger Query component."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication",
                  "displayName": "Jaeger UI authentication configuration",
                  "description": "Authentication defines the options for the oauth proxy used to protect jaeger UI"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the OAuth Proxy container. The OAuth Proxy performs authentication and authorization of incoming requests to Jaeger UI when multi-tenancy is disabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.authentication.sar",
                  "displayName": "SAR",
                  "description": "SAR defines the SAR to be used in the oauth-proxy default is \"{\"namespace\": \"<tempo_stack_namespace>\", \"resource\": \"pods\", \"verb\": \"get\"}"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled defines if the Jaeger Query component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines the options for the Jaeger Query ingress."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines the monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables the monitor tab in the Jaeger console. The PrometheusEndpoint must be configured to enable this feature.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.servicesQueryDuration",
                  "displayName": "ServicesQueryDuration",
                  "description": "ServicesQueryDuration defines how long the services will be available in the services list"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.queryFrontend.resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources for this component, this will override the calculated resources derived from total"
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines a universally unique identifier of the tenant. Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment. Tempo uses this ID to prefix objects in the object storage."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines a human readable, unique name of the tenant. The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\n`TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.\nPlease ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tracing",
          "monitoring",
          "database",
          "rhosdt",
          "tempo",
          "observability"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.25.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb"
    },
    {
      "name": "oauth_proxy",
      "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5b2ca060dff5d64979497bd8b7144f8e115763984f2ae7d1ddf6ef416d636508"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:0aeb1652a4784dccb03cebff626d461ccb04331a0c74acacca7051786094fd74"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:9e2744c07c402e6f9314ffadacaee8bede124181b5f2b97ad8e9311bf39ec182"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c5d81042ce8d2f6e65b2092fb1ccbe45a2845990b54a5a2454bbf8c1eebbf2eb"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:40cc7cda239f7df93df655134e827d89c52fcae4ece2f1e9a9d404adceaa72af"
    },
    {
      "name": "tempo-rhel8-operator-b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:b4160353a99b6beac58c8ad21c1fedc518e9500b2c2188cc9eba7b92ddf399b4"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:bcd9aceb63d3a328855a2924810fb67e0c8dd36fc42dd79131c141865d076907"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.3.1-3",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b6ec1460415bf8c69d82cf9267494dc5445242b6a0957318eae5bf333693cb2e",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.3.1-3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4",
          "createdAt": "2023-10-27 13:47:52.362768",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack is the spec for Tempo deployments.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Query Frontend",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "NOTE: currently this field is not considered. ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are “s”, “m” and “h”. example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are “s”, “m” and “h”. example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the tempo TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap Name",
                  "description": "CA is the name of a ConfigMap containing a CA certificate. It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines OpenShift Route specific options."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination specifies the termination type. By default \"edge\" is used."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuerySpec defines Jaeger Query specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled is used to define if Jaeger Query component should be created."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines Jaeger Query Ingress options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines OpenShift Route specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination specifies the termination type. By default \"edge\" is used."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines the id of the tenant."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines the name of the tenant. The value of this field should be sent in X-Scope-OrgID header to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:dynamic"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator manages Tempo deployments in Microservices mode.\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\nMake that your system has a S3 compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription. This operator is at the moment in Technology Preview Support Scope.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tracing",
          "monitoring",
          "database",
          "observability",
          "tempo",
          "rhosdt"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1dddb0988d1612c996707d43eb839bc49fc7e7554afaf085436eeddb37a12438"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:b6ec1460415bf8c69d82cf9267494dc5445242b6a0957318eae5bf333693cb2e"
    },
    {
      "name": "tempo-rhel8-operator-f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:f523b907748b862db01fb223833e1d1ce648ebefcad1c180c8bfce4335ae6af4"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.6.0-2",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:d3d446b9adaebd3985fb8d78176100156d9133ec2cf956d92e07c3651e60cc3d",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.6.0-2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376",
          "createdAt": "2023-11-27 14:14:16.411616",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "false",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack is the spec for Tempo deployments.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Query Frontend",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "NOTE: currently this field is not considered. ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap Name",
                  "description": "CA is the name of a ConfigMap containing a `ca.crt` key with a CA certificate. It needs to be in the same namespace as the TempoStack custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers"
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap Name",
                  "description": "caName is the name of a ConfigMap containing a CA certificate. It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret Name",
                  "description": "certName is the name of a Secret containing a certificate and the private key It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "minVersion is the name of a Secret containing a certificate and the private key It needs to be in the same namespace as the Tempo custom resource."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines OpenShift Route specific options."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination specifies the termination type. By default \"edge\" is used."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuerySpec defines Jaeger Query specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled is used to define if Jaeger Query component should be created."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines Jaeger Query Ingress options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines OpenShift Route specific options."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination specifies the termination type. By default \"edge\" is used."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables monitoring tab in Jaeger console. PrometheusEndpoint needs to be set to enable the feature."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint configures endpoint to the Prometheus that contains span RED metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector is the simplest recommended form of node selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas represents the number of replicas to create for this component."
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines the id of the tenant."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines the name of the tenant. The value of this field should be sent in X-Scope-OrgID header to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator manages Tempo deployments in Microservices mode.\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\nMake that your system has a S3 compatible storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "monitoring",
          "tempo",
          "observability",
          "rhosdt",
          "tracing",
          "database"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cade2c1ee468261aec5400728c8d44de387b459134aec7a4c3b5ec5a335d2c"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:1aa743403eccc0a6e6b7065ee2f54330cc0cf27b085d64cfd750f6505928f7c1"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:131f5ec8d1b290ee2b485eb57d5170fb46d66d5dfd7c8e52c5e346648ab2ae9e"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:d3d446b9adaebd3985fb8d78176100156d9133ec2cf956d92e07c3651e60cc3d"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:5402f3af7bdee45bb3d514ed1054cdc2fb9475f6ca33ab513d226a3bd1bc46b9"
    },
    {
      "name": "tempo-rhel8-operator-0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:0c82b627f5706657f224db3f7ddfd9065e1ef54f7249e4cb0387d67db6cf0376"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:d0a526c0721596880eef4f38ef772ec7a914364cdc7165eaa35f6ba4068a5e7a"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.8.0-2",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:153aea091df302b13f4c59ed8810ed6b9ecb850f43cf94d970ce24e6a1335499",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoMonolithic",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.8.0-2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoMonolithic\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"jaegerui\": {\n        \"enabled\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2\",\n            \"memory\": \"2Gi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2\",\n          \"memory\": \"2Gi\"\n        }\n      },\n      \"storage\": {\n        \"traces\": {\n          \"backend\": \"memory\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28",
          "createdAt": "2024-02-06 17:45:34.278174",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempomonolithics.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoMonolithic",
              "displayName": "TempoMonolithic",
              "description": "TempoMonolithic manages a Tempo deployment in monolithic mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configuration",
                  "description": "ExtraConfig defines any extra (overlay) configuration of components."
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "ingestion",
                  "displayName": "Ingestion",
                  "description": "Ingestion defines the trace ingestion configuration."
                },
                {
                  "path": "ingestion.otlp",
                  "displayName": "OTLP",
                  "description": "OTLP defines the ingestion configuration for the OTLP protocol."
                },
                {
                  "path": "ingestion.otlp.grpc",
                  "displayName": "gRPC",
                  "description": "GRPC defines the OTLP over gRPC configuration."
                },
                {
                  "path": "ingestion.otlp.grpc.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over gRPC is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/gRPC ingestion."
                },
                {
                  "path": "ingestion.otlp.grpc.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "ingestion.otlp.http",
                  "displayName": "HTTP",
                  "description": "HTTP defines the OTLP over HTTP configuration."
                },
                {
                  "path": "ingestion.otlp.http.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over HTTP is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/HTTP ingestion."
                },
                {
                  "path": "ingestion.otlp.http.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "jaegerui",
                  "displayName": "Jaeger UI",
                  "description": "JaegerUI defines the Jaeger UI configuration."
                },
                {
                  "path": "jaegerui.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if the Jaeger UI component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress",
                  "displayName": "Ingress",
                  "description": "Ingress defines the Ingress configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if an Ingress object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.ingressClassName",
                  "displayName": "Ingress Class Name",
                  "description": "IngressClassName defines the name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource."
                },
                {
                  "path": "jaegerui.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Jaeger UI container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "jaegerui.route",
                  "displayName": "Route",
                  "description": "Route defines the OpenShift route configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.route.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Route object."
                },
                {
                  "path": "jaegerui.route.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Route object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.route.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Route object."
                },
                {
                  "path": "jaegerui.route.termination",
                  "displayName": "TLS Termination",
                  "description": "Termination specifies the termination type. Default: edge."
                },
                {
                  "path": "management",
                  "displayName": "Management State",
                  "description": "ManagementState defines whether this instance is managed by the operator or self-managed. Default: Managed."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Tempo container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "storage",
                  "displayName": "Storage",
                  "description": "Storage defines the storage configuration."
                },
                {
                  "path": "storage.traces",
                  "displayName": "Traces",
                  "description": "Traces defines the storage configuration for traces."
                },
                {
                  "path": "storage.traces.azure",
                  "displayName": "Azure Storage",
                  "description": "Azure defines the configuration for Azure Storage."
                },
                {
                  "path": "storage.traces.azure.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.backend",
                  "displayName": "Storage Backend",
                  "description": "Backend defines the backend for storing traces. Default: memory."
                },
                {
                  "path": "storage.traces.gcs",
                  "displayName": "Google Cloud Storage",
                  "description": "GCP defines the configuration for Google Cloud Storage."
                },
                {
                  "path": "storage.traces.gcs.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3",
                  "displayName": "Amazon S3",
                  "description": "S3 defines the configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storage.traces.size",
                  "displayName": "Size",
                  "description": "Size defines the size of the volume where traces are stored. For in-memory storage, this defines the size of the tmpfs volume. For persistent volume storage, this defines the size of the persistent volume. For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo. Default: 10Gi.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                }
              ]
            },
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack manages a Tempo deployment in microservices mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Query Frontend",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configurations"
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "hashRing",
                  "displayName": "Hash Ring",
                  "description": "HashRing defines the spec for the distributed hash ring configuration.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "hashRing.memberlist",
                  "displayName": "Memberlist Config",
                  "description": "MemberList configuration spec"
                },
                {
                  "path": "hashRing.memberlist.enableIPv6",
                  "displayName": "Enable IPv6",
                  "description": "EnableIPv6 enables IPv6 support for the memberlist based hash ring.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana Config",
                  "description": "Grafana defines the Grafana configuration for operands."
                },
                {
                  "path": "observability.grafana.createDatasource",
                  "displayName": "Create Datasource for Tempo",
                  "description": "CreateDatasource specifies if a Grafana Datasource should be created for Tempo."
                },
                {
                  "path": "observability.grafana.instanceSelector",
                  "displayName": "Create CreateDatasource for Tempo",
                  "description": "InstanceSelector specifies the Grafana instance where the datasource should be created."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers"
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.enabled",
                  "displayName": "Enabled",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuery defines options specific to the Jaeger Query component."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled defines if the Jaeger Query component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines the options for the Jaeger Query ingress."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines the monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables the monitor tab in the Jaeger console. The PrometheusEndpoint must be configured to enable this feature.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines the id of the tenant."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines the name of the tenant. The value of this field should be sent in X-Scope-OrgID header to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\n`TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.\nPlease ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "monitoring",
          "tracing",
          "observability",
          "rhosdt",
          "tempo",
          "database"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62c44057a27abd41cf3daf60b8736da59a82dadb65fa6c32bef65d19bd49ea49"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:d126b79f54580e34d83733f518aa9edb67e93833f1becc7004a1d06428fb5304"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:61316cf6c86b4912089d03f2f70b643463b356905346597d4776ba3534881f28"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:153aea091df302b13f4c59ed8810ed6b9ecb850f43cf94d970ce24e6a1335499"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:76107f4b503446ddeadd68ccc8c4d75893d768cf347f8fea468ed9d3275d7c3c"
    },
    {
      "name": "tempo-rhel8-operator-77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:77e4a81f5573f6fe5de65c70cd84598a3bfe0263efde84274ae3464481a2cc28"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:86e0f99dfd487a18f68f2b28be53b6acb496239674c10738c5bdf6e5266d3074"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "tempo-operator.v0.8.0-3",
  "package": "tempo-product",
  "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c6c6a80101bb29b78299f2678d15822cf8d8eec300ca55c27549f1dbb1c83d9f",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoMonolithic",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "tempo.grafana.com",
        "kind": "TempoStack",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "tempo-product",
        "version": "0.8.0-3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoMonolithic\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"jaegerui\": {\n        \"enabled\": true,\n        \"resources\": {\n          \"limits\": {\n            \"cpu\": \"2\",\n            \"memory\": \"2Gi\"\n          }\n        },\n        \"route\": {\n          \"enabled\": true\n        }\n      },\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2\",\n          \"memory\": \"2Gi\"\n        }\n      },\n      \"storage\": {\n        \"traces\": {\n          \"backend\": \"memory\"\n        }\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"tempo.grafana.com/v1alpha1\",\n    \"kind\": \"TempoStack\",\n    \"metadata\": {\n      \"name\": \"sample\"\n    },\n    \"spec\": {\n      \"resources\": {\n        \"total\": {\n          \"limits\": {\n            \"cpu\": \"2000m\",\n            \"memory\": \"2Gi\"\n          }\n        }\n      },\n      \"storage\": {\n        \"secret\": {\n          \"name\": \"my-storage-secret\",\n          \"type\": \"s3\"\n        }\n      },\n      \"storageSize\": \"1Gi\",\n      \"template\": {\n        \"queryFrontend\": {\n          \"jaegerQuery\": {\n            \"enabled\": true,\n            \"ingress\": {\n              \"type\": \"route\"\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "containerImage": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb",
          "createdAt": "2024-03-07 11:40:11.632301",
          "description": "Create and manage deployments of Tempo, a high-scale distributed tracing backend.",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "true",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-tempo-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "https://github.com/grafana/tempo-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "tempomonolithics.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoMonolithic",
              "displayName": "TempoMonolithic",
              "description": "TempoMonolithic manages a Tempo deployment in monolithic mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configuration",
                  "description": "ExtraConfig defines any extra (overlay) configuration of components."
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "ingestion",
                  "displayName": "Ingestion",
                  "description": "Ingestion defines the trace ingestion configuration."
                },
                {
                  "path": "ingestion.otlp",
                  "displayName": "OTLP",
                  "description": "OTLP defines the ingestion configuration for the OTLP protocol."
                },
                {
                  "path": "ingestion.otlp.grpc",
                  "displayName": "gRPC",
                  "description": "GRPC defines the OTLP over gRPC configuration."
                },
                {
                  "path": "ingestion.otlp.grpc.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over gRPC is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/gRPC ingestion."
                },
                {
                  "path": "ingestion.otlp.grpc.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.grpc.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "ingestion.otlp.http",
                  "displayName": "HTTP",
                  "description": "HTTP defines the OTLP over HTTP configuration."
                },
                {
                  "path": "ingestion.otlp.http.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if OTLP over HTTP is enabled. Default: enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for OTLP/HTTP ingestion."
                },
                {
                  "path": "ingestion.otlp.http.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "ingestion.otlp.http.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "jaegerui",
                  "displayName": "Jaeger UI",
                  "description": "JaegerUI defines the Jaeger UI configuration."
                },
                {
                  "path": "jaegerui.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if the Jaeger UI component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress",
                  "displayName": "Ingress",
                  "description": "Ingress defines the Ingress configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if an Ingress object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.ingress.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "jaegerui.ingress.ingressClassName",
                  "displayName": "Ingress Class Name",
                  "description": "IngressClassName defines the name of an IngressClass cluster resource. Defines which ingress controller serves this ingress resource."
                },
                {
                  "path": "jaegerui.resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Jaeger UI container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "jaegerui.route",
                  "displayName": "Route",
                  "description": "Route defines the OpenShift route configuration for the Jaeger UI."
                },
                {
                  "path": "jaegerui.route.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Route object."
                },
                {
                  "path": "jaegerui.route.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if a Route object should be created for Jaeger UI.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "jaegerui.route.host",
                  "displayName": "Hostname",
                  "description": "Host defines the hostname of the Route object."
                },
                {
                  "path": "jaegerui.route.termination",
                  "displayName": "TLS Termination",
                  "description": "Termination specifies the termination type. Default: edge."
                },
                {
                  "path": "management",
                  "displayName": "Management State",
                  "description": "ManagementState defines whether this instance is managed by the operator or self-managed. Default: Managed."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines the compute resource requirements of the Tempo container.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:resourceRequirements"
                  ]
                },
                {
                  "path": "storage",
                  "displayName": "Storage",
                  "description": "Storage defines the storage configuration."
                },
                {
                  "path": "storage.traces",
                  "displayName": "Traces",
                  "description": "Traces defines the storage configuration for traces."
                },
                {
                  "path": "storage.traces.azure",
                  "displayName": "Azure Storage",
                  "description": "Azure defines the configuration for Azure Storage."
                },
                {
                  "path": "storage.traces.azure.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.backend",
                  "displayName": "Storage Backend",
                  "description": "Backend defines the backend for storing traces. Default: memory."
                },
                {
                  "path": "storage.traces.gcs",
                  "displayName": "Google Cloud Storage",
                  "description": "GCP defines the configuration for Google Cloud Storage."
                },
                {
                  "path": "storage.traces.gcs.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3",
                  "displayName": "Amazon S3",
                  "description": "S3 defines the configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.secret",
                  "displayName": "Storage Secret",
                  "description": "Secret is the name of a Secret containing credentials for accessing object storage. It needs to be in the same namespace as the TempoMonolithic custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls",
                  "displayName": "TLS",
                  "description": "TLS defines the TLS configuration for Amazon S3."
                },
                {
                  "path": "storage.traces.s3.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage.traces.s3.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storage.traces.size",
                  "displayName": "Size",
                  "description": "Size defines the size of the volume where traces are stored. For in-memory storage, this defines the size of the tmpfs volume. For persistent volume storage, this defines the size of the persistent volume. For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo. Default: 10Gi.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                }
              ]
            },
            {
              "name": "tempostacks.tempo.grafana.com",
              "version": "v1alpha1",
              "kind": "TempoStack",
              "displayName": "TempoStack",
              "description": "TempoStack manages a Tempo deployment in microservices mode.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMap",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Route",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Secret",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "ServiceAccount",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSet",
                  "version": "v1"
                }
              ],
              "statusDescriptors": [
                {
                  "path": "components.distributor",
                  "displayName": "Distributor",
                  "description": "Distributor is a map to the per pod status of the distributor deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.ingester",
                  "displayName": "Ingester",
                  "description": "Ingester is a map to the per pod status of the ingester statefulset",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.querier",
                  "displayName": "Querier",
                  "description": "Querier is a map to the per pod status of the querier deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.gateway",
                  "displayName": "Query Frontend",
                  "description": "Gateway is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.queryFrontend",
                  "displayName": "Query Frontend",
                  "description": "QueryFrontend is a map to the per pod status of the query frontend deployment",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "components.compactor",
                  "displayName": "Compactor",
                  "description": "Compactor is a map to the pod status of the compactor pod.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:podStatuses"
                  ]
                },
                {
                  "path": "conditions",
                  "displayName": "Conditions",
                  "description": "Conditions of the Tempo deployment health.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes.conditions"
                  ]
                }
              ],
              "specDescriptors": [
                {
                  "path": "extraConfig",
                  "displayName": "Extra Configurations"
                },
                {
                  "path": "extraConfig.tempo",
                  "displayName": "Tempo Extra Configurations",
                  "description": "Tempo defines any extra Tempo configuration, which will be merged with the operator's generated Tempo configuration"
                },
                {
                  "path": "hashRing",
                  "displayName": "Hash Ring",
                  "description": "HashRing defines the spec for the distributed hash ring configuration.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:advanced"
                  ]
                },
                {
                  "path": "hashRing.memberlist",
                  "displayName": "Memberlist Config",
                  "description": "MemberList configuration spec"
                },
                {
                  "path": "hashRing.memberlist.enableIPv6",
                  "displayName": "Enable IPv6",
                  "description": "EnableIPv6 enables IPv6 support for the memberlist based hash ring.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "images",
                  "displayName": "Container Images",
                  "description": "Images defines the image for each container."
                },
                {
                  "path": "limits",
                  "displayName": "Ingestion and Querying Ratelimiting",
                  "description": "LimitSpec is used to limit ingestion and querying rates."
                },
                {
                  "path": "limits.global",
                  "displayName": "Global Limit",
                  "description": "Global is used to define global rate limits."
                },
                {
                  "path": "limits.global.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.global.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.global.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.global.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "limits.perTenant",
                  "displayName": "Tenant Limits",
                  "description": "PerTenant is used to define rate limits per tenant."
                },
                {
                  "path": "limits.perTenant.ingestion",
                  "displayName": "Ingestion Limit",
                  "description": "Ingestion is used to define ingestion rate limits."
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionBurstSizeBytes",
                  "displayName": "Ingestion Burst Size in Bytes",
                  "description": "IngestionBurstSizeBytes defines the burst size (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.ingestionRateLimitBytes",
                  "displayName": "Ingestion Rate Limit in Bytes",
                  "description": "IngestionRateLimitBytes defines the Per-user ingestion rate limit (bytes) used in ingestion.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxBytesPerTrace",
                  "displayName": "Max Bytes per Trace",
                  "description": "MaxBytesPerTrace defines the maximum number of bytes of an acceptable trace.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.ingestion.maxTracesPerUser",
                  "displayName": "Max Traces per User",
                  "description": "MaxTracesPerUser defines the maximum number of traces a user can send.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query",
                  "displayName": "Query Limit",
                  "description": "Query is used to define query rate limits."
                },
                {
                  "path": "limits.perTenant.query.maxBytesPerTagValues",
                  "displayName": "Max Tags per User",
                  "description": "MaxBytesPerTagValues defines the maximum size in bytes of a tag-values query.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchBytesPerTrace",
                  "displayName": "Max Traces per User",
                  "description": "DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single trace in bytes. default: `0` to disable.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:number"
                  ]
                },
                {
                  "path": "limits.perTenant.query.maxSearchDuration",
                  "displayName": "Max Search Duration per User",
                  "description": "MaxSearchDuration defines the maximum allowed time range for a search. If this value is not set, then spec.search.maxDuration is used."
                },
                {
                  "path": "managementState",
                  "displayName": "Management State",
                  "description": "ManagementState defines if the CR should be managed by the operator or not. Default is managed.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:Managed",
                    "urn:alm:descriptor:com.tectonic.ui:select:Unmanaged"
                  ]
                },
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.grafana",
                  "displayName": "Grafana Config",
                  "description": "Grafana defines the Grafana configuration for operands."
                },
                {
                  "path": "observability.grafana.createDatasource",
                  "displayName": "Create Datasource for Tempo",
                  "description": "CreateDatasource specifies if a Grafana Datasource should be created for Tempo."
                },
                {
                  "path": "observability.grafana.instanceSelector",
                  "displayName": "Create CreateDatasource for Tempo",
                  "description": "InstanceSelector specifies the Grafana instance where the datasource should be created."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.createPrometheusRules",
                  "displayName": "Create PrometheusRules for Tempo components",
                  "description": "CreatePrometheusRules specifies if Prometheus rules for alerts should be created for Tempo components."
                },
                {
                  "path": "observability.metrics.createServiceMonitors",
                  "displayName": "Create ServiceMonitors for Tempo components",
                  "description": "CreateServiceMonitors specifies if ServiceMonitors should be created for Tempo components."
                },
                {
                  "path": "observability.tracing",
                  "displayName": "Tracing Config",
                  "description": "Tracing defines a config for operands."
                },
                {
                  "path": "observability.tracing.jaeger_agent_endpoint",
                  "displayName": "Jaeger-Agent-Endpoint",
                  "description": "JaegerAgentEndpoint defines the jaeger endpoint data gets send to."
                },
                {
                  "path": "observability.tracing.sampling_fraction",
                  "displayName": "Sampling Fraction",
                  "description": "SamplingFraction defines the sampling ratio. Valid values are 0 to 1."
                },
                {
                  "path": "replicationFactor",
                  "displayName": "Replication Factor",
                  "description": "ReplicationFactor is used to define how many component replicas should exist."
                },
                {
                  "path": "resources",
                  "displayName": "Resources",
                  "description": "Resources defines resources configuration."
                },
                {
                  "path": "resources.total",
                  "displayName": "Resource Requirements",
                  "description": "The total amount of resources for Tempo instance. The operator autonomously splits resources between deployed Tempo components. Only limits are supported, the operator calculates requests automatically. See http://github.com/grafana/tempo/issues/1540."
                },
                {
                  "path": "retention",
                  "displayName": "Retention Period",
                  "description": "NOTE: currently this field is not considered. Retention period defined by dataset. User can specify how long data should be stored."
                },
                {
                  "path": "retention.global",
                  "displayName": "Global Retention",
                  "description": "Global is used to configure global retention."
                },
                {
                  "path": "retention.global.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "retention.perTenant",
                  "displayName": "PerTenant Retention",
                  "description": "PerTenant is used to configure retention per tenant."
                },
                {
                  "path": "retention.perTenant.traces",
                  "displayName": "Trace Retention Period",
                  "description": "Traces defines retention period. Supported parameter suffixes are \"s\", \"m\" and \"h\". example: 336h default: value is 48h.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:text"
                  ]
                },
                {
                  "path": "search",
                  "displayName": "Search configuration options",
                  "description": "SearchSpec control the configuration for the search capabilities."
                },
                {
                  "path": "search.defaultResultLimit",
                  "displayName": "Limit used for search requests if none is set by the caller, this limit the number of traces returned by the query",
                  "description": "Limit used for search requests if none is set by the caller (default: 20)"
                },
                {
                  "path": "search.maxDuration",
                  "displayName": "Max search time range allowed",
                  "description": "The maximum allowed time range for a search, default: 0s which means unlimited."
                },
                {
                  "path": "search.maxResultLimit",
                  "displayName": "The maximum allowed value of the limit parameter on search requests, this determine the max number of traces allowed to be returned",
                  "description": "The maximum allowed value of the limit parameter on search requests. If the search request limit parameter exceeds the value configured here it will be set to the value configured here. The default value of 0 disables this limit."
                },
                {
                  "path": "serviceAccount",
                  "displayName": "Service Account",
                  "description": "ServiceAccount defines the service account to use for all tempo components."
                },
                {
                  "path": "storage",
                  "displayName": "Object Storage",
                  "description": "Storage defines the spec for the object storage endpoint to store traces. User is required to create secret and supply it."
                },
                {
                  "path": "storage.secret",
                  "displayName": "Object Storage Secret",
                  "description": "Secret for object storage authentication. Name of a secret in the same namespace as the TempoStack custom resource."
                },
                {
                  "path": "storage.secret.name",
                  "displayName": "Object Storage Secret Name",
                  "description": "Name of a secret in the namespace configured for object storage secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.secret.type",
                  "displayName": "Object Storage Secret Type",
                  "description": "Type of object storage that should be used",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:azure",
                    "urn:alm:descriptor:com.tectonic.ui:select:gcs",
                    "urn:alm:descriptor:com.tectonic.ui:select:s3"
                  ]
                },
                {
                  "path": "storage.tls",
                  "displayName": "TLS Config",
                  "description": "TLS configuration for reaching the object storage endpoint."
                },
                {
                  "path": "storage.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "storage.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "storage.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "storage.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "storageClassName",
                  "displayName": "StorageClassName for PVCs",
                  "description": "StorageClassName for PVCs used by ingester. Defaults to nil (default storage class in the cluster)."
                },
                {
                  "path": "storageSize",
                  "displayName": "Storage size for PVCs",
                  "description": "StorageSize for PVCs used by ingester. Defaults to 10Gi."
                },
                {
                  "path": "template",
                  "displayName": "Tempo Component Templates",
                  "description": "Template defines requirements for a set of tempo components."
                },
                {
                  "path": "template.compactor",
                  "displayName": "Compactor pods",
                  "description": "Compactor defines the tempo compactor component spec."
                },
                {
                  "path": "template.compactor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.compactor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.compactor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.distributor",
                  "displayName": "Distributor pods",
                  "description": "Distributor defines the distributor component spec."
                },
                {
                  "path": "template.distributor.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.distributor.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.distributor.tls",
                  "displayName": "TLS",
                  "description": "TLS defines TLS configuration for distributor receivers"
                },
                {
                  "path": "template.distributor.tls.caName",
                  "displayName": "CA ConfigMap",
                  "description": "CA is the name of a ConfigMap containing a CA certificate (service-ca.crt). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:ConfigMap"
                  ]
                },
                {
                  "path": "template.distributor.tls.certName",
                  "displayName": "Certificate Secret",
                  "description": "Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key). It needs to be in the same namespace as the Tempo custom resource.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "template.distributor.tls.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled defines if TLS is enabled.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.distributor.tls.minVersion",
                  "displayName": "Min TLS Version",
                  "description": "MinVersion defines the minimum acceptable TLS version."
                },
                {
                  "path": "template.distributor.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.gateway",
                  "displayName": "Gateway pods",
                  "description": "Gateway defines the tempo gateway spec."
                },
                {
                  "path": "template.gateway.enabled",
                  "displayName": "Enabled",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.gateway.ingress",
                  "displayName": "Jaeger gateway Ingress Settings",
                  "description": "Ingress defines gateway Ingress options."
                },
                {
                  "path": "template.gateway.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.gateway.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.gateway.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.gateway.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.gateway.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.gateway.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.gateway.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.ingester",
                  "displayName": "Ingester pods",
                  "description": "Ingester defines the ingester component spec."
                },
                {
                  "path": "template.ingester.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.ingester.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.ingester.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.querier",
                  "displayName": "Querier pods",
                  "description": "Querier defines the querier component spec."
                },
                {
                  "path": "template.querier.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.querier.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.querier.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "template.queryFrontend",
                  "displayName": "Query Frontend pods",
                  "description": "TempoQueryFrontendSpec defines the query frontend spec."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery",
                  "displayName": "Jaeger Query Settings",
                  "description": "JaegerQuery defines options specific to the Jaeger Query component."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.enabled",
                  "displayName": "Enable Jaeger Query UI",
                  "description": "Enabled defines if the Jaeger Query component should be created.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress",
                  "displayName": "Jaeger Query UI Ingress Settings",
                  "description": "Ingress defines the options for the Jaeger Query ingress."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.annotations",
                  "displayName": "Annotations",
                  "description": "Annotations defines the annotations of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.host",
                  "displayName": "Host",
                  "description": "Host defines the hostname of the Ingress object."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route",
                  "displayName": "Route Configuration",
                  "description": "Route defines the options for the OpenShift route."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.route.termination",
                  "displayName": "TLS Termination Policy",
                  "description": "Termination defines the termination type. The default is \"edge\"."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.ingress.type",
                  "displayName": "Type",
                  "description": "Type defines the type of Ingress for the Jaeger Query UI. Currently ingress, route and none are supported."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab",
                  "displayName": "Jaeger Query UI Monitor Tab Settings",
                  "description": "MonitorTab defines the monitor tab configuration."
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.enabled",
                  "displayName": "Enabled",
                  "description": "Enabled enables the monitor tab in the Jaeger console. The PrometheusEndpoint must be configured to enable this feature.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:booleanSwitch"
                  ]
                },
                {
                  "path": "template.queryFrontend.jaegerQuery.monitorTab.prometheusEndpoint",
                  "displayName": "Prometheus endpoint",
                  "description": "PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics. For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
                },
                {
                  "path": "template.queryFrontend.nodeSelector",
                  "displayName": "Node Selector",
                  "description": "NodeSelector defines the simple form of the node-selection constraint."
                },
                {
                  "path": "template.queryFrontend.replicas",
                  "displayName": "Component Replicas",
                  "description": "Replicas defines the number of replicas to be created for this component."
                },
                {
                  "path": "template.queryFrontend.tolerations",
                  "displayName": "Tolerations",
                  "description": "Tolerations defines component-specific pod tolerations."
                },
                {
                  "path": "tenants",
                  "displayName": "Tenants Configuration",
                  "description": "Tenants defines the per-tenant authentication and authorization spec."
                },
                {
                  "path": "tenants.authentication",
                  "displayName": "Authentication",
                  "description": "Authentication defines the tempo-gateway component authentication configuration spec per tenant."
                },
                {
                  "path": "tenants.authentication[0].oidc",
                  "displayName": "OIDC Configuration",
                  "description": "OIDC defines the spec for the OIDC tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.issuerURL",
                  "displayName": "Issuer URL",
                  "description": "IssuerURL defines the URL for issuer."
                },
                {
                  "path": "tenants.authentication[0].oidc.redirectURL",
                  "displayName": "Redirect URL",
                  "description": "RedirectURL defines the URL for redirect."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret",
                  "displayName": "Tenant Secret",
                  "description": "Secret defines the spec for the clientID, clientSecret and issuerCAPath for tenant's authentication."
                },
                {
                  "path": "tenants.authentication[0].oidc.secret.name",
                  "displayName": "Tenant Secret Name",
                  "description": "Name of a secret in the namespace configured for tenant secrets.",
                  "x-descriptors": [
                    "urn:alm:descriptor:io.kubernetes:Secret"
                  ]
                },
                {
                  "path": "tenants.authentication[0].tenantId",
                  "displayName": "Tenant ID",
                  "description": "TenantID defines the id of the tenant."
                },
                {
                  "path": "tenants.authentication[0].tenantName",
                  "displayName": "Tenant Name",
                  "description": "TenantName defines the name of the tenant. The value of this field should be sent in X-Scope-OrgID header to identify the tenant."
                },
                {
                  "path": "tenants.authorization",
                  "displayName": "Authorization",
                  "description": "Authorization defines the tempo-gateway component authorization configuration spec per tenant."
                },
                {
                  "path": "tenants.authorization.roleBindings",
                  "displayName": "Static Role Bindings",
                  "description": "RoleBindings defines configuration to bind a set of roles to a set of subjects."
                },
                {
                  "path": "tenants.authorization.roles",
                  "displayName": "Static Roles",
                  "description": "Roles defines a set of permissions to interact with a tenant."
                },
                {
                  "path": "tenants.mode",
                  "displayName": "Mode",
                  "description": "Mode defines the multitenancy mode.",
                  "x-descriptors": [
                    "urn:alm:descriptor:com.tectonic.ui:select:static",
                    "urn:alm:descriptor:com.tectonic.ui:select:openshift"
                  ]
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing platform based on Tempo. Tempo is an open-source, easy-to-use, and highly scalable distributed tracing backend. It provides observability for microservices architectures by allowing developers to track requests as they flow through distributed systems. Tempo is optimized to handle large volumes of trace data and is designed to be highly performant even under heavy loads.\nIt can ingest common open source tracing protocols including Jaeger, Zipkin, and OpenTelemetry and requires only object storage to operate.\n\nThe Tempo Operator supports Tempo deployments in Microservices mode (`TempoStack` CR) and Monolithic mode (`TempoMonolithic` CR).\n\n### Core capabilities\nTempo is used for monitoring and troubleshooting microservices-based distributed systems, including:\n* Distributed transaction monitoring\n* Root cause analysis\n* Performance / latency optimization\n\n### Operator features\n* **Resource Limits** - Specify overall resource requests and limits in the `TempoStack` CR; the operator assigns fractions of it to each component\n* **AuthN and AuthZ** - Supports OpenID Control (OIDC) and role-based access control (RBAC)\n* **Managed upgrades**: Updating the operator will automatically update all managed Tempo clusters\n* **Multitenancy** - Multiple tenants can send traces to the same Tempo cluster\n* **mTLS** - Communication between the Tempo components can be secured via mTLS\n* **Jaeger UI** - Traces can be visualized in Jaeger UI and exposed via Ingress or OpenShift Route\n* **Observability** - The operator and `TempoStack` operands expose telemetry (metrics, traces) and integrate with Prometheus `ServiceMonitor` and `PrometheusRule`\n\n### Before you start\n`TempoStack` requires object storage to store its traces. `TempoMonolithic` can store traces in-memory, in a Persistent Volume and in object storage.\nPlease ensure that your system has a compatible object storage solution that is supported, such as OpenShift Data Foundation, Minio, AWS S3, Azure Storage, or Google Cloud Storage.\n\n### Examples\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples).\n\n### Support & Troubleshooting\nTempo Operator is available and supported as part of a Red Hat OpenShift subscription.",
        "displayName": "Tempo Operator",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "database",
          "tempo",
          "tracing",
          "monitoring",
          "rhosdt",
          "observability"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "Tempo Operator",
            "url": "https://github.com/grafana/tempo-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dceccbe9fc4bc9c482add48a0ac7f445dadf548cce2e2ff2d1764fc31a6cfa41"
    },
    {
      "name": "tempo_gateway_opa",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-opa-rhel8@sha256:cfdb963e8a1789490119aa41523416f88af4038138f280218d1b0723bae835ca"
    },
    {
      "name": "tempo_gateway",
      "image": "registry.redhat.io/rhosdt/tempo-gateway-rhel8@sha256:c89066066a6aa4f21f0da4cb6d1fa8b6b30f76c3084003be7826b24bd6e74b0c"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/tempo-operator-bundle@sha256:c6c6a80101bb29b78299f2678d15822cf8d8eec300ca55c27549f1dbb1c83d9f"
    },
    {
      "name": "tempo_query",
      "image": "registry.redhat.io/rhosdt/tempo-query-rhel8@sha256:e7b1cbc8aea2973a461cde9dafe2ebec14d1b77cbcf2027e1dd59227034159de"
    },
    {
      "name": "tempo-rhel8-operator-be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb-annotation",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8-operator@sha256:be090291a18e10d4ae3af66ac029d0db779bcf2d100c13e41f7ed48981ca81cb"
    },
    {
      "name": "tempo",
      "image": "registry.redhat.io/rhosdt/tempo-rhel8@sha256:620b7d6fc0f32f82b91fadaedeefaac870ffb6524e1100c7824005c2cc5f52b4"
    }
  ]
}

{
  "schema": "olm.package",
  "name": "opentelemetry-product",
  "defaultChannel": "stable",
  "icon": {
    "base64data": "",
    "mediatype": "image/png"
  }
}
{
  "schema": "olm.channel",
  "name": "stable",
  "package": "opentelemetry-product",
  "entries": [
    {
      "name": "opentelemetry-operator.v0.100.1-3",
      "replaces": "opentelemetry-operator.v0.93.0-3",
      "skipRange": ">=0.33.0 <0.100.1-3"
    },
    {
      "name": "opentelemetry-operator.v0.102.0-2",
      "replaces": "opentelemetry-operator.v0.100.1-3",
      "skipRange": ">=0.33.0 <0.102.0-2"
    },
    {
      "name": "opentelemetry-operator.v0.102.0-3",
      "replaces": "opentelemetry-operator.v0.102.0-2",
      "skipRange": ">=0.33.0 <0.102.0-3"
    },
    {
      "name": "opentelemetry-operator.v0.107.0-4",
      "skipRange": ">=0.33.0 <0.107.0-4"
    },
    {
      "name": "opentelemetry-operator.v0.107.0-4-0.1727168137.p",
      "replaces": "opentelemetry-operator.v0.102.0-3",
      "skips": [
        "opentelemetry-operator.v0.107.0-4"
      ],
      "skipRange": ">=0.33.0 <0.107.0-4"
    },
    {
      "name": "opentelemetry-operator.v0.56.0-1",
      "skipRange": ">=0.33.0 <0.56.0-1"
    },
    {
      "name": "opentelemetry-operator.v0.60.0-2",
      "replaces": "opentelemetry-operator.v0.56.0-1",
      "skipRange": ">=0.33.0 <0.60.0-2"
    },
    {
      "name": "opentelemetry-operator.v0.74.0-5",
      "skipRange": ">=0.33.0 <0.74.0-5"
    },
    {
      "name": "opentelemetry-operator.v0.74.0-5-0.1687199949.p",
      "replaces": "opentelemetry-operator.v0.60.0-2",
      "skips": [
        "opentelemetry-operator.v0.74.0-5"
      ],
      "skipRange": ">=0.33.0 <0.74.0-5"
    },
    {
      "name": "opentelemetry-operator.v0.81.1-5",
      "replaces": "opentelemetry-operator.v0.74.0-5-0.1687199949.p",
      "skipRange": ">=0.33.0 <0.81.1-5"
    },
    {
      "name": "opentelemetry-operator.v0.89.0-3",
      "replaces": "opentelemetry-operator.v0.81.1-5",
      "skipRange": ">=0.33.0 <0.89.0-3"
    },
    {
      "name": "opentelemetry-operator.v0.93.0-2",
      "replaces": "opentelemetry-operator.v0.89.0-3",
      "skipRange": ">=0.33.0 <0.93.0-2"
    },
    {
      "name": "opentelemetry-operator.v0.93.0-3",
      "replaces": "opentelemetry-operator.v0.93.0-2",
      "skipRange": ">=0.33.0 <0.93.0-3"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.100.1-3",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:bfc2ac2670869a21f5caf7861f8d06b6080dd2f0b3ee6e544aaa36ed8eba70f6",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1beta1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.100.1-3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpAMPBridge\",\n    \"metadata\": {\n      \"name\": \"opampbridge-sample\"\n    },\n    \"spec\": {\n      \"capabilities\": {\n        \"AcceptsOpAMPConnectionSettings\": true,\n        \"AcceptsOtherConnectionSettings\": true,\n        \"AcceptsRemoteConfig\": true,\n        \"AcceptsRestartCommand\": true,\n        \"ReportsEffectiveConfig\": true,\n        \"ReportsHealth\": true,\n        \"ReportsOwnLogs\": true,\n        \"ReportsOwnMetrics\": true,\n        \"ReportsOwnTraces\": true,\n        \"ReportsRemoteConfig\": true,\n        \"ReportsStatus\": true\n      },\n      \"componentsAllowed\": {\n        \"exporters\": [\n          \"logging\"\n        ],\n        \"processors\": [\n          \"memory_limiter\"\n        ],\n        \"receivers\": [\n          \"otlp\"\n        ]\n      },\n      \"endpoint\": \"ws://opamp-server:4320/v1/opamp\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc: {}\\n      http: {}\\n\\nexporters:\\n  debug: {}\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1beta1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": {\n        \"exporters\": {\n          \"debug\": {}\n        },\n        \"receivers\": {\n          \"otlp\": {\n            \"protocols\": {\n              \"grpc\": {},\n              \"http\": {}\n            }\n          }\n        },\n        \"service\": {\n          \"pipelines\": {\n            \"traces\": {\n              \"exporters\": [\n                \"debug\"\n              ],\n              \"receivers\": [\n                \"otlp\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f125bcccf6dc188cba9dfe14b1ecd303536f368be08ec9b2bd6d6a7f94365f6f",
          "createdAt": "2024-05-29 15:13:59.711460",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.100.1-3",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "networking/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1beta1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "rhosdt",
          "metrics",
          "monitoring",
          "logging",
          "observability",
          "troubleshooting",
          "tracing",
          "opentelemetry"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b33793126e32e75f4fa02dbb014eaa7458f36c70f316a7383171a02c38509f1"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b33793126e32e75f4fa02dbb014eaa7458f36c70f316a7383171a02c38509f1"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:78e975499886eaf4f833b238ea709f919a37624fee61ec76014dd835c2b6d96c"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:bfc2ac2670869a21f5caf7861f8d06b6080dd2f0b3ee6e544aaa36ed8eba70f6"
    },
    {
      "name": "opentelemetry-rhel8-operator-f125bcccf6dc188cba9dfe14b1ecd303536f368be08ec9b2bd6d6a7f94365f6f-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f125bcccf6dc188cba9dfe14b1ecd303536f368be08ec9b2bd6d6a7f94365f6f"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f125bcccf6dc188cba9dfe14b1ecd303536f368be08ec9b2bd6d6a7f94365f6f"
    },
    {
      "name": "target_allocator",
      "image": "registry.redhat.io/rhosdt/opentelemetry-target-allocator-rhel8@sha256:cc56a712c3e6ece528ff3e20836c3fde5bebd1dd27c7799c3a219dbfafa40ce8"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.102.0-2",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:3c53d78d1aaca0166e8b13d1e98cf983ebbe70ca9fe4ca9ec187ee89ff16f869",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1beta1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.102.0-2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpAMPBridge\",\n    \"metadata\": {\n      \"name\": \"opampbridge-sample\"\n    },\n    \"spec\": {\n      \"capabilities\": {\n        \"AcceptsOpAMPConnectionSettings\": true,\n        \"AcceptsOtherConnectionSettings\": true,\n        \"AcceptsRemoteConfig\": true,\n        \"AcceptsRestartCommand\": true,\n        \"ReportsEffectiveConfig\": true,\n        \"ReportsHealth\": true,\n        \"ReportsOwnLogs\": true,\n        \"ReportsOwnMetrics\": true,\n        \"ReportsOwnTraces\": true,\n        \"ReportsRemoteConfig\": true,\n        \"ReportsStatus\": true\n      },\n      \"componentsAllowed\": {\n        \"exporters\": [\n          \"logging\"\n        ],\n        \"processors\": [\n          \"memory_limiter\"\n        ],\n        \"receivers\": [\n          \"otlp\"\n        ]\n      },\n      \"endpoint\": \"ws://opamp-server:4320/v1/opamp\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc: {}\\n      http: {}\\n\\nexporters:\\n  debug: {}\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1beta1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": {\n        \"exporters\": {\n          \"debug\": {}\n        },\n        \"receivers\": {\n          \"otlp\": {\n            \"protocols\": {\n              \"grpc\": {},\n              \"http\": {}\n            }\n          }\n        },\n        \"service\": {\n          \"pipelines\": {\n            \"traces\": {\n              \"exporters\": [\n                \"debug\"\n              ],\n              \"receivers\": [\n                \"otlp\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:a32591923ba591c898201352840ff0ccaf9898575e4ec8edebef35fa37d396e6",
          "createdAt": "2024-06-10 21:14:18.346212",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.102.0-2",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "networking/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1beta1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "monitoring",
          "troubleshooting",
          "rhosdt",
          "opentelemetry",
          "metrics",
          "observability",
          "tracing",
          "logging"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c2e9805d2c48d3cea7a9e348f0c37de435302e2e244415541c8a6fd75d77132"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c2e9805d2c48d3cea7a9e348f0c37de435302e2e244415541c8a6fd75d77132"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:1f6ad40283f3227e72f56be019fefadcccd27061dadc4a4867e6979dfc8a552f"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:3c53d78d1aaca0166e8b13d1e98cf983ebbe70ca9fe4ca9ec187ee89ff16f869"
    },
    {
      "name": "opentelemetry-rhel8-operator-a32591923ba591c898201352840ff0ccaf9898575e4ec8edebef35fa37d396e6-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:a32591923ba591c898201352840ff0ccaf9898575e4ec8edebef35fa37d396e6"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:a32591923ba591c898201352840ff0ccaf9898575e4ec8edebef35fa37d396e6"
    },
    {
      "name": "target_allocator",
      "image": "registry.redhat.io/rhosdt/opentelemetry-target-allocator-rhel8@sha256:794d38306ddd992acaab68aeb2bb0860d91a3012cdc10f46ce62bc911e2646e9"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.102.0-3",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:8c75ca2230107cfc6b9f3ad0d3a1cb3017ba008d86d24bb5bd2a1477049d3508",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1beta1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.102.0-3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpAMPBridge\",\n    \"metadata\": {\n      \"name\": \"opampbridge-sample\"\n    },\n    \"spec\": {\n      \"capabilities\": {\n        \"AcceptsOpAMPConnectionSettings\": true,\n        \"AcceptsOtherConnectionSettings\": true,\n        \"AcceptsRemoteConfig\": true,\n        \"AcceptsRestartCommand\": true,\n        \"ReportsEffectiveConfig\": true,\n        \"ReportsHealth\": true,\n        \"ReportsOwnLogs\": true,\n        \"ReportsOwnMetrics\": true,\n        \"ReportsOwnTraces\": true,\n        \"ReportsRemoteConfig\": true,\n        \"ReportsStatus\": true\n      },\n      \"componentsAllowed\": {\n        \"exporters\": [\n          \"logging\"\n        ],\n        \"processors\": [\n          \"memory_limiter\"\n        ],\n        \"receivers\": [\n          \"otlp\"\n        ]\n      },\n      \"endpoint\": \"ws://opamp-server:4320/v1/opamp\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc: {}\\n      http: {}\\n\\nexporters:\\n  debug: {}\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1beta1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": {\n        \"exporters\": {\n          \"debug\": {}\n        },\n        \"receivers\": {\n          \"otlp\": {\n            \"protocols\": {\n              \"grpc\": {},\n              \"http\": {}\n            }\n          }\n        },\n        \"service\": {\n          \"pipelines\": {\n            \"traces\": {\n              \"exporters\": [\n                \"debug\"\n              ],\n              \"receivers\": [\n                \"otlp\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:8a57d48da26e705d679ecc89b5f63047aa45e9c42cec7d665576cd8ea89105e4",
          "createdAt": "2024-07-05 18:08:44.175520",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.102.0-3",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "networking/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1beta1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "rhosdt",
          "troubleshooting",
          "observability",
          "metrics",
          "monitoring",
          "logging",
          "tracing",
          "opentelemetry"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:518691d157b3e3b5031a2b1e4cc3f415839536079bb8570ae8690ac92d302ba0"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:518691d157b3e3b5031a2b1e4cc3f415839536079bb8570ae8690ac92d302ba0"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:4050a35b37943c9ccfa835edecaffbe7d1e31ab48e2f491b2e63ac820f8fe15e"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:8c75ca2230107cfc6b9f3ad0d3a1cb3017ba008d86d24bb5bd2a1477049d3508"
    },
    {
      "name": "opentelemetry-rhel8-operator-8a57d48da26e705d679ecc89b5f63047aa45e9c42cec7d665576cd8ea89105e4-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:8a57d48da26e705d679ecc89b5f63047aa45e9c42cec7d665576cd8ea89105e4"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:8a57d48da26e705d679ecc89b5f63047aa45e9c42cec7d665576cd8ea89105e4"
    },
    {
      "name": "target_allocator",
      "image": "registry.redhat.io/rhosdt/opentelemetry-target-allocator-rhel8@sha256:99848798c32f8e498fa863c290a33ae7320239692d75158ff5f945bb02c3f468"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.107.0-4",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:012577622da2228a1a6cba23b027a983864d97d00ddfe6286000a0864ca33769",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1beta1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.107.0-4"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpAMPBridge\",\n    \"metadata\": {\n      \"name\": \"opampbridge-sample\"\n    },\n    \"spec\": {\n      \"capabilities\": {\n        \"AcceptsOpAMPConnectionSettings\": true,\n        \"AcceptsOtherConnectionSettings\": true,\n        \"AcceptsRemoteConfig\": true,\n        \"AcceptsRestartCommand\": true,\n        \"ReportsEffectiveConfig\": true,\n        \"ReportsHealth\": true,\n        \"ReportsOwnLogs\": true,\n        \"ReportsOwnMetrics\": true,\n        \"ReportsOwnTraces\": true,\n        \"ReportsRemoteConfig\": true,\n        \"ReportsStatus\": true\n      },\n      \"componentsAllowed\": {\n        \"exporters\": [\n          \"logging\"\n        ],\n        \"processors\": [\n          \"memory_limiter\"\n        ],\n        \"receivers\": [\n          \"otlp\"\n        ]\n      },\n      \"endpoint\": \"ws://opamp-server:4320/v1/opamp\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc: {}\\n      http: {}\\n\\nexporters:\\n  debug: {}\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1beta1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": {\n        \"exporters\": {\n          \"debug\": {}\n        },\n        \"receivers\": {\n          \"otlp\": {\n            \"protocols\": {\n              \"grpc\": {},\n              \"http\": {}\n            }\n          }\n        },\n        \"service\": {\n          \"pipelines\": {\n            \"traces\": {\n              \"exporters\": [\n                \"debug\"\n              ],\n              \"receivers\": [\n                \"otlp\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9",
          "createdAt": "2024-08-27 20:10:13.287415",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.107.0-4",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "networking/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1beta1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "logging",
          "monitoring",
          "tracing",
          "metrics",
          "observability",
          "troubleshooting",
          "opentelemetry",
          "rhosdt"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:3ac9bb8df6b74ff62b2541477c29a286afd5318b5afec360fafd4d534240d2e4"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:012577622da2228a1a6cba23b027a983864d97d00ddfe6286000a0864ca33769"
    },
    {
      "name": "opentelemetry-rhel8-operator-f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9"
    },
    {
      "name": "target_allocator",
      "image": "registry.redhat.io/rhosdt/opentelemetry-target-allocator-rhel8@sha256:05189646a3c5c2d852dffa19eb0831f8c834cceb16effe3dffa3b3937e3b3dbb"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.107.0-4-0.1727168137.p",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:bcaa31a98d75d650cd3f4d30065b1c4cf5f72c71752a4b7c002e4a44986c2452",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1beta1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.107.0-4+0.1727168137.p"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpAMPBridge\",\n    \"metadata\": {\n      \"name\": \"opampbridge-sample\"\n    },\n    \"spec\": {\n      \"capabilities\": {\n        \"AcceptsOpAMPConnectionSettings\": true,\n        \"AcceptsOtherConnectionSettings\": true,\n        \"AcceptsRemoteConfig\": true,\n        \"AcceptsRestartCommand\": true,\n        \"ReportsEffectiveConfig\": true,\n        \"ReportsHealth\": true,\n        \"ReportsOwnLogs\": true,\n        \"ReportsOwnMetrics\": true,\n        \"ReportsOwnTraces\": true,\n        \"ReportsRemoteConfig\": true,\n        \"ReportsStatus\": true\n      },\n      \"componentsAllowed\": {\n        \"exporters\": [\n          \"logging\"\n        ],\n        \"processors\": [\n          \"memory_limiter\"\n        ],\n        \"receivers\": [\n          \"otlp\"\n        ]\n      },\n      \"endpoint\": \"ws://opamp-server:4320/v1/opamp\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc: {}\\n      http: {}\\n\\nexporters:\\n  debug: {}\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1beta1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": {\n        \"exporters\": {\n          \"debug\": {}\n        },\n        \"receivers\": {\n          \"otlp\": {\n            \"protocols\": {\n              \"grpc\": {},\n              \"http\": {}\n            }\n          }\n        },\n        \"service\": {\n          \"pipelines\": {\n            \"traces\": {\n              \"exporters\": [\n                \"debug\"\n              ],\n              \"receivers\": [\n                \"otlp\"\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9",
          "createdAt": "2024-08-27 20:10:13.287415",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "true",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.107.0-4",
          "olm.substitutesFor": "opentelemetry-operator.v0.107.0-4",
          "operatorframework.io/cluster-monitoring": "true",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Ingress",
                  "version": "networking/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1beta1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": false
          },
          {
            "type": "SingleNamespace",
            "supported": false
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "logging",
          "monitoring",
          "tracing",
          "metrics",
          "observability",
          "troubleshooting",
          "opentelemetry",
          "rhosdt"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3bdc1c83af9be6d9609db0ac660e339b7f44064e529f572fc3e1db8af704eeeb"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:dab07732163f0241e78619a91ab0beec81eb0b3f1f28b8365ce3701f4e8f4996"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:bcaa31a98d75d650cd3f4d30065b1c4cf5f72c71752a4b7c002e4a44986c2452"
    },
    {
      "name": "opentelemetry-rhel8-operator-f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:f50cc0ff4bd0af92d2db06fef2da4866f6e9eddb7f90a317eaeb6602f88236e9"
    },
    {
      "name": "target_allocator",
      "image": "registry.redhat.io/rhosdt/opentelemetry-target-allocator-rhel8@sha256:05189646a3c5c2d852dffa19eb0831f8c834cceb16effe3dffa3b3937e3b3dbb"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.56.0-1",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:ff28ea331d4ec54aec6060cd742460bb7fca4bde9be4344d5ac6bbf7a026f053",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.56.0-1"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  logging:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [logging]\\n\"\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Logging & Tracing",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:cc36cd13dad38621c71661b0631880da1a5154bd8cdef1d357fa5140fdce4023",
          "createdAt": "2022-07-28 14:37:46.501379",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "olm.skipRange": ">=0.33.0 <0.56.0-1",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "operators.operatorframework.io/builder": "operator-sdk-v1.22.1",
          "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing data collection is based on OpenTelemetry. It is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n### Support & Troubleshooting\n\nRed Hat OpenShift distributed tracing data collection is available as part of a Red Hat OpenShift subscription.  This operator is at the moment tech-preview.",
        "displayName": "Red Hat OpenShift distributed tracing data collection",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "opentelemetry",
          "tracing",
          "logging",
          "metrics",
          "monitoring",
          "troubleshooting"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5788b159ae45b1ec72445700b3c34d5ad0aa9451234a06ed7e465034fa79edc2"
    },
    {
      "name": "opentelemetry_collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:2a70ab4e5dc4294090f4da0d7451bb101d03a057ebf364dad84c385e5fb63fb9"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:ff28ea331d4ec54aec6060cd742460bb7fca4bde9be4344d5ac6bbf7a026f053"
    },
    {
      "name": "opentelemetry-rhel8-operator-cc36cd13dad38621c71661b0631880da1a5154bd8cdef1d357fa5140fdce4023-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:cc36cd13dad38621c71661b0631880da1a5154bd8cdef1d357fa5140fdce4023"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:cc36cd13dad38621c71661b0631880da1a5154bd8cdef1d357fa5140fdce4023"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.60.0-2",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:72b9b6e4cefe7defabfbc0a538e06b72ddd4bf5be653c4ec5acc7afee1c114ae",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.60.0-2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  logging:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [logging]\\n\"\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Logging & Tracing",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:55913290ceea4487dc94ea302f971de9372a8a228ba60c597122f7038c4748ef",
          "createdAt": "2022-09-28 16:39:42.286123",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "olm.skipRange": ">=0.33.0 <0.60.0-2",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "operators.operatorframework.io/builder": "operator-sdk-v1.23.0",
          "operators.operatorframework.io/project_layout": "go.kubebuilder.io/v3",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing data collection is based on OpenTelemetry. It is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n### Support & Troubleshooting\n\nRed Hat OpenShift distributed tracing data collection is available as part of a Red Hat OpenShift subscription.  This operator is at the moment tech-preview.",
        "displayName": "Red Hat OpenShift distributed tracing data collection",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "opentelemetry",
          "tracing",
          "logging",
          "metrics",
          "monitoring",
          "troubleshooting"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d"
    },
    {
      "name": "opentelemetry_collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:526b5140e13e6adbb5e9f4a1333c4017bbd9595001f2d39c4e1452e1e1f9e7ca"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:72b9b6e4cefe7defabfbc0a538e06b72ddd4bf5be653c4ec5acc7afee1c114ae"
    },
    {
      "name": "opentelemetry-rhel8-operator-55913290ceea4487dc94ea302f971de9372a8a228ba60c597122f7038c4748ef-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:55913290ceea4487dc94ea302f971de9372a8a228ba60c597122f7038c4748ef"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:55913290ceea4487dc94ea302f971de9372a8a228ba60c597122f7038c4748ef"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.74.0-5",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:202ee7fa0a4ec49d6982c62a322dcfb5994984a3e8382cc2ff56806f65ed2070",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.74.0-5"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  logging:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [logging]\\n\"\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Logging & Tracing",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:978af4878391a5e8cb06938f89d0e207ecc2bb6b82c54928022c9ac24325151d",
          "createdAt": "2023-04-17 15:44:24.374465",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "olm.skipRange": ">=0.33.0 <0.74.0-5",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing data collection is based on OpenTelemetry. It is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat OpenShift distributed tracing data collection is available as part of a Red Hat OpenShift subscription.  This operator is at the moment tech-preview.",
        "displayName": "Red Hat OpenShift distributed tracing data collection",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "opentelemetry",
          "tracing",
          "logging",
          "metrics",
          "monitoring",
          "troubleshooting"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cfe13de6cd2e2b30040543d013931accb44df308ae64216c9c66c19f3fbfd7"
    },
    {
      "name": "opentelemetry_collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:551680c99e03efc3650373713548f1d63c35efcec83b6202230a3f8e18c4965e"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:202ee7fa0a4ec49d6982c62a322dcfb5994984a3e8382cc2ff56806f65ed2070"
    },
    {
      "name": "opentelemetry-rhel8-operator-978af4878391a5e8cb06938f89d0e207ecc2bb6b82c54928022c9ac24325151d-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:978af4878391a5e8cb06938f89d0e207ecc2bb6b82c54928022c9ac24325151d"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:978af4878391a5e8cb06938f89d0e207ecc2bb6b82c54928022c9ac24325151d"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.74.0-5-0.1687199949.p",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:aa36de9f82a844c7fbc599706d96186d6702c5489f21264743fdc80ab841d2f3",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.74.0-5+0.1687199949.p"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  logging:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [logging]\\n\"\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Logging & Tracing",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:1117a41b9b3b3bc96bf8569c01ef9752a572eba68df81f318df70eb283442cf3",
          "createdAt": "2023-04-17 15:44:24.374465",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "olm.skipRange": ">=0.33.0 <0.74.0-5",
          "olm.substitutesFor": "opentelemetry-operator.v0.74.0-5",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing data collection is based on OpenTelemetry. It is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat OpenShift distributed tracing data collection is available as part of a Red Hat OpenShift subscription.  This operator is at the moment tech-preview.",
        "displayName": "Red Hat OpenShift distributed tracing data collection",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "opentelemetry",
          "tracing",
          "logging",
          "metrics",
          "monitoring",
          "troubleshooting"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cfe13de6cd2e2b30040543d013931accb44df308ae64216c9c66c19f3fbfd7"
    },
    {
      "name": "opentelemetry_collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:2cf260e306edf91c8405eb27e683f0c112b06fce33c9dc57d31e63713a963fdf"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:aa36de9f82a844c7fbc599706d96186d6702c5489f21264743fdc80ab841d2f3"
    },
    {
      "name": "opentelemetry-rhel8-operator-1117a41b9b3b3bc96bf8569c01ef9752a572eba68df81f318df70eb283442cf3-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:1117a41b9b3b3bc96bf8569c01ef9752a572eba68df81f318df70eb283442cf3"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:1117a41b9b3b3bc96bf8569c01ef9752a572eba68df81f318df70eb283442cf3"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.81.1-5",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:eaa126d86aecf2bd330f2234104a905a71ab280a4d74a2614d98daaf13e821e2",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.81.1-5"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  logging:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [logging]\\n\"\n    }\n  }\n]",
          "capabilities": "Basic Install",
          "categories": "Logging & Tracing",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:d4833cb504c2dc3176a9a4b50469c11bcb8a1b0f068179348df7fb1c303470d8",
          "createdAt": "2023-10-27 14:40:24.484939",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "olm.skipRange": ">=0.33.0 <0.81.1-5",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ]
            }
          ]
        },
        "description": "Red Hat OpenShift distributed tracing data collection is based on OpenTelemetry. It is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat OpenShift distributed tracing data collection is available as part of a Red Hat OpenShift subscription.  This operator is at the moment tech-preview.",
        "displayName": "Red Hat OpenShift distributed tracing data collection",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "observability",
          "troubleshooting",
          "metrics",
          "tracing",
          "monitoring",
          "opentelemetry",
          "rhosdt",
          "logging"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1dddb0988d1612c996707d43eb839bc49fc7e7554afaf085436eeddb37a12438"
    },
    {
      "name": "opentelemetry_collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:03ab27f7545336bcf77b9c30bf7aac398e6130b79a6fa3d65f776105912d5c41"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:eaa126d86aecf2bd330f2234104a905a71ab280a4d74a2614d98daaf13e821e2"
    },
    {
      "name": "opentelemetry-rhel8-operator-d4833cb504c2dc3176a9a4b50469c11bcb8a1b0f068179348df7fb1c303470d8-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:d4833cb504c2dc3176a9a4b50469c11bcb8a1b0f068179348df7fb1c303470d8"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:d4833cb504c2dc3176a9a4b50469c11bcb8a1b0f068179348df7fb1c303470d8"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.89.0-3",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:96f07636b69ff639d3a1f17ffe8b9bde8ed2cc1307b86fa016cd5d716a3c97e2",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.89.0-3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  debug:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:4a3dc6c1872b3ccaac6079d4cba6d3eeef8e943f8b893f9f03f9e6ea7309789e",
          "createdAt": "2023-11-23 14:25:49.276551",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.89.0-3",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor should be created for the OpenTelemetry Collector and Prometheus Exporters. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "tracing",
          "rhosdt",
          "logging",
          "troubleshooting",
          "monitoring",
          "metrics",
          "opentelemetry",
          "observability"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cade2c1ee468261aec5400728c8d44de387b459134aec7a4c3b5ec5a335d2c"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cade2c1ee468261aec5400728c8d44de387b459134aec7a4c3b5ec5a335d2c"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:87a61a48aeb585efc5209ec313443b7914ad9ee7d0e0a09a20fb243e1ee7acf0"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:96f07636b69ff639d3a1f17ffe8b9bde8ed2cc1307b86fa016cd5d716a3c97e2"
    },
    {
      "name": "opentelemetry-rhel8-operator-4a3dc6c1872b3ccaac6079d4cba6d3eeef8e943f8b893f9f03f9e6ea7309789e-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:4a3dc6c1872b3ccaac6079d4cba6d3eeef8e943f8b893f9f03f9e6ea7309789e"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:4a3dc6c1872b3ccaac6079d4cba6d3eeef8e943f8b893f9f03f9e6ea7309789e"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.93.0-2",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:b81659ff1078ef598924ff354ce1d77a2e33f43a09c712b7213c3e38c93d9bac",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.93.0-2"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpAMPBridge\",\n    \"metadata\": {\n      \"name\": \"opampbridge-sample\"\n    },\n    \"spec\": {\n      \"capabilities\": {\n        \"AcceptsOpAMPConnectionSettings\": true,\n        \"AcceptsOtherConnectionSettings\": true,\n        \"AcceptsRemoteConfig\": true,\n        \"AcceptsRestartCommand\": true,\n        \"ReportsEffectiveConfig\": true,\n        \"ReportsHealth\": true,\n        \"ReportsOwnLogs\": true,\n        \"ReportsOwnMetrics\": true,\n        \"ReportsOwnTraces\": true,\n        \"ReportsRemoteConfig\": true,\n        \"ReportsStatus\": true\n      },\n      \"componentsAllowed\": {\n        \"exporters\": [\n          \"logging\"\n        ],\n        \"processors\": [\n          \"memory_limiter\"\n        ],\n        \"receivers\": [\n          \"otlp\"\n        ]\n      },\n      \"endpoint\": \"ws://opamp-server:4320/v1/opamp\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  debug:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:86bd66aa45ccfd42c12e07346b765001fd566878c2706b7462b0eb1d52a8e305",
          "createdAt": "2024-02-06 17:49:24.420335",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.93.0-2",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "opentelemetry",
          "troubleshooting",
          "tracing",
          "rhosdt",
          "logging",
          "metrics",
          "observability",
          "monitoring"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62c44057a27abd41cf3daf60b8736da59a82dadb65fa6c32bef65d19bd49ea49"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62c44057a27abd41cf3daf60b8736da59a82dadb65fa6c32bef65d19bd49ea49"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:9357a00b108302fe58f649e942d7953fbf1ac9eb41c3c566ec7908a8e872e00a"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:b81659ff1078ef598924ff354ce1d77a2e33f43a09c712b7213c3e38c93d9bac"
    },
    {
      "name": "opentelemetry-rhel8-operator-86bd66aa45ccfd42c12e07346b765001fd566878c2706b7462b0eb1d52a8e305-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:86bd66aa45ccfd42c12e07346b765001fd566878c2706b7462b0eb1d52a8e305"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:86bd66aa45ccfd42c12e07346b765001fd566878c2706b7462b0eb1d52a8e305"
    },
    {
      "name": "target_allocator",
      "image": "registry.redhat.io/rhosdt/opentelemetry-target-allocator-rhel8@sha256:70206183009c9efbac6f5994d9a284de8c3c170927532b1cf625c51e5e388b3c"
    }
  ]
}
{
  "schema": "olm.bundle",
  "name": "opentelemetry-operator.v0.93.0-3",
  "package": "opentelemetry-product",
  "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:a0fefcdad179cb5555feacfbc226354969258925c9b9259d13fd6959a77a4884",
  "properties": [
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "Instrumentation",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpAMPBridge",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.gvk",
      "value": {
        "group": "opentelemetry.io",
        "kind": "OpenTelemetryCollector",
        "version": "v1alpha1"
      }
    },
    {
      "type": "olm.package",
      "value": {
        "packageName": "opentelemetry-product",
        "version": "0.93.0-3"
      }
    },
    {
      "type": "olm.csv.metadata",
      "value": {
        "annotations": {
          "alm-examples": "[\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"Instrumentation\",\n    \"metadata\": {\n      \"name\": \"instrumentation\"\n    },\n    \"spec\": {\n      \"exporter\": {\n        \"endpoint\": \"http://otel-collector-headless:4317\"\n      }\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpAMPBridge\",\n    \"metadata\": {\n      \"name\": \"opampbridge-sample\"\n    },\n    \"spec\": {\n      \"capabilities\": {\n        \"AcceptsOpAMPConnectionSettings\": true,\n        \"AcceptsOtherConnectionSettings\": true,\n        \"AcceptsRemoteConfig\": true,\n        \"AcceptsRestartCommand\": true,\n        \"ReportsEffectiveConfig\": true,\n        \"ReportsHealth\": true,\n        \"ReportsOwnLogs\": true,\n        \"ReportsOwnMetrics\": true,\n        \"ReportsOwnTraces\": true,\n        \"ReportsRemoteConfig\": true,\n        \"ReportsStatus\": true\n      },\n      \"componentsAllowed\": {\n        \"exporters\": [\n          \"logging\"\n        ],\n        \"processors\": [\n          \"memory_limiter\"\n        ],\n        \"receivers\": [\n          \"otlp\"\n        ]\n      },\n      \"endpoint\": \"ws://opamp-server:4320/v1/opamp\"\n    }\n  },\n  {\n    \"apiVersion\": \"opentelemetry.io/v1alpha1\",\n    \"kind\": \"OpenTelemetryCollector\",\n    \"metadata\": {\n      \"name\": \"otel\"\n    },\n    \"spec\": {\n      \"config\": \"receivers:\\n  otlp:\\n    protocols: \\n      grpc:\\n      http:\\n\\nexporters:\\n  debug:\\n\\nservice:\\n  pipelines:\\n    traces:\\n      receivers: [otlp]\\n      exporters: [debug]\\n\"\n    }\n  }\n]",
          "capabilities": "Deep Insights",
          "categories": "Logging & Tracing,Monitoring",
          "certified": "false",
          "containerImage": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:7730b4e2fadf23be6e00928f6b79914e7096844980c3222e6ba5141b5c912dfb",
          "createdAt": "2024-03-07 11:45:17.118272",
          "description": "Provides the OpenTelemetry components, including the Collector",
          "features.operators.openshift.io/disconnected": "true",
          "features.operators.openshift.io/fips-compliant": "false",
          "features.operators.openshift.io/proxy-aware": "true",
          "features.operators.openshift.io/tls-profiles": "false",
          "features.operators.openshift.io/token-auth-aws": "false",
          "features.operators.openshift.io/token-auth-azure": "false",
          "features.operators.openshift.io/token-auth-gcp": "false",
          "olm.skipRange": ">=0.33.0 <0.93.0-3",
          "operatorframework.io/suggested-namespace": "openshift-opentelemetry-operator",
          "operators.openshift.io/infrastructure-features": "[\"disconnected\"]",
          "operators.openshift.io/valid-subscription": "[\"OpenShift Container Platform\", \"OpenShift Platform Plus\"]",
          "repository": "github.com/open-telemetry/opentelemetry-operator",
          "support": "Red Hat"
        },
        "apiServiceDefinitions": {},
        "crdDescriptions": {
          "owned": [
            {
              "name": "instrumentations.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "Instrumentation",
              "displayName": "OpenTelemetry Instrumentation",
              "description": "Instrumentation is the spec for OpenTelemetry instrumentation.",
              "resources": [
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opampbridges.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpAMPBridge",
              "displayName": "OpAMP Bridge",
              "description": "OpAMPBridge is the Schema for the opampbridges API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                }
              ]
            },
            {
              "name": "opentelemetrycollectors.opentelemetry.io",
              "version": "v1alpha1",
              "kind": "OpenTelemetryCollector",
              "displayName": "OpenTelemetry Collector",
              "description": "OpenTelemetryCollector is the Schema for the opentelemetrycollectors API.",
              "resources": [
                {
                  "name": "",
                  "kind": "ConfigMaps",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "DaemonSets",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Deployment",
                  "version": "apps/v1"
                },
                {
                  "name": "",
                  "kind": "Pod",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "Service",
                  "version": "v1"
                },
                {
                  "name": "",
                  "kind": "StatefulSets",
                  "version": "apps/v1"
                }
              ],
              "specDescriptors": [
                {
                  "path": "observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                },
                {
                  "path": "targetAllocator.observability",
                  "displayName": "Observability",
                  "description": "ObservabilitySpec defines how telemetry data gets handled."
                },
                {
                  "path": "targetAllocator.observability.metrics",
                  "displayName": "Metrics Config",
                  "description": "Metrics defines the metrics configuration for operands."
                },
                {
                  "path": "targetAllocator.observability.metrics.enableMetrics",
                  "displayName": "Create ServiceMonitors for OpenTelemetry Collector",
                  "description": "EnableMetrics specifies if ServiceMonitor or PodMonitor(for sidecar mode) should be created for the service managed by the OpenTelemetry Operator. The operator.observability.prometheus feature gate must be enabled to use this feature."
                }
              ]
            }
          ]
        },
        "description": "Red Hat build of OpenTelemetry is a collection of tools, APIs, and SDKs. You use it to instrument, generate, collect, and export telemetry data (metrics, logs, and traces) for analysis in order to understand your software's performance and behavior.\nThis operator was previously called Red Hat OpenShift distributed tracing data collection.\n\n### Operator features\n\n* **Sidecar injection** - annotate your pods and let the operator inject a sidecar.\n* **Managed upgrades** - updating the operator will automatically update your OpenTelemetry collectors.\n* **Deployment modes** - your collector can be deployed as sidecar, daemon set, or regular deployment.\n* **Service port management** - the operator detects which ports need to be exposed based on the provided configuration.\n\n## Examples\n\nThere is a list of examples to help you deploy different configurations in [this GitHub repository](https://github.com/os-observability/redhat-rhosdt-samples)\n\n### Support & Troubleshooting\n\nRed Hat build of OpenTelemetry is available as part of a Red Hat OpenShift subscription.",
        "displayName": "Red Hat build of OpenTelemetry",
        "installModes": [
          {
            "type": "OwnNamespace",
            "supported": true
          },
          {
            "type": "SingleNamespace",
            "supported": true
          },
          {
            "type": "MultiNamespace",
            "supported": false
          },
          {
            "type": "AllNamespaces",
            "supported": true
          }
        ],
        "keywords": [
          "metrics",
          "troubleshooting",
          "logging",
          "monitoring",
          "observability",
          "opentelemetry",
          "tracing",
          "rhosdt"
        ],
        "labels": {
          "operatorframework.io/arch.amd64": "supported",
          "operatorframework.io/arch.arm64": "supported",
          "operatorframework.io/arch.ppc64le": "supported",
          "operatorframework.io/arch.s390x": "supported"
        },
        "links": [
          {
            "name": "OpenTelemetry Operator",
            "url": "https://github.com/open-telemetry/opentelemetry-operator"
          }
        ],
        "maintainers": [
          {
            "name": "Distributed tracing team",
            "email": "jaeger-prod@redhat.com"
          }
        ],
        "maturity": "alpha",
        "minKubeVersion": "1.23.0",
        "provider": {
          "name": "Red Hat"
        }
      }
    }
  ],
  "relatedImages": [
    {
      "name": "kube-rbac-proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dceccbe9fc4bc9c482add48a0ac7f445dadf548cce2e2ff2d1764fc31a6cfa41"
    },
    {
      "name": "ose_kube_rbac_proxy",
      "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dceccbe9fc4bc9c482add48a0ac7f445dadf548cce2e2ff2d1764fc31a6cfa41"
    },
    {
      "name": "collector",
      "image": "registry.redhat.io/rhosdt/opentelemetry-collector-rhel8@sha256:9522e916f0b0709fd59ea5c6385aa401960b92e084eb14e4ddc56e5a006bc70d"
    },
    {
      "name": "",
      "image": "registry.redhat.io/rhosdt/opentelemetry-operator-bundle@sha256:a0fefcdad179cb5555feacfbc226354969258925c9b9259d13fd6959a77a4884"
    },
    {
      "name": "opentelemetry-rhel8-operator-7730b4e2fadf23be6e00928f6b79914e7096844980c3222e6ba5141b5c912dfb-annotation",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:7730b4e2fadf23be6e00928f6b79914e7096844980c3222e6ba5141b5c912dfb"
    },
    {
      "name": "manager",
      "image": "registry.redhat.io/rhosdt/opentelemetry-rhel8-operator@sha256:7730b4e2fadf23be6e00928f6b79914e7096844980c3222e6ba5141b5c912dfb"
    },
    {
      "name": "target_allocator",
      "image": "registry.redhat.io/rhosdt/opentelemetry-target-allocator-rhel8@sha256:317ec0de6548b46e15baa02b5760b9571af085450f1095832b99993ada263718"
    }
  ]
}

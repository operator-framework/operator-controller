name: release

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
    - main
  merge_group:

jobs:
  goreleaser:
    name: goreleaser
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version-file: "go.mod"
        cache-dependency-path: |
          go.sum
          .bingo/**.sum

    - name: Docker Login
      if: ${{ github.event_name != 'pull_request' }}
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Set the release related variables
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          # Release tags.
          echo IMAGE_TAG="${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo GORELEASER_ARGS="--clean" >> $GITHUB_ENV
          echo ENABLE_RELEASE_PIPELINE=true >> $GITHUB_ENV
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          # Branch build.
          echo IMAGE_TAG="$(echo "${GITHUB_REF#refs/heads/}" | sed -r 's|/+|-|g')" >> $GITHUB_ENV
          echo GORELEASER_ARGS="--clean --skip-validate" >> $GITHUB_ENV
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          # PR build.
          echo IMAGE_TAG="pr-$(echo "${GITHUB_REF}" | sed -E 's|refs/pull/([^/]+)/?.*|\1|')" >> $GITHUB_ENV
        else
          echo IMAGE_TAG="$(git describe --tags --always)" >> $GITHUB_ENV
        fi

    - name: Generate the operator-controller release manifests
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      run: |
        echo VERSION="${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        make quickstart

    - name: Run goreleaser
      run: make release
      env:
        GITHUB_TOKEN: ${{ github.token }}
